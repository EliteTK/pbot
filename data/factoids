[##c]
<!>
action: the unary boolean not operator
created_on: 1104600621
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095870.37028
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 151
ref_user: qwename!~qwename@198.13.214.119
type: text

<!!>
action: /say !! is a common idiom for normalizing booleans - it will turn any nonzero value into 1, and leave zero at 0. For example, !!50 is 1.
created_on: 1262200005
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1486143908.72445
noembed: 1
owner: Random832
rate_limit: 15
ref_count: 36
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<!=>
action: the comparison for inequality operator
created_on: 1104871606
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1393275955.56872
owner: Major-Willard
rate_limit: 15
ref_count: 7
ref_user: rob``!~rob@gtng-4db046fc.pool.mediaWays.net
type: text

<!false>
action: true
created_on: 1270856176
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1467682260.39029
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: fluter!~fluter@fedora/fluter
type: text

<!true>
action: false
created_on: 1467682291.1828
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1467682348.80319
owner: fluter!~fluter@fedora/fluter
rate_limit: 15
ref_count: 1
ref_user: fluter!~fluter@fedora/fluter
type: text

<">
action: the character that begins and terminates a string literal
created_on: 1106527346
enabled: 1
last_referenced_in: gorroth
last_referenced_on: 1445119084.54369
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 6
ref_user: gorroth!~pi@unaffiliated/gorroth
type: text

<#>
action: used to commence a preprocessor directive (include, define, undef, ifdef, ifndef, pragma) and as the stringization operator (#x).
created_on: 1197579677
enabled: 1
last_referenced_in: gorroth
last_referenced_on: 1445119103.26576
noembed: 1
owner: Auris-
rate_limit: 15
ref_count: 12
ref_user: gorroth!~pi@unaffiliated/gorroth
type: text

<##>
action: the preprocessor concatenation (token pasting) operator.
created_on: 1211531275
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1476114962.60817
owner: Auris-
rate_limit: 15
ref_count: 26
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<##c>
action: /say ##c is for discussion involving the C programming language itself. We do not deal with the whole range of the spectrum. libgtk may be written in C, but this is hardly the proper channel for GTK-related questions.  Try #gtk.  Likewise, makefiles and autotools: #devtools, assembly: #asm, Xlib: #xlib, C++: #c++, and so on.
created_on: 1245454768
enabled: 1
last_referenced_in: devut
last_referenced_on: 1485070079.50125
noembed: 1
owner: anttil
rate_limit: 15
ref_count: 40
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<#c>
action: /call ##c
created_on: 1109029677
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445940926.51094
owner: pragma_
rate_limit: 15
ref_count: 28
ref_user: fluter!~fluter@fedora/fluter
type: text

<#c++>
action: not ##C—down the hall, down the stairs, next to the boiler-room—across from ##C-sharp. (##objc is behind the boilers—be careful).
created_on: 1278891031.30827
edited_by: edk!edk@spy/edk0
edited_on: 1465495155.67481
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445940937.10026
owner: PoppaVic
rate_limit: 15
ref_count: 23
ref_user: fluter!~fluter@fedora/fluter
type: text

<#fstd3>
action: /call fstd4
created_on: 1467682884.91053
enabled: 1
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<#fstd4>
action: /call fstd5
created_on: 1467682890.27147
enabled: 1
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<#fstd5>
action: /call fstd6
created_on: 1467682894.9369
enabled: 1
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<$>
action: a character that has no special meaning
created_on: 1106526551
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1440955493.8419
owner: Major-Willard
rate_limit: 15
ref_count: 8
ref_user: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
type: text

<%>
action: the remainder after division operator
created_on: 1106531636
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1435929441.56942
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 7
ref_user: kate!~kate@unaffiliated/kate
type: text

<%:>
action: digraph alternative for #
created_on: 1104401858
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445940947.26815
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: fluter!~fluter@fedora/fluter
type: text

<%:%:>
action: digraph alternative for ##
created_on: 1104401865
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<%>>
action: digraph alternative for }
created_on: 1104616316
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<%b>
action: a candide extension written by Wulf
created_on: 1331879495.431
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445940784.89189
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: fluter!~fluter@fedora/fluter
type: text

<%d>
action: a *printf format specifier which converts its signed int argument to decimal representation; a *scanf format specifier which parses a decimal representation to its int* argument
created_on: 1104400903
enabled: 1
last_referenced_in: luka00
last_referenced_on: 1435657870.38919
owner: prec
rate_limit: 15
ref_count: 4
ref_user: Luka00!~chatzilla@78-134-48-170.v4.ngi.it
type: text

<%f>
action: /call double
created_on: 1262199608
enabled: 1
last_referenced_on: 1341938153.55983
owner: Random832
rate_limit: 15
ref_count: 6
ref_user: Kenaniah
type: text

<%p>
action: the printf/scanf format specifier used to print/read void pointers
created_on: 1106868530
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1468510404.70758
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: cousteau!869356f3@gateway/web/freenode/ip.134.147.86.243
type: text

<%zu>
action: the printf format specifier used to print size_t values (sizeof, strlen, etc)
created_on: 1106868530
enabled: 1
last_referenced_in: maxxe
last_referenced_on: 1372677100.70846
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: maxxe
type: text

<&>
action: the bitwise AND binary operator.  It is also the unary address-of operator.
created_on: 1104602453
edited_by: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
edited_on: 1385023744.37752
enabled: 1
last_referenced_in: edk
last_referenced_on: 1425930396.32489
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 21
ref_user: edk!edk@spy/edk0
type: text

<&&>
action: the McCarthy logical-and binary operator
created_on: 1106515352
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1457715260.28167
owner: Major-Willard
rate_limit: 15
ref_count: 8
ref_user: corentin!~corentin@unaffiliated/corentin
type: text

<&=>
action: the bitwise inclusive-AND assignment operator.  The expression (x &= y) is equivalent to (x = x & y) except that the expression x is evaluated only once.
created_on: 1107898482
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1290169948.10744
owner: prec
rate_limit: 15
ref_count: 1
ref_user: ule
type: text

<&x->y>
action: The address of the y member of the structure pointed to by x.
created_on: 1107406471
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: prec
type: text

<&x[y]>
action: equivalent to (x+y).  Neither the & operator nor the implied * operator (see x[y]) are evaluated.
created_on: 1107730768
enabled: 1
last_referenced_in: w41_
last_referenced_on: 1405696132.79225
owner: prec
rate_limit: 15
ref_count: 7
ref_user: w41_!~w41@unaffiliated/w41
type: text

<'>
action: the character that begins and terminates a character constant
created_on: 1106526412
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1441192491.60185
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 3
ref_user: MethylatorX!~Methylato@41.238.152.87
type: text

<''>
action: the delimiter of the start and end of a char
created_on: 1104887580
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1348679122.73116
owner: Major-Willard
rate_limit: 15
ref_count: 1
ref_user: pragma-
type: text

<(>
action: used to commence a grouped expression
created_on: 1106527263
enabled: 1
last_referenced_in: k0hax
last_referenced_on: 1430510331.37331
owner: Major-Willard
rate_limit: 15
ref_count: 4
ref_user: K0HAX!~K0HAX@c-75-72-143-131.hsd1.mn.comcast.net
type: text

<)>
action: used to terminate a grouped expression
created_on: 1106527206
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1440888452.44233
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 3
ref_user: edk!~edk@spy/edk0
type: text

<*>
action: the multiplication binary operator.  It is also the unary pointer dereference operator.  It is also used in declarations to declare a variable which is a pointer to a type: <type> *p;
created_on: 1104600319
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612519.14235
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 35
ref_user: Amun_Ra!~amun-ra@retro.rocks
type: text

<*(x+y)>
action: syntactic exercise for x[y]
created_on: 1425319490.48973
enabled: 1
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<*=>
action: the operator that multiplies the lvalue [to the left of the *] by the expression [to the right of the =]
created_on: 1107662838
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<+>
action: the addition binary operator
created_on: 1104595760
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1360739839.26402
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 9
ref_user: rob```
type: text

<++>
action: a unary operator that increments basic types by 1; if it is placed before a variable the value of the expression is: <var> + 1; if it is placed after a variable the value of the expression is: <var>
created_on: 1105219173
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1412840515.65296
owner: Major-Willard
rate_limit: 15
ref_count: 5
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<+=>
action: the operator that adds the expression [to the right of the =] to the lvalue [to the left of the +]
created_on: 1107661684
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<,>
action: the sequence operator.  It is also used to separate syntactic elements of: function arguments in a function call, declarators (in declarations of the same type), formal parameters in function declarations, enumeration elements, and initializers.
created_on: 1107316491
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483458209.68861
noembed: 1
owner: prec
rate_limit: 15
ref_count: 72
ref_user: Xatenev!~Gerd@pd907f4d2.dip0.t-ipconnect.de
type: text

<->
action: the unary negation operator; the binary subtraction operator
created_on: 1104595811
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440888236.90124
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 15
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<-->
action: a unary operator that decrements basic types by 1; if it is placed before a variable the value of the expression is: <var> - 1; if it is placed after a variable the value of the expression is: <var>
created_on: 1105219433
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1436979411.83044
owner: Major-Willard
rate_limit: 15
ref_count: 4
ref_user: X7123M3-256!~TestName@80.229.124.232
type: text

<-=>
action: the operator that subtracts the expression [to the right of the =] to the lvalue [to the left of the -]
created_on: 1107661964
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<->>
action: the operator that dereferences a pointer to permit access to a structure/union member.  The expressions (x->y) and ((*x).y) are equivalent.
created_on: 1104601334
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1443613620.76421
owner: Major-Willard
rate_limit: 15
ref_count: 33
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<-Wall>
action: not sufficient enough.  Use -Wall -Wextra.
created_on: 1275902093
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1386877829.87915
owner: pragma_
rate_limit: 15
ref_count: 11
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<-lm>
action: the standard UNIX linker command line option to link the functions in the math library.
created_on: 1106448497
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1478566026.27397
owner: prec
rate_limit: 15
ref_count: 7
ref_user: Random832!~random@unaffiliated/random832
type: text

<-pedantic>
action: a GCC flag that issues all warnings demanded by strict ISO C; rejects most programs that use forbidden extensions; should not be used to check for strict ISO conformance as it only warns for coding practices that _require_ a diagnostic, not everything; loosely supported
created_on: 1107929320
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424387378.15053
owner: pragma_
rate_limit: 15
ref_count: 10
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<-std>
action: a GCC flag that is used to specify which C standard to follow when compiling; some valid standards are: c89 (-ansi), c99, gnu89 (default), gnu99
created_on: 1107929785
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1414014500.52401
owner: pragma_
rate_limit: 15
ref_count: 19
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<.>
action: /say . might be a decimal point or the beginning of a struct member postfix operator or initialisation designator.
created_on: 1104600864
edited_by: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
edited_on: 1405234998.69122
enabled: 1
last_referenced_in: jeks
last_referenced_on: 1485725216.37456
owner: Major-Willard
rate_limit: 15
ref_count: 49
ref_user: JeKs!~yaaic@ip-109-43-1-43.web.vodafone.de
type: text

<...>
action: an ellipsis; used to mark a function or macro as variadic.  variadic macros were added by C99.
created_on: 1106943402
enabled: 1
last_referenced_in: meeseeks
last_referenced_on: 1468451435.47404
noembed: 1
owner: prec
rate_limit: 15
ref_count: 28
ref_user: meeseeks!~darkseid@ipwndyour.pw
type: text

</>
action: the division binary operator
created_on: 1104600246
enabled: 1
last_referenced_in: jm0
last_referenced_on: 1482518370.74906
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 3
ref_user: jm0!~jm0@188-182-177-14-static.dk.customer.tdc.net
type: text

<//>
action: used to introduce a comment that continues to the end of the line [C99]
created_on: 1108293482
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1360470315.93619
owner: Major-Willard
rate_limit: 15
ref_count: 3
ref_user: pragma-
type: text

</=>
action: the division assignment operator.  The expression (x /= y) is equivalent to (x = x / y) except that the expression x is evaluated only once.
created_on: 1107662173
enabled: 1
owner: prec
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

</quit>
action: /quit
created_on: 1469030503.71941
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469030511.01707
owner: pksadiq!~user@106.208.126.239
rate_limit: 15
ref_count: 1
ref_user: pksadiq!~user@106.208.126.239
type: text

<3star>
action: http://c2.com/cgi/wiki?ThreeStarProgrammer
created_on: 1111867182
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485898829.17381
owner: pragma_
rate_limit: 15
ref_count: 27
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<64bit-errors>
action: http://www.viva64.com/en/a/0065/print/
created_on: 1343623557.00864
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271886.36653
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<6stages>
action: /say The 6 stages of debugging: https://i.imgur.com/FTMlaJT.jpg
created_on: 1457376033.8331
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471991180.67496
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: latch!~latch@unaffiliated/latch
type: text

<:>>
action: digraph alternative for ]
created_on: 1104401890
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<;>
action: a statement and declaration terminator
created_on: 1104886076
enabled: 1
last_referenced_in: jack_rabbit
last_referenced_on: 1401099136.25458
owner: Major-Willard
rate_limit: 15
ref_count: 4
ref_user: jack_rabbit!~jack_rabb@c-98-253-57-51.hsd1.il.comcast.net
type: text

<<>
action: the less than comparison operator
created_on: 1104599441
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1425842325.46846
owner: Major-Willard
rate_limit: 15
ref_count: 7
ref_user: Wulf!~Wulf@unaffiliated/wulf
type: text

<<%>
action: digraph replacement for {
created_on: 1104401845
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1295697076.7578
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: phao
type: text

<<:>
action: digraph replacement for [
created_on: 1104401882
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1295838410.60961
owner: twkm
rate_limit: 15
ref_count: 3
ref_user: pragma_
type: text

<<<>
action: the binary left shift operator
created_on: 1107979350
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489705011.02027
owner: prec
rate_limit: 15
ref_count: 9
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: text

<<=>
action: the less than or equal to comparison operator
created_on: 1104599493
enabled: 1
last_referenced_in: nylon100
last_referenced_on: 1383868719.68388
owner: Major-Willard
rate_limit: 15
ref_count: 1
ref_user: nylon100!~rany@bzq-79-182-7-58.red.bezeqint.net
type: text

<==>
action: the comparison for equivalence operator
created_on: 1104595949
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487988532.22771
owner: Major-Willard
rate_limit: 15
ref_count: 4
ref_user: Richard_Cavell!~Richard_C@host81-156-12-235.range81-156.btcentralplus.com
type: text

<>>
action: /say > is the greater than comparison operator
created_on: 1239017335
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489662091.47259
owner: Jafet
rate_limit: 15
ref_count: 13
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<>=>
action: the greater than or equal to comparison operator
created_on: 1104599538
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<>>>
action: the binary right shift operator
created_on: 1108253247
enabled: 1
last_referenced_in: left_turn
last_referenced_on: 1392480775.59429
owner: Major-Willard
rate_limit: 15
ref_count: 5
ref_user: Left_Turn!~Left_Turn@unaffiliated/turn-left/x-3739067
type: text

<?>
action: a question mark. Stop staring stupidly off into space with a question mark above your head, wipe that drool off your chin and make an intelligent query.
created_on: 1237066516
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488427432.80605
noembed: 1
owner: Quetzalcoatl_
rate_limit: 15
ref_count: 68
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<?:>
action: the conditional operator; <e1> ? <e2> : <e3> if <e1> is true, the operator evaluates and yields <e2>; otherwise it evaluates and yields <e3>
created_on: 1104925315
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1451019756.41624
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1451019604.33132
owner: infobahn
rate_limit: 15
ref_count: 13
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<??!>
action: trigraph replacement for |
created_on: 1104400693
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: GhostlyDeath
type: text

<??''>
action: trigraph replacement for ^
created_on: 1104400673
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1477235055.58284
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: kate!~kate@212.74.13.142
type: text

<??(>
action: trigraph replacement for [
created_on: 1104400644
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<??)>
action: trigraph replacement for ]
created_on: 1104400667
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<??->
action: trigraph replacement for ~
created_on: 1104400703
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<??/>
action: trigraph replacement for \\
created_on: 1104400660
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<??<>
action: trigraph replacement for {
created_on: 1104400680
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1297894239.66674
owner: twkm
rate_limit: 15
ref_count: 3
ref_user: pragma_
type: text

<??=>
action: trigraph replacement for #
created_on: 1104400632
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<??>>
action: trigraph replacement for }; digraph replacement for }
created_on: 1104400686
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<B>
action: the programming language which was the precursor of C ; http://en.wikipedia.org/wiki/B_programming_language
created_on: 1111209918
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1483256569.67599
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 26
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<C/C++>
action: a misnomer.  These two languages are completely different languages with each having its own standard.  C++ is not a "superset" of C.  For C++ questions, please join #C++
created_on: 1108258486
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1485741589.98725
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486133920.28611
owner: pragma_
rate_limit: 15
ref_count: 21
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<CARM>
action: /call H&S
created_on: 1199659530
enabled: 1
last_referenced_on: 1408886668.68223
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: OldDog!~Le@ip-83-134-247-209.dsl.scarlet.be
type: text

<CE>
action: Unix system calls and subroutines using C: http://www.cs.cf.ac.uk/Dave/C/CE.html
created_on: 1202752439
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 2
ref_user: PoppaVic
type: text

<CHAR_BIT>
action: #include <limits.h> - maximum value for the number of bits used to represent an object of type char. - >= 8
created_on: 1104389685
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1480939359.34271
owner: defrost
rate_limit: 15
ref_count: 21
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<CHAR_MAX>
action: #include <limits.h> - maximum value for type char. Its value is: SCHAR_MAX if char represents negative values, UCHAR_MAX otherwise. - >= 127
created_on: 1104389685
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1288191304.54422
owner: defrost
rate_limit: 15
ref_count: 1
ref_user: s00p
type: text

<CHAR_MIN>
action: #include <limits.h> - minimum value for type char. Its value is: SCHAR_MIN if char represents negative values, zero otherwise. - <= 0
created_on: 1104389685
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1319657856.37992
owner: defrost
rate_limit: 15
ref_count: 1
ref_user: cousteau
type: text

<Callbacks>
action: the informal name given to a technique where a function takes in, as arguments, other functions by way of pointers allowing access to multiple functions of the same prototype (per argument). In essence it provides, for each passed argument, algorithm-agnostic function switching/access
created_on: 1427537550.28217
enabled: 1
last_referenced_in: uuhimhere
last_referenced_on: 1427887557.5197
owner: Feel1E6dOLARZ!~uuhimhere@1.9.98.51
rate_limit: 15
ref_count: 2
ref_user: uuhimhere!~uuhimhere@1.9.98.51
type: text

<CnotC++>
action: /say C is not a subset of C++
created_on: 1176998419
enabled: 1
last_referenced_in: vigud
last_referenced_on: 1382122554.20787
owner: LordOllie
rate_limit: 15
ref_count: 6
ref_user: Vigud!uid1143@gateway/web/irccloud.com/x-lsqwccsadxnazljl
type: text

<ENOQUESTION>
action: /say Error: No question detected.  Please ask a question.
created_on: 1350566325.09047
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484794233.24433
owner: pragma-
rate_limit: 15
ref_count: 24
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<ENOSENSE>
action: /say Error: That makes no sense.
created_on: 1377607988.30656
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1478469888.06467
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<EOF>
action: an integer constant expression, with type int and a negative value, that is returned by several functions to indicate end-of-file (ISO/IEC 9899:1999 7.19.1p3). It is NOT a char. It is NOT a byte that is stored at the end of every file.
created_on: 1104596552
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488721934.56449
owner: infobahn
rate_limit: 15
ref_count: 69
ref_user: masoudd!~masoudd@5.114.61.182
type: text

<EXIT_FAILURE>
action: a macro defined in <stdlib.h> whose value can be passed to exit() or returned from main() to indicate unsuccessful termination
created_on: 1105443776
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1489423268.08876
owner: mauke
rate_limit: 15
ref_count: 1
ref_user: phale!~synt@unaffiliated/glimmer
type: text

<EXIT_SUCCESS>
action: a macro defined in <stdlib.h> whose value can be passed to exit() or returned from main() to indicate successful termination
created_on: 1105443603
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1450045776.99763
owner: mauke
rate_limit: 15
ref_count: 1
ref_user: dorp!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<H&S>
action: "C - A Reference Manual" by Harbison & Steele; a reference for C on par with K&R - http://www.amazon.com/Reference-Manual-Samuel-P-Harbison/dp/013089592X
created_on: 1109636091
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481212432.12956
owner: heina
rate_limit: 15
ref_count: 252
ref_user: rooftopjoe!bc193559@gateway/web/freenode/ip.188.25.53.89
type: text

<INT_MAX>
action: #include <limits.h> - INT_MAX - maximum value of an int object, at least +32767
created_on: 1104369616
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1455835866.41442
owner: twkm
rate_limit: 15
ref_count: 12
ref_user: m0shbear!~011899988@servbox.moshbear.net
type: text

<INT_MIN>
action: #include <limits.h> - INT_MIN - minimum value of an int object, at most -32767
created_on: 1104369627
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1480028138.52802
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480028121.56059
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<K&R>
action: The C Programming Language, 2nd edition, by Kernighan and Ritchie -- http://wayback.archive-it.org/5263/20150203070038/http://cm.bell-labs.com/cm/cs/cbook/ -- errata: http://www.iso-9899.info/2ediffs.html
created_on: 1278668183.21606
edited_by: edk!~edk@spy/edk0
edited_on: 1440984429.23248
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490997188.0502
owner: Chris
rate_limit: 15
ref_count: 921
ref_user: baklava[m]!baklavamat@gateway/shell/matrix.org/x-tvyiaukyhyeakcas
type: text

<LLVM>
action: a compiler infrastructure written in C++ -- http://llvm.org/
created_on: 1330538578.87232
enabled: 1
last_referenced_in: pessimist
last_referenced_on: 1445454142.52538
owner: meta-coder
rate_limit: 15
ref_count: 5
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-awwgjmvdgdiowvaf
type: text

<LONG_MAX>
action: #include <limits.h> - LONG_MAX - maximum value of a long int object, at least +2147483647
created_on: 1104369746
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<LONG_MIN>
action: #include <limits.h> - LONG_MIN - minimum value of a long int object, at least -2147483647
created_on: 1104369732
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<MB_CUR_MAX>
action: #include <limits.h> - maximum number of bytes in a mult-byte character for an extended character in the current locale, which is never greater than MB_LEN_MAX.
created_on: 1104394983
enabled: 1
last_referenced_in: rob``
last_referenced_on: 1375275112.58378
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: rob``
type: text

<MB_LEN_MAX>
action: #include <limits.h> - maximum number of characters that constitute a multibyte character in any supported locale. Its value is >= MB_CUR_MAX.
created_on: 1104389706
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<NULL>
action: an (implementation-defined) macro expanding to a null pointer constant, which is any zero-value integer constant expression, possibly cast to void *. Such an expression has a special meaning in the context of pointer expressions to, for example, produce null pointers or test if other pointers are null pointers.
created_on: 1104596262
edited_by: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
edited_on: 1385023435.5819
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484911511.68624
owner: Major-Willard
rate_limit: 15
ref_count: 100
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<ObfsC>
action: http://www.cs.bgu.ac.il/~omri/Humor/ObfsC.html -- What were you saying about Perl, again?
created_on: 1273340691
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<PoppaVic>
action: PoppaVic. That is all that can be said.
created_on: 1311377303.95634
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1404840327.86783
owner: kulp
rate_limit: 15
ref_count: 4
ref_user: Vigud!sid1143@gateway/web/irccloud.com/x-umeghopdldjszojr
type: text

<REI>
action: Recreational Equipment Inc.
created_on: 1383608960.48304
enabled: 1
owner: CaZe!~caze@174.136.103.226
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<SCHAR_MAX>
action: #include <limits.h> - maximum value for type signed char. - >= 127
created_on: 1104389707
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<SCHAR_MIN>
action: #include <limits.h> - minimum value for type signed char. - <= -127
created_on: 1104389707
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1319657869.2525
owner: defrost
rate_limit: 15
ref_count: 1
ref_user: cousteau
type: text

<SHRT_MAX>
action: #include <limits.h> - maximum value for type short. - >= 32,767
created_on: 1104389724
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<SHRT_MIN>
action: #include <limits.h> - minimum value for type short. - <= -32,767
created_on: 1104389724
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<UB>
action: /say Undefined behavior is behavior for which the C standard does not impose any requirements.  This is to allow C the freedom to be implemented on systems with different architectures.  Programs invoking undefined behavior may appear to compile and even run without errors at first, only to fail on another system, or even at a later time.  If you want to write reliable code, don't use such behaviors.
created_on: 1297808324.11723
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1416015925.73025
enabled: 1
last_referenced_in: maxxe
last_referenced_on: 1491236265.93105
owner: pragma_
rate_limit: 15
ref_count: 172
ref_user: maxxe!~maxxe@unaffiliated/maxxe
type: text

<UCHAR_MAX>
action: #include <limits.h> - maximum value for type unsigned char. - >= 255
created_on: 1104389724
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<UINT_MAX>
action: #include <limits.h> - UINT_MAX - maximum value of an unsigned int object, at least 65535
created_on: 1104369656
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1417391239.87556
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<ULONG_MAX>
action: #include <limits.h> - ULONG_MAX - maximum value of an unsigned long int object, at least 4294967295
created_on: 1104369766
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1420823493.09751
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: edk!edk@spy/edk0
type: text

<USB>
action: /say Unspecified behavior is behavior for which the C standard provides two or more possibilities, and imposes no further requirements on which behavior is chosen in any instance.  Not to be confused with undefined behavior or implementation dependent behavior.
created_on: 1297808849.20448
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1423326801.13788
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: kate!~kate@unaffiliated/kate
type: text

<USHRT_MAX>
action: #include <limits.h> - maximum value for type unsigned short. - >= 65,535
created_on: 1104389735
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<[]>
action: the array subscript operator. It is also part of declarator syntax. The expressions x[y] and *(x + y) are equivalent.
created_on: 1194260776
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1405696065.63413
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1405703076.07953
owner: pragma_
rate_limit: 15
ref_count: 20
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<\>
action: the line continuation character; used in strings to specify special characters; used in character constants to specify special characters; when followed by u or U in C99, is used to specify a universal character name for use in string constants, character constants, or identifiers.
created_on: 1104603271
enabled: 1
last_referenced_in: angstrom
last_referenced_on: 1305993776.29244
owner: Major-Willard
rate_limit: 15
ref_count: 10
ref_user: angstrom
type: text

<^>
action: the bitwise exclusive OR (XOR) binary operator
created_on: 1104595483
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1448213217.35978
noembed: 1
owner: Major-Willard
rate_limit: 15
ref_count: 23
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<_>
action: /say All identifiers that begin with an underscore and either an uppercase letter or another underscore are always reserved for any use.  All identifiers that begin with an underscore are always reserved for use as identifiers with file scope in both the ordinary and tag name spaces. (ISO 9899:1999, 7.1.3) Don't use such identifiers.
created_on: 1105863511
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1472891792.03544
owner: mauke
rate_limit: 15
ref_count: 60
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<_Generic>
action: http://www.robertgamble.net/2012/01/c11-generic-selections.html
created_on: 1370703117.99624
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488522208.60449
owner: pragma-
rate_limit: 15
ref_count: 4
ref_user: phroa!phroa@phroa.net
type: text

<abcd>
action: /say (a) What is your goal exactly? (b) What have you tried? (c) What are you expecting? (d) What happened instead?
created_on: 1376151512.30039
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1428702071.55301
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 8
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<abuse>
action: /say please stop molesting me!
created_on: 1470099084.2597
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470099090.26786
owner: korans!~korans@46.254.251.97
rate_limit: 15
ref_count: 1
ref_user: korans!~korans@46.254.251.97
type: text

<address>
action: /say C has pointer types and addresses (or pointer values). foo x; &x results in an address that points to an object. foo *y; y is an instance of a pointer type. Instances of pointer types do not magically point to objects. They must be assigned to before being used, for example: y = &x;
created_on: 1273064028
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484444327.79077
owner: s00p
rate_limit: 15
ref_count: 4
ref_user: caze!~caze@unaffiliated/caze
type: text

<amd1>
action: http://www.lysator.liu.se/c/na1.html
created_on: 1375947367.62408
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480315955.57602
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<analyze>
action: /call clang --analyze
created_on: 1456650922.24627
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1465453061.42681
owner: pragma`!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<ansispec>
action: www.nirvani.net/docs/ansi_c.pdf
created_on: 1190684046
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1345109633.09775
owner: Cin
rate_limit: 15
ref_count: 2
ref_user: eboy
type: text

<ansispecpdf>
action: /call standard
created_on: 1192736407
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: pragma_
type: text

<app>
action: /call fact
created_on: 1481055413.92346
enabled: 1
last_referenced_in: retr0id
last_referenced_on: 1484598451.89412
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 4
ref_user: Retr0id!~null@host86-177-223-109.range86-177.btcentralplus.com
type: text

<appadd>
action: /call factadd
created_on: 1481055367.39917
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612051.5459
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 10
ref_user: mzo!~marchelzo@unaffiliated/marchelzo
type: text

<appalias>
action: /call factalias
created_on: 1481055386.39487
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482525171.97834
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 8
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<appchange>
action: /call factchange
created_on: 1481055397.58888
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489268419.62179
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 8
ref_user: dho!~dho@veep.9vx.org
type: text

<appinfo>
action: /call factinfo
created_on: 1481055359.32548
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490991967.14235
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 19
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<applog>
action: /call factlog
created_on: 1481839394.06596
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482966846.31568
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 6
ref_user: Moto-chan!~Rob@unaffiliated/moto-chan
type: text

<appoid>
action: /call factoid
created_on: 1481055577.44501
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488215827.81338
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 8
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<appoids>
action: /call factoids
created_on: 1481055594.55706
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488216112.74031
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 3
ref_user: whoisxy!~whoisxy@87.244.83.147
type: text

<appshow>
action: /call factshow
created_on: 1481061164.50491
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486250855.30022
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 9
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<april1>
action: The best way to sort text is like this: https://gist.github.com/BenGoldberg1/b9b510be84dedf13bfe3
created_on: 1491063264.69392
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491071146.92458
owner: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
rate_limit: 15
ref_count: 2
ref_user: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
type: text

<argc>
action: the traditional name of the first parameter to main(); argc is non-negative and gives the number of command line arugments (including the program name).
created_on: 1104396991
enabled: 1
last_referenced_in: zcram
last_referenced_on: 1490996143.31508
owner: prec
rate_limit: 15
ref_count: 5
ref_user: zcram!~urki@gprs-inet-183-23.elisa.ee
type: text

<argv>
action: the traditional name of the second parameter to main(); argv[argc] == NULL; if argc>0 argv[0] is the program name. if argc>1, argv[1] through argv[argc-1] are the command line arguments.
created_on: 1104397065
enabled: 1
last_referenced_in: zcram
last_referenced_on: 1490996167.34731
owner: prec
rate_limit: 15
ref_count: 12
ref_user: zcram!~urki@gprs-inet-183-23.elisa.ee
type: text

<array>
action: /say An array type describes a contiguously allocated nonempty set of objects with a particular member object type, called the element type.
created_on: 1247726531
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1381645400.77467
enabled: 1
last_referenced_in: lemonade`
last_referenced_on: 1487536804.03808
owner: Wulf_
rate_limit: 15
ref_count: 48
ref_user: lemonade`!~lemonade_@pool-96-255-35-216.washdc.fios.verizon.net
type: text

<arrays>
action: /say Arrays and pointers: http://www.eskimo.com/~scs/C-faq/s6.html
created_on: 1106022495
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1487920578.22884
owner: pragma_
rate_limit: 15
ref_count: 54
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<aryptr>
action: http://c-faq.com/aryptr/index.html
created_on: 1257021622
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1407272990.67896
owner: Wulf_
rate_limit: 15
ref_count: 10
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<aspfb>
action: /say https://docs.spring.io/spring/docs/2.5.x/javadoc-api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html
created_on: 1485459065.86136
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490298123.86933
owner: atk!~Arch-TK@fsf/member/Arch-TK
rate_limit: 15
ref_count: 5
ref_user: atk!Arch-TK@fsf/member/Arch-TK
type: text

<atoi>
action: evil. It does no overflow checking, handles unsigned numbers poorly, and handles strings containing trailing characters (like ``123abc'') poorly.  Use strtol() instead.
created_on: 1323124280.71748
edited_by: fstd!~fstd@unaffiliated/fisted
edited_on: 1402587387.03456
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484595900.96145
owner: guidj0s
rate_limit: 15
ref_count: 26
ref_user: masoudd!~masoudd@5.116.26.205
type: text

<auto>
action: /say The `auto` keyword specifies that the object has automatic storage duration (which is the default storage duration of objects, hence its use is redundant and rare)
created_on: 1345759830.18785
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1461012098.3835
owner: pragma-
rate_limit: 15
ref_count: 9
ref_user: Wulf!~Wulf@unaffiliated/wulf
type: text

<avoidingvulns>
action: /say Guidance to Avoiding Vulnerabilities in Programming Languages: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1583.pdf
created_on: 1457482536.83735
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<bcopy>
action: way cool, but it's more portable to use memcpy
created_on: 1107484574
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479367674.60791
owner: Major-Willard
rate_limit: 15
ref_count: 2
ref_user: fluter!~fluter@fedora/fluter
type: text

<bcsllc-steve>
action: /say See 'boring'
created_on: 1312778602.77632
enabled: 1
last_referenced_in: kenaniah
last_referenced_on: 1341938482.53025
owner: s00p
rate_limit: 15
ref_count: 2
ref_user: Kenaniah
type: text

<bdwgc>
action: http://www.hpl.hp.com/personal/Hans_Boehm/gc/
created_on: 1278590020.17125
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<beej>
action: /say Beej's Guide to Network Programming -- Using Internet Sockets is at http://beej.us/guide/bgnet/
created_on: 1328611926.46396
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1488138218.57998
owner: GeorgeJ
rate_limit: 15
ref_count: 8
ref_user: atk!Arch-TK@fsf/member/Arch-TK
type: text

<beejc>
action: http://beej.us/guide/bgc/
created_on: 1206996386
enabled: 1
owner: snhmib
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<better>
action: /say A best practice is a method or technique that has consistently shown results superior to those achieved with other means.
created_on: 1375289734.05909
enabled: 1
last_referenced_in: edk
last_referenced_on: 1457452908.40575
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 11
ref_user: edk!edk@spy/edk0
type: text

<binky>
action: /say The Binky Pointer Fun Video:  http://cslibrary.stanford.edu/104/ -- YouTube version: http://www.youtube.com/watch?v=6pmWojisM_E
created_on: 1106444999
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1391698886.77113
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485016816.58382
owner: prec
rate_limit: 15
ref_count: 215
ref_user: kl3!~kl3@gateway/tor-sasl/kl3
type: text

<bit>
action: /say A bit is a unit of data storage large enough to hold an object that may have one of two values. It need not be possible to express the address of each individual bit of an object.
created_on: 1288301601.60807
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1442820686.77801
owner: s00p
rate_limit: 15
ref_count: 9
ref_user: fluter!~fluter@fedora/fluter
type: text

<bithacks>
action: http://graphics.stanford.edu/~seander/bithacks.html
created_on: 1256619383
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480417539.36178
owner: Chris
rate_limit: 15
ref_count: 56
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<bitwise>
action: http://web.archive.org/web/20131001100601/http://www.codersger.de/mags/cscene/CS9/CS9-02.html
created_on: 1255220538
edited_by: edk!edk@spy/edk0
edited_on: 1425930579.43018
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1425930467.04833
owner: Random832
rate_limit: 15
ref_count: 13
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<book>
action: /say See http://www.iso-9899.info/wiki/Books for some useful book recommendations, including free online resources!
action_with_args: /me points accusingly at $args, "Where is your book?!" See http://www.iso-9899.info/wiki/Books for some useful book recommendations, including free online resources.
created_on: 1179504776
edited_by: edk!edk@unaffiliated/edk
edited_on: 1386199674.16276
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487910093.33119
owner: pragma_
rate_limit: 15
ref_count: 1029
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<books>
action: /say See http://www.iso-9899.info/wiki/Books for some useful book recommendations, including free online resources!
created_on: 1104378101
edited_by: edk!edk@unaffiliated/edk
edited_on: 1387226590.5671
enabled: 1
last_referenced_in: sjohnson
last_referenced_on: 1490981687.27559
owner: twkm
rate_limit: 15
ref_count: 888
ref_user: sjohnson!sjohnson@cow.sj.rfc1459.net
type: text

<boring>
action: /say See 'bcsllc-steve'
created_on: 1312778587.71828
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489804797.83281
owner: s00p
rate_limit: 15
ref_count: 8
ref_user: maxwell!~maxwell@144.172.235.6
type: text

<borucomfort>
action: /call cc char*acts[]={"subjects %s to scaphism", "eats %s", "shits on %s's face"};srand(time(0));printf(acts[rand()%(sizeof acts/sizeof *acts)], "$args");
created_on: 1406477995.87532
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436740274.29184
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1478871066.71772
owner: boru!~boru@unaffiliated/boru
rate_limit: 15
ref_count: 21
ref_user: brabo!~brabo@globalshellz/owner/brabo
type: text

<break>
action: the statement used terminate the currently executing block
created_on: 1104888615
enabled: 1
last_referenced_in: dorp_
last_referenced_on: 1409362934.92131
owner: Major-Willard
rate_limit: 15
ref_count: 5
ref_user: dorp_!~dorp@bzq-84-108-245-83.cablep.bezeqint.net
type: text

<byte>
action: defined by the C standard as an addressable unit of storage large enough to hold a character value.  The char type is byte-sized and is at least 8 bits wide.  CHAR_BIT in <limits.h> defines the byte size for any given implementation.  The term "byte" is most often used to mean 8 bits; however, the term "octet" is preferred.
created_on: 1104873342
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1378227926.90999
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471260590.14951
owner: prec
rate_limit: 15
ref_count: 40
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<byteorder>
action: /say http://commandcenter.blogspot.co.uk/2012/04/byte-order-fallacy.html
created_on: 1421009433.53512
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1421009575.62485
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 1
ref_user: blitsky!~blitter@46.246.23.211
type: text

<c++>
action: /say If you are using a C++ compiler then your code is not C -- even if you're only using the "C subset". As soon as you invoke a C++ compiler instead of a C compiler, all the rules and idiosyncrasies of the C++ specification come into play, which have subtle differences in certain  semantics. Please ask ##c++ or switch to a C compiler.
created_on: 1108585029
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1463348908.18598
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490355338.99199
owner: NeverDream
rate_limit: 15
ref_count: 140
ref_user: whoisxy!~whoisxy@87.244.83.147
type: text

<c++diffs>
action: http://david.tribble.com/text/cdiffs.htm
created_on: 1204224553
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480280820.44072
owner: PoppaVic
rate_limit: 15
ref_count: 6
ref_user: lemonade`!~lemonade_@pool-96-255-35-216.washdc.fios.verizon.net
type: text

<c.vim>
action: /call c99vim
created_on: 1375946573.40771
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<c/c++>
action: http://david.tribble.com/text/cdiffs.htm
created_on: 1252250954
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487812015.56124
owner: PoppaVic
rate_limit: 15
ref_count: 15
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<c1>
action: /say C Aphorism 1: The questioner's first description of the problem/question will be misleading.
created_on: 1379514943.76622
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487636857.00243
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 54
ref_user: caze!~caze@unaffiliated/caze
type: text

<c10>
action: /say C Aphorism 10: The newbie will not accept the answer you give, no matter how right it is.
created_on: 1379515492.13583
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507083.4339
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 11
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c11>
action: /call c1x
action_with_args: /call c11std
created_on: 1325645454.02711
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491235752.31768
owner: pragma_
rate_limit: 0
ref_count: 775
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<c11diffs>
action: /call c1xdiffs
created_on: 1325646505.82922
enabled: 1
last_referenced_on: 1398984463.5407
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<c11status>
action: http://gcc.gnu.org/wiki/C11Status
created_on: 1377949964.48136
enabled: 1
last_referenced_in: th3s3_3y3s
last_referenced_on: 1418704742.17628
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: th3s3_3y3s!~j4s0nmchr@172.56.10.181
type: text

<c11threads>
action: /say Trivial C11 threads implementation over pthreads: https://github.com/jtsiomb/c11threads
created_on: 1480101253.88172
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<c12>
action: /say C Aphorism 12: The newbie will think they are smarter than they really are.
created_on: 1379516078.26363
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1488751796.28105
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 13
ref_user: atk!Arch-TK@fsf/member/Arch-TK
type: text

<c13>
action: /say C Aphorism 13: The newbie will fail to recognize undefined behavior, and will wrongly think that their program is correct because it appears to work.
created_on: 1379517110.31861
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1379517124.32199
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507115.13347
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 21
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c14>
action: /say C Aphorism 14: The more the questioner attempts to describe their problem, the less coherent their description becomes.
created_on: 1404442948.43201
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1404863021.68183
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507118.27466
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 8
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c15>
action: /say C Aphorism 15: When multiple people respond to the questioner's problem, the questioner will focus on the person giving incorrect advice and ignore everybody else.
created_on: 1458208613.20252
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1458208661.14142
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507124.96987
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c1x>
action: /say C1X/C11 draft: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf - C1X Charter: http://www.open-std.org/JTC1/SC22/wg14/www/docs/n1250.pdf - C1X Overview: http://en.wikipedia.org/wiki/C1X - Changes from C99: http://en.wikipedia.org/wiki/C1X#Changes_from_C99 - C Overview: http://en.wikipedia.org/wiki/C_programming - HTML version: http://port70.net/~nsz/c/c11/n1570.html
created_on: 1296116263.83864
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444922031.64937
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1489918323.92091
owner: pragma_
rate_limit: 15
ref_count: 214
ref_user: albinosik!05645bfe@gateway/web/freenode/ip.5.100.91.254
type: text

<c1xdiffs>
action: http://en.wikipedia.org/wiki/C1X#Changes_from_C99 and http://www.iso-9899.info/n1570.html#FOREWORD.p6
created_on: 1325646496.10901
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1398984463.54734
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<c2>
action: /say C Aphorism 2: All examples given by the questioner will be incomplete, misleading, broken, wrong, and/or not representative of the actual question.
created_on: 1379515096.85361
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483728913.79664
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 28
ref_user: phox!~phox@c-73-225-0-79.hsd1.wa.comcast.net
type: text

<c2eng>
action: /say C-to-English-and-English-to-C translators: http://www.cs.cmu.edu/~dst/DeCSS/Baccash/
created_on: 1296189344.48248
enabled: 1
last_referenced_in: thoughtso
last_referenced_on: 1400155554.32
owner: pragma_
rate_limit: 15
ref_count: 18
ref_user: thoughtso!~purple@199-193-117-81.static.hvvc.us
type: text

<c2x>
action: /say C2x Charter: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2086.htm
created_on: 1458322886.1102
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1486250342.99712
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489610742.20045
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<c3>
action: /say C Aphorism 3: The questioner will not read and apply the answers they are given but will instead continue to practice c1 and c2.
created_on: 1379515146.48668
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507018.40088
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 17
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c4>
action: /say C Aphorism 4: The ignorant will continually mis-educate the questioner.
created_on: 1379515257.27704
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507026.24246
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c5>
action: /say C Aphorism 5: When given a choice of solutions, the questioner will always choose the wrong one.
created_on: 1379515279.77191
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507039.53796
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 15
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c6>
action: /say C Aphorism 6: The questioner will always find a reason to say, "It doesn't work."
created_on: 1379515325.61735
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507062.91512
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 11
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c7>
action: /say C Aphorism 7: The questioner will paste code and say "I have a problem" or "It doesn't work" without any further information or description of the problem.
created_on: 1379515401.52153
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507066.70486
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 13
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c8>
action: /say C Aphorism 8: The more beginner they are, the more likely they are to be overcomplicating it.
created_on: 1379515421.00964
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1379516015.189
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507073.42146
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 23
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c89>
action: /say C89/C90 draft: http://port70.net/~nsz/c/c89/c89-draft.html or http://flash-gordon.me.uk/ansi.c.txt or http://web.archive.org/web/20050207005628/http://dev.unicals.com/papers/c89-draft.html - C Overview: http://en.wikipedia.org/wiki/C_programming
created_on: 1236861685
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421891929.56495
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1491052114.844
owner: Wulf4
rate_limit: 15
ref_count: 190
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<c89rationale>
action: /say Draft ANSI C Rationale:  http://www.scribd.com/doc/16306895/Draft-ANSI-C-Rationale
created_on: 1266015713
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1409666767.61557
owner: umopepisdn`
rate_limit: 15
ref_count: 5
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<c9>
action: /say C Aphorism 9: The questioner will always have some excuse for doing it wrong.
created_on: 1379515463.27382
enabled: 1
last_referenced_in: brimonk
last_referenced_on: 1483507078.57832
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 15
ref_user: brimonk!~brian@unaffiliated/brimonk
type: text

<c90>
action: /call c89
created_on: 1325645822.51056
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1488446295.52562
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<c94>
action: c89 plus normative addendum 1 ( http://www.lysator.liu.se/c/na1.html ); sometimes referred to as c95.
created_on: 1375947423.52022
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1401708097.77054
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: FUZxxl!~fuz@d00m.org
type: text

<c9888>
action: www.nirvani.net/docs/ansi_c.pdf
created_on: 1190426882
enabled: 1
owner: Cin
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<c9899>
action: www.nirvani.net/docs/ansi_c.pdf
created_on: 1190426934
enabled: 1
owner: Cin
rate_limit: 15
ref_count: 3
ref_user: pragma_
type: text

<c99>
action: /say C99 + TC1,2,3 working paper: http://open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf - C99 Overview: http://en.wikipedia.org/wiki/C99 - Changes from C89/C90: http://home.datacomm.ch/t_wolf/tw/c/c9x_changes.html - C Overview: http://en.wikipedia.org/wiki/C_programming - HTML version: http://port70.net/~nsz/c/c99/n1256.html
action_with_args: /call c99std
created_on: 1325645512.48533
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444922070.63688
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490956604.88919
owner: pragma_
rate_limit: 0
ref_count: 262
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<c99diffs>
action: /call c9xdiffs
created_on: 1325646541.34894
enabled: 1
last_referenced_on: 1398984468.57136
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<c99rationale>
action: http://www.open-std.org/jtc1/sc22/WG14/www/C99RationaleV5.10.pdf
created_on: 1318270531.61149
enabled: 1
owner: guidj0s
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<c99status>
action: GCC's C99 implementation status:  http://gcc.gnu.org/c99status.html
created_on: 1108082627
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1369904853.01412
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: fizzie
type: text

<c99vim>
action: /say A Standard C vim syntax file: http://www.vim.org/scripts/script.php?script_id=234 -- adds numerous improvements to vim C syntax highlighting, including C99 features and more!
created_on: 1375946390.13414
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1415881957.43808
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<c9x>
action: /call c99
created_on: 1325645867.99131
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<c9xdiffs>
action: http://home.datacomm.ch/t_wolf/tw/c/c9x_changes.html
created_on: 1104460717
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1398984468.5826
owner: twkm
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<call by value>
action: /say "In C, all function arguments are passed ‘‘by value.’’ This means that the called function is given the values of its arguments in temporary variables rather than the originals." (K&R)
created_on: 1339710882.29348
enabled: 1
owner: sickle
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<callback>
action: /say A callback function abstracts some aspect of work which is independent of a particular algorithm. An implementation of that algorithm is passed a pointer to that function, and "calls back" for the abstracted work to be done. See qsort(3) for example.
created_on: 1426651043.23767
enabled: 1
last_referenced_in: profess
last_referenced_on: 1441768849.46836
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 8
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<callbyvalue>
action: /say "In C, all function arguments are passed ‘‘by value.’’ This means that the called function is given the values of its arguments in temporary variables rather than the originals." (K&R)
created_on: 1339710974.8689
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271934.43293
owner: sickle
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<calloc>
action: a function that allocates a block of memory for an array of "num" elements, each of them "size" bytes long, AND initializes all its bits to zero. The effective result is the allocation of a zero-initialized memory block of (num*size) bytes. see http://claudihome.com/html/LR/function_reference/Content/c_language/lrFuncRef_CLang_calloc.htm
created_on: 1427532145.44237
enabled: 1
last_referenced_in: profess
last_referenced_on: 1467500281.94197
owner: Feel1E6dOLARZ!~uuhimhere@1.9.98.51
rate_limit: 15
ref_count: 2
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<cam>
action: The C Abstract Machine - An abstract machine used for reasoning about the semantics described in the C-std, in which issues of optimization are irrelevant.
created_on: 1316426139.70367
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456897729.72864
owner: angstrom
rate_limit: 15
ref_count: 3
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<canihaztehcodez>
action: /say ##c is not the place to have others do your homework. If you don't understand parts of your assignment, feel free to ask but don't expect others to do your homework.
created_on: 1407748004.94202
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1407748040.36863
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1422809087.43357
owner: FUZxxl!~fuz@d00m.org
rate_limit: 15
ref_count: 5
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<cast>
action: /call cdecl cast
created_on: 1191042665
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1479556549.68647
noembed: 1
owner: pragma_
rate_limit: 0
ref_count: 114
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<casting>
action: http://web.archive.org/web/20060228210010/http://www.cognitiveprocess.com/~rjh/prg/writings/casting.html
created_on: 1296283738.47843
enabled: 1
last_referenced_in: profess
last_referenced_on: 1467597384.54405
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<cat>
action: http://www.iso-9899.info/wiki/Cat
created_on: 1195413751
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486611800.05556
owner: kate`
rate_limit: 15
ref_count: 24
ref_user: WeButterTheBread!444611ac@gateway/web/freenode/ip.68.70.17.172
type: text

<cbreak>
action: /call unbufferedgetc
created_on: 1323059652.74141
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445941048.90095
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: fluter!~fluter@fedora/fluter
type: text

<cc-cmdline>
action: http://code.google.com/p/pbot2-pl/source/browse/trunk/modules/compiler_vm/ <-- download: cc, compiler_vm_server.pl, compiler_vm_client.pl, compiler_watchdog.pl and debugcommands -- Now you too can use cc in on your shell command-line!  See the README, as well.
created_on: 1296535000.38713
enabled: 1
last_referenced_in: lemonade`
last_referenced_on: 1297649520.62603
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: lemonade`
type: text

<cfa>
action: /say http://benpfaff.org/writings/clc/
created_on: 1245945081
enabled: 1
owner: kate`
rate_limit: 15
ref_count: 1
ref_user: kate`
type: text

<cfaq>
action: comp.lang.c FAQ: http://www.eskimo.com/~scs/C-faq/top.html
created_on: 1106283720
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484603989.59505
owner: pragma_
rate_limit: 15
ref_count: 43
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<changreet>
action: /say Please do not greet the channel. It adds no value to the conversation, and highlights the channel tab for no good reason.
created_on: 1431989159.22684
edited_by: fstd!~fstd@unaffiliated/fisted
edited_on: 1431989516.3635
enabled: 1
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<chanstats>
action: /say ##C channel statistics: http://iso-9899.info/candide/pisg/c.html
action_with_args: /say ##C channel statistics: http://iso-9899.info/candide/pisg/c.html#$args
created_on: 1396065691.46188
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1424871874.36038
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 22
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<char>
action: /say char is required to be able to represent (at least) the values inclusively between -127 and 127 (signed char), or 0 and 255 (unsigned char). The representation chosen is implementation-defined, meaning some compilers will treat a char as signed, others unsigned. sizeof (char) is always 1. See also: CHAR_BIT, CHAR_MIN, CHAR_MAX and byte
created_on: 1288191355.84716
enabled: 1
last_referenced_in: devut
last_referenced_on: 1484992461.51841
owner: s00p
rate_limit: 15
ref_count: 157
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<char*a,b>
action: /say The declaration "char* a, b" declares a as a pointer to char and b as a char - it does not declare b as a pointer to char.
created_on: 1262676676
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1310081311.7018
owner: Random832
rate_limit: 15
ref_count: 3
ref_user: cousteau
type: text

<check>
action: /say Check: A unit testing framework for C: http://check.sourceforge.net/
created_on: 1350619625.88407
enabled: 1
last_referenced_in: esselfe
last_referenced_on: 1481778905.68498
owner: pragma-
rate_limit: 15
ref_count: 15
ref_user: esselfe!~bsfc@unaffiliated/esselfe
type: text

<chill>
action: /say OK, it's getting a little hairy, and really we're all here because we love C. So relax, take a walk, have a cuppa, whatever. Er.. please? ;)
created_on: 1182354783
enabled: 1
last_referenced_in: korans
last_referenced_on: 1478528509.49094
owner: notadev
rate_limit: 15
ref_count: 10
ref_user: korans!~korans@62.68.161.245
type: text

<chist>
action: /say A History of C, by Ritchie: http://cm.bell-labs.com/cm/cs/who/dmr/chist.html
created_on: 1297486399.2414
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1430905128.13868
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<chrisgrind>
action: where you paste your "fixed" code to Ideone and Chris reads through it to spot obvious errors.
created_on: 1346272032.66934
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1437498107.80171
owner: Tuplanolla
rate_limit: 15
ref_count: 9
ref_user: cousteau!~cousteau@138.100.74.81
type: text

<cjeopardy>
action: /say To play C Jeopardy, join #cjeopardy.
created_on: 1430085694.50901
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488656122.45378
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 15
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<class>
action: not c, try ##c++
created_on: 1177799535
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1426641687.09974
owner: runtime
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<clcwiki>
action: http://clc-wiki.net/wiki/The_C_Standard
created_on: 1276719385
enabled: 1
last_referenced_in: van7hu
last_referenced_on: 1309752013.52964
owner: lemonade`
rate_limit: 15
ref_count: 2
ref_user: van7hu
type: text

<clever>
action: /say C was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things.
created_on: 1389570697.58753
enabled: 1
last_referenced_in: pry0cc
last_referenced_on: 1481127687.7776
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 2
ref_user: pry0cc!~aleros@gateway/tor-sasl/money
type: text

<clueless>
action: my middle name
created_on: 1327015003.85254
enabled: 1
last_referenced_in: strongjava
last_referenced_on: 1476047830.75102
owner: dman777_
rate_limit: 15
ref_count: 1
ref_user: StrongJava!~tim_rohre@mobile-107-92-57-45.mycingular.net
type: text

<cmethods>
action: /say Proposal to add methods() to C structures: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1816.pdf (Briefly discussed in section 6.3 (page 8) of http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1820.pdf)
created_on: 1414861888.72965
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454808427.92921
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<collections>
action: /call fact ##c container
created_on: 1457482688.02033
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<compilerline>
action: /say Order Matters: CC <overall options> [-std=whatever] <debugging> <optimizing> <warnings> [-pedantic] <Other Include Paths> <Other Lib Paths> <Magic Defines> <Magic Undefines> [-f<language/platform options] [-m<machine options>] [-o outfile] files..... (this is all documented, and files can be .c or .o, .a or .so, or -l<to be linked> commands.) <paraphrased from man gcc>
created_on: 1266709397
enabled: 1
last_referenced_in: edk
last_referenced_on: 1432990727.27581
owner: PoppaVic
rate_limit: 15
ref_count: 22
ref_user: edk!~edk@spy/edk0
type: text

<compiles>
action: /call itworks
created_on: 1347152111.48147
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489532640.51539
owner: pragma-
rate_limit: 15
ref_count: 27
ref_user: pnbeast!~pnbeast@c-73-128-167-188.hsd1.md.comcast.net
type: text

<const>
action: http://publications.gbdirect.co.uk/c_book/chapter8/const_and_volatile.html - see section 8.4.1, http://c-faq.com/ansi/constmismatch.html
created_on: 1107648578
enabled: 1
last_referenced_in: fluter_
last_referenced_on: 1490008044.79039
owner: prec
rate_limit: 15
ref_count: 59
ref_user: fluter_!~fluter@fedora/fluter
type: text

<container>
action: /say A container/collections library proposal for C: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1625.pdf
created_on: 1457482674.61093
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1465625099.32058
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<continue>
action: /say continue causes a jump to immediately before the end of the enclosing loop body.
created_on: 1104888657
edited_by: fstd!~fstd@unaffiliated/fisted
edited_on: 1425520875.18103
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1453592329.11155
owner: Major-Willard
rate_limit: 15
ref_count: 11
ref_user: Kerr!~Kerr@cpe-98-145-82-51.natnow.res.rr.com
type: text

<conversions>
action: /say Understanding integer conversion/promotion rules: https://www.securecoding.cert.org/confluence/display/c/INT02-C.+Understand+integer+conversion+rules
created_on: 1353362078.88439
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1443195397.4132
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443195369.21684
owner: pragma-
rate_limit: 15
ref_count: 10
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<converting>
action: http://www.iso-9899.info/wiki/Converting
created_on: 1106351170
enabled: 1
last_referenced_in: zerith
last_referenced_on: 1352984120.73461
owner: prec
rate_limit: 15
ref_count: 5
ref_user: Zerith
type: text

<coroutines>
action: /say Co-routines in C, using Duff's Device: http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html
created_on: 1296848475.53312
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1442362878.28475
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<cp>
action: /say Computer programming is a process that leads from an original formulation of a problem to executable programs. It involves activities such as analysis, understanding, and generically solving such problems resulting in an algorithm, verification of requirements (including correctness, resource consumption, etc) and maintaining the source code.
created_on: 1401732252.50878
enabled: 1
last_referenced_in: marchelzo_
last_referenced_on: 1438211678.26829
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 2
ref_user: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
type: text

<cpp>
action: /say The term "cpp" in the context of the C programming language refers to the C preprocessor.  If you meant C++, then say "C++".
created_on: 1422391590.51777
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1486619743.81908
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 6
ref_user: prev!~prev@unaffiliated/prev
type: text

<cpp-com>
action: /say cplusplus-dot-com is a C++-related website that happens to reference C89 functions. Many of the examples given are actually C++ because they use 'headers' such as <cstdio> instead of <stdio.h>. A better reference would be the C99/C11 standard.
created_on: 1263936430
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1396215835.28163
enabled: 1
last_referenced_in: luka00
last_referenced_on: 1435657624.81828
owner: n00p
rate_limit: 15
ref_count: 16
ref_user: Luka00!~chatzilla@78-134-48-170.v4.ngi.it
type: text

<cpp_output>
action: http://gcc.gnu.org/onlinedocs/gcc-3.2.3/cpp/Preprocessor-Output.html
created_on: 1188757324
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: PoppaVic
type: text

<cprogramming.com>
action: /say cprogramming.com is not a site to be recommended to C learners because it "provide you with C and C++ programming language resources". Find a resource that distinctly teaches C to avoid confusion. See !books.
created_on: 1278133140.9678
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485878366.7303
owner: n00p
rate_limit: 15
ref_count: 2
ref_user: Random832!~random@unaffiliated/random832
type: text

<cpuzzles>
action: http://www.gowrikumar.com/c/index.html
created_on: 1263170451
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358515539.25258
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: mhi^
type: text

<crappaste>
action: /say Paste sites to be avoided include: codepaste.net, paste.awesom.eu, paste.jhvisser.com, paste.ofcode.org, paste.ubuntu.com, paste2.org, pastebin.fr, pastebin.ubuntu.com, pastee.org, vpaste.net, www.pasteall.org.  These sites make it unnecessarily difficult to access the raw paste data, making it less likely for you to get help with.  See the channel topic for recommended sites.
created_on: 1431277379.09249
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491137000.67162
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 4
ref_user: Introoter!derpson@gateway/shell/xshellz/x-qycecjflxmdmuxmk
type: text

<cstd>
action: /call std
created_on: 1344698408.76136
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491011733.67551
owner: pragma-
rate_limit: 15
ref_count: 308
ref_user: nchambers!~nchambers@136.62.134.51
type: text

<d>
action: the wrong specifier for double
created_on: 1108430071
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489610703.91125
noembed: 1
owner: pragma_
rate_limit: 15
ref_count: 21
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<debug>
action: /say Debugging with GCC? Enable all warnings: http://pastie.org/4612802
created_on: 1348601411.95552
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1431357468.90413
owner: Tuplanolla
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<decay>
action: /say Decaying implies permanence. Arrays do not "decay"; it is the expression that is converted, not the array. In most cases, an expression that has type "array of T" is converted to an expression with type "pointer to T" that points at the first element. See C11 6.3.2.1p3 for the exceptions. Also, ignore that Random832 idiot.
created_on: 1455734558.95187
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1490110793.15998
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490287736.48186
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 37
ref_user: FMan!~fooman@dsl-kvlbrasgw2-50dcc3-5.dhcp.inet.fi
type: text

<decl>
action: http://parrt.cs.usfca.edu/doc/how-to-read-C-declarations.html
created_on: 1195724740
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1403978369.07941
enabled: 1
last_referenced_in: sebastian
last_referenced_on: 1448162229.77934
owner: kate`
rate_limit: 15
ref_count: 17
ref_user: Sebastian!uid71324@gateway/web/irccloud.com/x-dimqxxdtbzadsjfz
type: text

<declare>
action: /call cdecl declare
created_on: 1191042438
enabled: 1
last_referenced_in: random832
last_referenced_on: 1484508627.96448
noembed: 1
owner: pragma_
rate_limit: 0
ref_count: 417
ref_user: Random832!~random@unaffiliated/random832
type: text

<declaredefine>
action: A declaration specifies the interpretation and attributes of a set of identifiers. A definition of an identifier is a declaration for that identifier that: for an object, causes storage to be reserved for that object; for a function, includes the function body; for an enumeration constant or typedef name, is the (only) declaration of the identifier.
created_on: 1179653420
enabled: 1
last_referenced_in: yar|
last_referenced_on: 1441021114.8042
owner: kate`
rate_limit: 15
ref_count: 9
ref_user: yar|!~yarl_@unaffiliated/y4r1
type: text

<declareuse>
action: /say In C, declaration follows use. That means you do not write `char* p` but instead `char *p` because it doesn't mean `p is a pointer to char` but rather `*p is a char`.  https://www.quora.com/Why-doesnt-C-use-better-notation-for-pointers
created_on: 1456092866.53151
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487736723.81151
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<deepc>
action: Expert C Programming: Deep C Secrets by Peter van der Linden. It assumes some foundation in the C programming language and covers its dustier corners as well as common misconceptions, such as array-pointer equivalence. See: http://www.amazon.com/Expert-Programming-Peter-van-Linden/dp/0131774298
created_on: 1414674074.15638
enabled: 1
last_referenced_in: doppel
last_referenced_on: 1419248569.07277
owner: boru!~boru@unaffiliated/boru
rate_limit: 15
ref_count: 1
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<defaultarguments>
action: /say { void f(int x, int y /* default 42 */, char *z /* default "foo" */) { printf("[%d, %d, %s]\n", x, y, z); }   #define F1(...) f(__VA_ARGS__, 42, "foo")\n #define F2(...) f(__VA_ARGS__, "foo")\n #define F3(...) f(__VA_ARGS__)\n #define FX(_1, _2, _3, n, ...) n\n #define f(...) FX(__VA_ARGS__, F3(__VA_ARGS__), F2(__VA_ARGS__), F1(__VA_ARGS__), 0)\n    f(2); f(4, 8); f(16, 32, "bar"); }
created_on: 1450447407.62472
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1450447484.33212
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484865200.3616
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<degenerate>
action: /call decay
created_on: 1482525171.98114
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486081798.22373
owner: marchelzo!~marchelzo@unaffiliated/marchelzo
rate_limit: 15
ref_count: 1
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<demorgan>
action: /say DeMorgan's laws: !a && !b == !(a || b), and !a || !b == !(a && b)
created_on: 1441482888.65776
edited_by: fstd!~fstd@unaffiliated/fisted
edited_on: 1441482977.91293
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481583921.72662
owner: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
rate_limit: 15
ref_count: 12
ref_user: doppel!~chatzilla@ip70-170-42-83.lv.lv.cox.net
type: text

<deport>
action: /say $arg[0] has been deported $arg[1:] (deportation id $digits$digits$digits$digits$digits)
created_on: 1480612986.14026
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489634486.56222
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 16
ref_user: mzo!~marchelzo@unaffiliated/marchelzo
type: text

<diamond>
action: cc -paste int ml = 1 + 2 * 3, ls = 1, is = 2, i = 0, cp = (ml - ls) / 2; while( ls > 0 ) putchar((i < cp + ls) ? ((i++ < cp) ? ' ' : '*') : (i=0, ((ls == ml) ? is = -is : 0), ls += is, cp = (ml - ls) / 2, '\n'));
created_on: 1321996273.58415
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1425518197.2779
enabled: 1
last_referenced_in: edk
last_referenced_on: 1440890573.32082
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: edk!~edk@spy/edk0
type: text

<digraph>
action: a two character alternative punctuator, intended to make using c possible on systems where the primary punctuator is missing, typically from keyboards. they are normal tokens, so are processed in the same way as other source characters (apart from trigraphs).
created_on: 1104552499
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<doclog>
action: /say wg14 document log: http://www.open-std.org/jtc1/sc22/wg14/www/wg14_document_log.htm
created_on: 1472912247.73614
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486000852.39698
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<does not work>
action: /call doesntwork
created_on: 1273363712
enabled: 1
owner: pbot3
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<doesn'?t\s+work>
action: doesntwork
created_on: 1231207773
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1428875202.95087
owner: pragma_
rate_limit: 0
ref_count: 1
ref_user: absof25!~absof25_@48-110.dsl.iskon.hr
type: regex

<doesntcare>
action: /say Standard C neither knows nor cares about colors, mice, windows, keyboards, networks or any other system-specific things. If you wanted help with something like that, you would want to tell us what OS, compiler, tools or libraries you intend to use/abuse, or find the appropriate channel.
created_on: 1105954303
edited_by: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
edited_on: 1380545506.62101
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1421706349.06615
owner: pragma_
rate_limit: 15
ref_count: 32
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<don'?t\s+cast\s+malloc>
action: dontcastmalloc
created_on: 1194258211
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<dontcastmalloc>
action: /say There is no need to cast the result of library functions that return void *; it makes your code hard to read, adds no value, and can hide a bug if you don't have a valid prototype in scope.  See http://c-faq.com/malloc/mallocnocast.html
created_on: 1104594725
edited_by: edk!edk@unaffiliated/edk
edited_on: 1381856673.68233
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490358062.74659
owner: infobahn
rate_limit: 15
ref_count: 890
ref_user: whoisxy!~whoisxy@87.244.83.147
type: text

<dorp>
action: /call getq 726
created_on: 1488537414.9777
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491156297.97408
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<double>
action: /say When taking input for type double you need to use lf format specifier in the scanf statement. But when you are outputting a double you use f format specifier in the printf statements.
created_on: 1195072541
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485881605.92786
owner: pragma_
rate_limit: 15
ref_count: 64
ref_user: nnpnv6!~nnpnv6@80.83.239.28
type: text

<draft>
action: /call standard
created_on: 1252608384
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481388770.57017
owner: pragma_
rate_limit: 15
ref_count: 16
ref_user: korans!~korans@46.254.253.139
type: text

<drafts>
action: /call standard
created_on: 1252608917
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: lemonade`
type: text

<duffs-device>
action: magical old school technique to directly express general loop unrolling in C. see http://www.lysator.liu.se/c/duffs-device.html
created_on: 1104395556
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<echo>
action: /say $args
created_on: 1366329288.73748
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487404475.25601
owner: Maxdamantus
rate_limit: 15
ref_count: 34
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<else>
action: the keyword that executes a statement/block should an ''if'' expression evaluate to false
created_on: 1105258795
edited_by: marchelzo!~marchelzo@hlfxns016cw-156057130092.dhcp-dynamic.FibreOp.ns.bellaliant.net
edited_on: 1440558667.3857
enabled: 1
last_referenced_in: xormor
last_referenced_on: 1466575455.28667
owner: Major-Willard
rate_limit: 15
ref_count: 3
ref_user: xormor!~xormor@unaffiliated/xormor
type: text

<errata>
action: /say When reading The C Programming Language, 2nd edition, by Kernighan and Ritchie, make sure you check the errata as well: http://www.iso-9899.info/2ediffs.html
created_on: 1442833162.77336
edited_by: edk!~edk@spy/edk0
edited_on: 1443094614.81712
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489137158.68482
owner: cousteau!~cousteau@138.100.74.81
rate_limit: 15
ref_count: 26
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<errno>
action: library error macro, #include <errno.h> The macro designates a modifiable int object that is asigned a value greater than zero on certain library errors. see http://www.iso-9899.info/man?strerror
created_on: 1104386234
enabled: 1
last_referenced_in: nheck
last_referenced_on: 1475535359.90234
noembed: 1
owner: defrost
rate_limit: 15
ref_count: 4
ref_user: nHeck!~heck@unaffiliated/nheck
type: text

<explain>
action: /call cdecl explain
created_on: 1191042468
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1441099906.79198
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485457302.88274
noembed: 1
owner: pragma_
rate_limit: 0
ref_count: 3413
ref_user: Elladan!~elladan@71-212-18-38.tukw.qwest.net
type: text

<explode>
action: /me activates the room's self-destruction mechanism.
created_on: 1375298516.87427
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1375298950.23921
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1442899323.06432
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 13
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<ez>
action: /say "Pft, I've been programming for years. How hard can C be?"  http://i.imgur.com/mPfGshE.gifv
created_on: 1484524303.44093
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<f>
action: /call double
created_on: 1195072614
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485881605.9125
noembed: 1
owner: pragma_
rate_limit: 15
ref_count: 38
ref_user: nnpnv6!~nnpnv6@80.83.239.28
type: text

<fam>
action: /say The last element of a structure with more than one named member may have an incomplete array type; this is called a flexible array member (C99 6.7.2.1p16). struct s { int n; double d[]; } *p = malloc(sizeof *p + 17 * sizeof *p->d);
created_on: 1297061351.3835
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487931665.55407
owner: Wulf
rate_limit: 15
ref_count: 23
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<fd>
action: /say an 'fd' is POSIX. Getting an 'fd' from or to a FILE pointer is POSIX. ##posix is right down the hall.
created_on: 1403204490.35345
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475429205.86899
owner: PoppaVic!~pops@unaffiliated/poppavic
rate_limit: 15
ref_count: 1
ref_user: nHeck!~heck@unaffiliated/nheck
type: text

<feof>
action: a function, taking one FILE * as an argument, indicating a file has been completely read by getc/getchar/fread (not a recommended construct)
created_on: 1104888995
enabled: 1
last_referenced_in: tommyc
last_referenced_on: 1438049221.63835
owner: Major-Willard
rate_limit: 15
ref_count: 9
ref_user: TommyC!~TommyC@unaffiliated/sepulchralbloom
type: text

<fflush(stdin)>
action: /call stdinflush
created_on: 1193892350
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482863386.64276
owner: pragma_
rate_limit: 15
ref_count: 20
ref_user: atk!Arch-TK@fsf/member/Arch-TK
type: text

<fgets.idiom>
action: while (fgets(line, sizeof line, stdin)) { /* process line */ }
created_on: 1106767895
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487341208.6267
owner: prec
rate_limit: 15
ref_count: 20
ref_user: whoisxy!~whoisxy@87.244.83.147
type: text

<findmybug>
action: /call errors
created_on: 1275602822
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475258438.47533
owner: pragma_
rate_limit: 15
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<float>
action: /call floats
created_on: 1378275883.35884
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481673839.54055
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 26
ref_user: mvm!~mvmaldere@ptr-gh1fj6y8f7swnrfvxpf.18120a2.ip6.access.telenet.be
type: text

<floats>
action: /call floating
created_on: 1346323300.76691
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483197757.31401
owner: pragma-
rate_limit: 15
ref_count: 64
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<flushstdin>
action: /call stdinflush
created_on: 1251612101
enabled: 1
last_referenced_on: 1407793101.39488
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<focus>
action: /say ##c focuses on C. Discuss offtopic things elsewhere.
created_on: 1414405845.15381
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1472428182.06325
owner: Chris!~chris@unaffiliated/chris
rate_limit: 15
ref_count: 12
ref_user: chrisf!~chrisf@hamb.in
type: text

<foo>
action: /say Bar!
created_on: 1467848605.21179
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1485741630.14348
enabled: 1
last_referenced_in: retr0id
last_referenced_on: 1487704550.50556
owner: latch!~latch@unaffiliated/latch
rate_limit: 15
ref_count: 3
ref_user: Retr0id!~null@31.205.174.14
type: text

<foobar>
action: /say English metasyntactic variables: foo, bar, baz, qux, quux, corge, grault, garply, waldo, fred, plugh, xyzzy, thud; UK: wibble, wobble, wubble; French: toto, titi, tata, tutu
created_on: 1363887757.90264
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1401585973.77407
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454684756.40773
owner: pragma-
rate_limit: 15
ref_count: 11
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<fpt>
action: /say Function Pointer Tutorial: http://www.newty.de/fpt/fpt.html
created_on: 1189558928
enabled: 1
last_referenced_in: profess
last_referenced_on: 1467603302.21375
owner: OrngeTide
rate_limit: 15
ref_count: 19
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<fptr>
action: /call fpt
created_on: 1336270737.73484
enabled: 1
last_referenced_in: profess
last_referenced_on: 1467603302.20127
owner: pragma-
rate_limit: 15
ref_count: 7
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<freebooks>
action: http://qink.net/page/The-Ultimate-List-of-Freely-Available-Programming-Books.aspx
created_on: 1288521640.40726
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1323358366.3154
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: ne2k
type: text

<function>
action: /say A function is a mapping from domain to its image which is in its codomain.
created_on: 1309885660.162
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1405827798.80873
enabled: 1
last_referenced_in: psf
last_referenced_on: 1450175996.30145
owner: angstrom
rate_limit: 15
ref_count: 17
ref_user: psf!~psf@unaffiliated/couldbe-maybe/x-1604174
type: text

<gccwarnings>
action: http://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
created_on: 1292724675.8739
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1436187948.92585
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: Chris!~chris@spy/chris
type: text

<generalization>
action: /say There's little need to make generalizations about people who program with C. Some have interesting prejudices, others don't. In any case it will depend on the individual, and not the fact that they have a preference for a particular language.
created_on: 1396278265.28473
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1396278348.69228
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424483792.80083
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 3
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<generic>
action: /call _Generic
created_on: 1370703124.03473
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488522208.60224
owner: pragma-
rate_limit: 15
ref_count: 3
ref_user: phroa!phroa@phroa.net
type: text

<getcdecl>
action: http://hpux.cs.utah.edu/hppd/hpux/Misc/cdecl-2.5/
created_on: 1191041433
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1289073798.29132
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: PoppaVic
type: text

<getopt>
action: a C library function for parsing command-line arguments. It is found on Linux, BSD, and other Unix systems.
created_on: 1237062000
enabled: 1
last_referenced_in: blasthardcheese
last_referenced_on: 1328527230.49975
owner: Quetzalcoatl_
rate_limit: 15
ref_count: 2
ref_user: BlastHardcheese
type: text

<gets>
action: very bad.  It cannot be told the size of the buffer to read in, therefore it has no way of preventing buffer overflows.  Use fgets() with 'stdin' as the FILE* instead.  http://www.eskimo.com/~scs/C-faq/q12.23.html
created_on: 1108103139
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490351052.43055
owner: pragma_
rate_limit: 15
ref_count: 109
ref_user: fluter_!~fluter@fedora/fluter
type: text

<gigo>
action: Garbage In, Garbage Out -- http://c-faq.com/malloc/malloc1.html
created_on: 1177948351
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1447990160.21402
owner: prec
rate_limit: 15
ref_count: 8
ref_user: miasmata!~void@r75-110-115-225.rmntcmtc02.rcmtnc.ab.dh.suddenlink.net
type: text

<github>
action: /say Don't use github for pasting. The line numbers are in a different font size to the code, and as a result they don't line up with lines of code correctly.
created_on: 1312615580.37046
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484081339.58589
owner: s00p
rate_limit: 15
ref_count: 1
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<global>
action: /say There is no "global" scope in C. There are four kinds of scopes: function, file, block, and function prototype. A variable that appears outside of any block or list of parameters has file scope, which terminates at the end of the translation unit.
created_on: 1271966015
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490126003.84542
owner: n00p
rate_limit: 15
ref_count: 102
ref_user: Pessimist!Pessimist@gateway/shell/layerbnc/x-uewunndhmipszexa
type: text

<globals>
action: /call global
created_on: 1369755293.8153
enabled: 1
last_referenced_on: 1423690245.32377
owner: pragma-
rate_limit: 15
ref_count: 2
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-jmizepycwyfuqovx
type: text

<gmp>
action: /say The GNU Multiple Precision Arithmetic Library: http://gmplib.org/
created_on: 1297676796.81672
enabled: 1
owner: carcat
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<gone>
action: /me is gone
created_on: 1469028038.67476
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469028041.96259
owner: latch!~latch@unaffiliated/latch
rate_limit: 15
ref_count: 1
ref_user: latch!~latch@unaffiliated/latch
type: text

<gotchas>
action: /say http://www.iso-9899.info/wiki/C_gotchas -- http://www.drpaulcarter.com/cs/common-c-errors.html
created_on: 1244833982
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1478948799.51882
owner: kate`
rate_limit: 15
ref_count: 135
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<goto>
action: http://david.tribble.com/text/goto.html
created_on: 1391026514.98241
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484604566.34965
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 7
ref_user: Learath2!~learath2@unaffiliated/learath2
type: text

<hacker>
action: /say http://dejimachan.org/pb/player.php?v=/pb/tg/src/1442078700826.webm&t=haxx0r_pro.webm&loop=1 (NSFW)
created_on: 1488324132.76303
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488360579.59126
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 1
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<hd>
action: Hacker's Delight by Henry S. Warren Jr. It discusses the use of boolean algebra and bitwise operations to reduce the computational complexity of algorithms. See http://www.hackersdelight.org and http://www.amazon.com/Hackers-Delight-Edition-Henry-Warren/dp/0321842685
created_on: 1413473509.73407
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1418044928.67205
owner: boru!~boru@unaffiliated/boru
rate_limit: 15
ref_count: 3
ref_user: boru!~boru@unaffiliated/boru
type: text

<heap>
action: /say C does not require implementations to use stacks or heaps. Please refer to the actually defined storage durations, which are four: allocated, automatic, thread and static.
created_on: 1311728565.05284
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489510961.9562
owner: guidj0s
rate_limit: 15
ref_count: 57
ref_user: whoisxy!~whoisxy@87.244.83.147
type: text

<helloworld>
action: http://www.lisha.ufsc.br/~guto/teaching/os/exercise/hello.html
created_on: 1237684920
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1421706255.71583
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<horror>
action: /say http://i.imgur.com/wLmJI.jpg
created_on: 1297994785.63317
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412432.45224
owner: carcat
rate_limit: 15
ref_count: 5
ref_user: mvm!~mvmaldere@ptr-gh1fj6zkugbfd3fi93z.18120a2.ip6.access.telenet.be
type: text

<idb>
action: implementation dependent behaviour. This must be documented by the implementation.
created_on: 1211031479
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1441826078.43339
owner: Auris-
rate_limit: 15
ref_count: 17
ref_user: Wulf!~Wulf@unaffiliated/wulf
type: text

<identifier>
action: /say An identifier can denote an object; a function; a tag or a member of a structure, union, or enumeration; a typedef name; a label name; a macro name; or a macro parameter. The same identifier can denote different entities at different points in the program.
created_on: 1268936732
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1361914689.25394
owner: Wulf
rate_limit: 15
ref_count: 4
ref_user: jjido
type: text

<if>
action: the keyword that tests a bracketed expression and if true, executes the following statement; if the expression evaluates to false an optional ''else'' clause is executed
created_on: 1105258377
edited_by: edk!~edk@spy/edk0
edited_on: 1432190788.56494
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488889394.30331
owner: Major-Willard
rate_limit: 15
ref_count: 39
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<implementation>
action: a particular set of software, running in a particular translation environment under particular control options, that performs translation of programs for, and supports execution of functions in, a particular execution environment (ISO/IEC 9899:1999 3.12)
created_on: 1106459085
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1468143586.93732
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: f-!~fluter@fedora/fluter
type: text

<include_optimisation>
action: /say Include guard optimisation: http://www.bobarcher.org/software/include/index.html
created_on: 1343905540.84575
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271867.50341
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<incomplete>
action: /say A type which describes an object is incomplete if it lacks information needed to determine its size.
created_on: 1296160419.56957
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1489340439.58134
owner: Wulf
rate_limit: 15
ref_count: 3
ref_user: dorp!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<indent>
action: /say If you are not experienced enough to adhere to coding style allowing production of readable C code, brush your source automatically: using GNU indent http://gnu.org/s/indent/, using clang-format http://clang.llvm.org/docs/ClangFormat.html, or using astyle http://astyle.sourceforge.net/
created_on: 1490358340.97491
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1490358407.65885
enabled: 1
owner: prev!~prev@unaffiliated/prev
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<inline>
action: /say A function declared with an inline function specifier is an inline function. Making a function an inline function suggests that calls to the function be as fast as possible. If you use `inline', always use `static', too.
created_on: 1273526791
enabled: 1
last_referenced_in: caze
last_referenced_on: 1484105367.22153
owner: Wulf
rate_limit: 15
ref_count: 20
ref_user: caze!~caze@unaffiliated/caze
type: text

<int>
action: a signed integer data type, at least 16 bits wide, which must be able to represent (at least) all the numbers in the range -32767 to +32767. Its lowest value, INT_MIN, and highest value, INT_MAX, are defined in <limits.h>
created_on: 1104595147
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491051894.02723
owner: infobahn
rate_limit: 15
ref_count: 261
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<isospec>
action: /call standard
created_on: 1192736447
enabled: 1
last_referenced_on: 1345109647.76207
owner: pragma_
rate_limit: 15
ref_count: 17
ref_user: eboy
type: text

<itcompiled>
action: /call works
created_on: 1362003358.68163
enabled: 1
last_referenced_on: 1412837091.93868
owner: pragma-
rate_limit: 15
ref_count: 3
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<itcompiles>
action: /call compiles
created_on: 1353554577.6299
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1474429509.02915
owner: pragma-
rate_limit: 15
ref_count: 8
ref_user: Amun_Ra!~amun-ra@retro.rocks
type: text

<json>
action: /say http://seriot.ch/parsing_json.php
created_on: 1480365887.68098
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491265659.44682
owner: kate!~kate@212.74.13.142
rate_limit: 15
ref_count: 7
ref_user: dho!~dho@veep.9vx.org
type: text

<k&r2>
action: /call k&r
created_on: 1198032355
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488567467.25067
owner: pragma_
rate_limit: 15
ref_count: 120
ref_user: badet0s!5cddd6cf@gateway/web/freenode/ip.92.221.214.207
type: text

<k&r3>
action: /say Some of us no longer primarily recommend K&R because it's somewhat outdated and unmaintained. It's tiresome reminding would-be readers of implicit int's removal in modern C, among many other issues. The errata that addresses only some of these issues no longer exists on the official site. If a 3rd edition of K&R emerges that rectifies these issues, we'll happily recommend it again!
created_on: 1485401354.13539
edited_by: izabera!~izabera@unaffiliated/izabera
edited_on: 1485401840.30539
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488190913.90448
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kickpragma>
action: /kick pragma-
created_on: 1482968360.61627
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487292346.21464
owner: cousteau!~cousteau@unaffiliated/cousteau
rate_limit: 15
ref_count: 4
ref_user: phy1729!~phy1729@zsh/wizard/phy1729
type: text

<king>
action: /say K.N. King's "C Programming: A Modern Approach" is a friendly and engaging book that teaches C99.  http://knking.com/books/c2/index.html
created_on: 1485401935.45476
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1485402211.70188
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491178116.4643
owner: izabera!~izabera@unaffiliated/izabera
rate_limit: 15
ref_count: 13
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<knf>
action: http://cvsweb.netbsd.org/bsdweb.cgi/~checkout~/src/share/misc/style
created_on: 1395462013.34465
enabled: 1
owner: fisted!~fisted@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<knr>
action: /call k&r
created_on: 1275526780
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1410171379.10645
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1410171289.68103
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: gorgath!~gorgath@127.84.70.115.static.exetel.com.au
type: text

<kr>
action: /call k&r
created_on: 1347136234.94889
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490997188.04895
owner: pragma-
rate_limit: 15
ref_count: 76
ref_user: baklava[m]!baklavamat@gateway/shell/matrix.org/x-tvyiaukyhyeakcas
type: text

<kr1-1>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-1. Run the ‘‘hello, world’’ program on your system. Experiment with leaving out parts of the program, to see what error messages you get.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: x-scale
last_referenced_on: 1489620844.40367
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 16
ref_user: X-Scale!~ARM@214.20.108.93.rev.vodafone.pt
type: text

<kr1-10>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-10. Write a program to copy its input to its output, replacing each tab by \t, each backspace by \b, and each backslash by \\. This makes tabs and backspaces visible in an unambiguous way.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445704725.05284
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 7
ref_user: sonro!~sonro@host109-150-97-218.range109-150.btcentralplus.com
type: text

<kr1-11>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-11. How would you test the word count program? What kinds of input are most likely to uncover bugs if there are any?
created_on: 1436132320.52224
enabled: 1
last_referenced_in: jchapman27
last_referenced_on: 1445569009.05874
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 11
ref_user: jchapman27!~Zuroxx@host-128-227-216-237.xlate.ufl.edu
type: text

<kr1-12>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-12. Write a program that prints its input one word per line.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: richard_cavell
last_referenced_on: 1484061323.63537
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 11
ref_user: Richard_Cavell!~Richard_C@host86-187-163-55.range86-187.btcentralplus.com
type: text

<kr1-13>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-13. Write a program to print a histogram of the lengths of words in its input. It is easy to draw the histogram with the bars horizontal; a vertical orientation is more challenging.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: richard_cavell
last_referenced_on: 1484061339.23674
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 32
ref_user: Richard_Cavell!~Richard_C@host86-187-163-55.range86-187.btcentralplus.com
type: text

<kr1-14>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-14. Write a program to print a histogram of the frequencies of different characters in its input.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: richard_cavell
last_referenced_on: 1484255760.48444
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 15
ref_user: Richard_Cavell!~Richard_C@host86-187-169-188.range86-187.btcentralplus.com
type: text

<kr1-15>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-15. Rewrite the temperature conversion program of Section 1.2 to use a function for conversion.
created_on: 1436132320.52224
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436133004.34823
enabled: 1
last_referenced_in: caze
last_referenced_on: 1485622454.62611
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: caze!~caze@unaffiliated/caze
type: text

<kr1-16>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-16. Revise the main routine of the longest-line program so it will correctly print the length of arbitrary long input lines, and as much as possible of the text.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1491077032.17698
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 12
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<kr1-17>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-17. Write a program to print all input lines that are longer than 80 characters.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: caze
last_referenced_on: 1485622441.694
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 26
ref_user: caze!~caze@unaffiliated/caze
type: text

<kr1-18>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-18. Write a program to remove trailing blanks and tabs from each line of input, and to delete entirely blank lines.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: caze
last_referenced_on: 1485622436.1141
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 45
ref_user: caze!~caze@unaffiliated/caze
type: text

<kr1-19>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-19. Write a function reverse(s) that reverses the character string s. Use it to write a program that reverses its input a line at a time.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: caze
last_referenced_on: 1485622578.24745
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 19
ref_user: caze!~caze@unaffiliated/caze
type: text

<kr1-2>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-2. Experiment to find out what happens when prints’s argument string contains \c, where c is some character not listed above.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1459184306.14967
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 6
ref_user: koste!~koste@B92556B0.rev.sefiber.dk
type: text

<kr1-20>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-20. Write a program detab that replaces tabs in the input with the proper number of blanks to space to the next tab stop. Assume a fixed set of tab stops, say every n columns. Should n be a variable or a symbolic parameter?
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485623608.02134
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 22
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<kr1-21>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-21. Write a program entab that replaces strings of blanks by the minimum number of tabs and blanks to achieve the same spacing. Use the same tab stops as for detab. When either a tab or a single blank would suffice to reach a tab stop, which should be given preference?
created_on: 1436132320.52224
enabled: 1
last_referenced_in: caze
last_referenced_on: 1485622553.2121
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: caze!~caze@unaffiliated/caze
type: text

<kr1-22>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-22. Write a program to ‘‘fold’’ long input lines into two or more shorter lines after the last non-blank character that occurs before the n-th column of input. Make sure your program does something intelligent with very long lines, and if there are no blanks or tabs before the specified column.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486562092.94849
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 11
ref_user: Learath2!~learath2@unaffiliated/learath2
type: text

<kr1-23>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-23. Write a program to remove all comments from a C program. Don’t forget to handle quoted strings and character constants properly. C comments don’t nest.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485689681.53356
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 21
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<kr1-24>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-24. Write a program to check a C program for rudimentary syntax errors like unmatched parentheses, brackets and braces. Don’t forget about quotes, both single and double, escape sequences, and comments. (This program is hard if you do it in full generality.)
created_on: 1436132320.52224
enabled: 1
last_referenced_in: e
last_referenced_on: 1482869363.29561
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: e!e@freenode/staff/spy.edk
type: text

<kr1-3>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-3. Modify the temperature conversion program to print a heading above the table.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: sonro
last_referenced_on: 1453931506.03243
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: sonro!~sonro@host109-151-175-156.range109-151.btcentralplus.com
type: text

<kr1-4>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-4. Write a program to print the corresponding Celsius to Fahrenheit table.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1438433229.15415
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: kate!~kate@unaffiliated/kate
type: text

<kr1-5>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-5. Modify the temperature conversion program to print the table in reverse order, that is, from 300 degrees to 0.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: sonro
last_referenced_on: 1453931519.54036
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: sonro!~sonro@host109-151-175-156.range109-151.btcentralplus.com
type: text

<kr1-6>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-6. Verify that the expression getchar() != EOF is 0 or 1.
created_on: 1442279238.77698
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482689022.58129
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<kr1-7>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-7. Write a program to print the value of EOF.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1455945291.96424
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<kr1-8>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-8. Write a program to count blanks, tabs, and newlines.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: sonro
last_referenced_on: 1453932656.22594
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 6
ref_user: sonro!~sonro@host109-151-175-156.range109-151.btcentralplus.com
type: text

<kr1-9>
action: /say Chapter 1: A Tutorial Introduction; Exercise 1-9. Write a program to copy its input to its output, replacing each string of one or more blanks by a single blank.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1487986193.72448
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr2>
action: /call k&r
created_on: 1445463607.69615
enabled: 1
last_referenced_in: jm0
last_referenced_on: 1479901466.22457
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 8
ref_user: jm0!~jm0@0125200306.0.fullrate.ninja
type: text

<kr2-1>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-1. Write a program to determine the ranges of char, short, int, and long variables, both signed and unsigned, by printing appropriate values from standard headers and by direct computation. Harder if you compute them: determine the ranges of the various floating-point types.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486231556.68465
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<kr2-10>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-10. Rewrite the function lower, which converts upper case letters to lower case, with a conditional expression instead of if-else.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443891625.33312
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: schquid!~schquid@unaffiliated/schquid
type: text

<kr2-2>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-2. Write a loop equivalent to the for loop above without using && or ||. [The for loop is: for (i=0; i < lim-1 && (c=getchar()) != ’\n’ && c != EOF; ++i) s[i] = c;]
created_on: 1436132320.52224
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436245803.73035
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445958294.78366
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<kr2-3>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-3. Write a function htoi(s), which converts a string of hexadecimal digits (including an optional 0x or 0X) into its equivalent integer value. The allowable digits are 0 through 9, a through f, and A through F.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443181104.11369
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr2-4>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-4. Write an alternative version of squeeze(s1,s2) that deletes each character in s1 that matches any character in the string s2.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485343901.25111
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<kr2-5>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-5. Write the function any(s1,s2), which returns the first location in a string s1 where any character from the string s2 occurs, or -1 if s1 contains no characters from s2. (The standard library function strpbrk does the same job but returns a pointer to the location.)
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486922113.34719
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: text

<kr2-6>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-6. Write a function setbits(x,p,n,y) that returns x with the n bits that begin at position p set to the rightmost n bits of y, leaving the other bits unchanged.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1455363757.38355
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 12
ref_user: fluter!~fluter@fedora/fluter
type: text

<kr2-7>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-7. Write a function invert(x,p,n) that returns x with the n bits that begin at position p inverted (i.e., 1 changed into 0 and vice versa), leaving the others unchanged.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443714168.10692
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr2-8>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-8. Write a function rightrot(x,n) that returns the value of the integer x rotated to the right by n positions.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443728960.29898
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr2-9>
action: /say Chapter 2: Types, Operators and Expressions; Exercise 2-9. In a two’s complement number system, x &= (x-1) deletes the rightmost 1-bit x. Explain why. Use this observation to write a faster version of bitcount.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1457062280.70014
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<kr3>
action: /call k&r3
created_on: 1485401792.31325
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488190913.90322
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr3-1>
action: /say Chapter 3: Control Flow; Exercise 3-1. Our binary search makes two tests inside the loop, when one would suffice (at the price of more tests outside.) Write a version with only one test inside the loop and measure the difference in run-time.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486595531.92619
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: doppel!~chatzilla@ip70-170-42-83.lv.lv.cox.net
type: text

<kr3-2>
action: /say Chapter 3: Control Flow; Exercise 3-2. Write a function escape(s,t) that converts characters like newline and tab into visible escape sequences like \n and \t as it copies the string t to s. Use a switch. Write a function for the other direction as well, converting escape sequences into the real characters.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486599351.23884
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: doppel!~chatzilla@ip70-170-42-83.lv.lv.cox.net
type: text

<kr3-3>
action: /say Chapter 3: Control Flow; Exercise 3-3. Write a function expand(s1,s2) that expands shorthand notations like a-z in the string s1 into the equivalent complete list abc...xyz in s2. Allow for letters of either case and digits, and be prepared to handle cases like a-b-c and a-z0-9 and -a-z. Arrange that a leading or trailing - is taken literally.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487286551.44435
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: doppel!~chatzilla@ip70-170-42-83.lv.lv.cox.net
type: text

<kr3-4>
action: /say Chapter 3: Control Flow; Exercise 3-4. In a two’s complement number representation, our version of itoa does not handle the largest negative number, that is, the value of n equal to -(2^(wordsize-1)). Explain why not. Modify it to print that value correctly, regardless of the machine on which it runs.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: marchelzo
last_referenced_on: 1439307973.90836
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: marchelzo!~marchelzo@216.83.6.45
type: text

<kr3-5>
action: /say Chapter 3: Control Flow; Exercise 3-5. Write the function itob(n,s,b) that converts the integer n into a base b character representation in the string s. In particular, itob(n,s,16) formats n as a hexadecimal integer in s.
created_on: 1436132320.52224
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1444362173.09691
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1444460210.62205
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: Wulf!~Wulf@unaffiliated/wulf
type: text

<kr3-6>
action: /say Chapter 3: Control Flow; Exercise 3-6. Write a version of itoa that accepts three arguments instead of two. The third argument is a minimum field width; the converted number must be padded with blanks on the left if necessary to make it wide enough.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: pessimist
last_referenced_on: 1454928016.82059
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-aynrofrafrmgbfxw
type: text

<kr4-1>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-1. Write the function strindex(s,t) which returns the position of the rightmost occurrence of t in s, or -1 if there is none.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1444788581.98524
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: apokatastasis!~void@r75-110-115-225.rmntcmtc02.rcmtnc.ab.dh.suddenlink.net
type: text

<kr4-10>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-10. An alternate organization uses getline to read an entire input line; this makes getch and ungetch unnecessary. Revise the calculator to use this approach.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: nheck
last_referenced_on: 1475536463.58726
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: nHeck!~heck@unaffiliated/nheck
type: text

<kr4-11>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-11. Modify getop so that it doesn’t need to use ungetch. Hint: use an internal static variable.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1436237347.37761
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr4-12>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-12. Adapt the ideas of printd to write a recursive version of itoa; that is, convert an integer into a string by calling a recursive routine.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440903346.96817
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: Trigraph!Trigraph@unaffiliated/trigraph
type: text

<kr4-13>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-13. Write a recursive version of the function reverse(s), which reverses the string s in place.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1438329047.64494
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: thomas_d!~thomas_d@unaffiliated/thomas-d/x-6984210
type: text

<kr4-14>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-14. Define a macro swap(t,x,y) that interchanges two arguments of type t. (Block structure will help.)
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr4-2>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-2. Extend atof to handle scientific notation of the form 123.45e-6 where a floating-point number may be followed by e or E and an optionally signed exponent.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr4-3>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-3. Given the basic framework, it’s straightforward to extend the calculator. Add the modulus (%) operator and provisions for negative numbers.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445059389.73775
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr4-4>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-4. Add the commands to print the top elements of the stack without popping, to duplicate it, and to swap the top two elements. Add a command to clear the stack.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445139294.9957
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<kr4-5>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-5. Add access to library functions like sin, exp, and pow. See <math.h> in Appendix B, Section 4.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1436236421.70658
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr4-6>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-6. Add commands for handling variables. (It’s easy to provide twenty-six variables with single-letter names.) Add a variable for the most recently printed value.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489620805.44798
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: doppel!~chatzilla@ip70-170-42-83.lv.lv.cox.net
type: text

<kr4-7>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-7. Write a routine ungets(s) that will push back an entire string onto the input. Should ungets know about buf and bufp, or should it just use ungetch?
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454616223.26004
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: Pheinte!~Pheinte@188.250.192.26
type: text

<kr4-8>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-8. Suppose that there will never be more than one character of pushback. Modify getch and ungetch accordingly.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1437767540.26951
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: thomas_d!~thomas_d@unaffiliated/thomas-d/x-6984210
type: text

<kr4-9>
action: /say Chapter 4: Functions and Program Structure; Exercise 4-9. Our getch and ungetch do not handle a pushed-back EOF correctly. Decide what their properties ought to be if an EOF is pushed back, then implement your design.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1446154026.56302
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<kr5-1>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-1. As written, getint treats a + or - not followed by a digit as a valid representation of zero. Fix it to push such a character back on the input.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: xguest144
last_referenced_on: 1444196491.82115
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: xguest144!~user@93.177.55.112
type: text

<kr5-10>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-10. Write the program expr, which evaluates a reverse Polish expression from the command line, where each operator or operand is a separate argument. For example, expr 2 3 4 + * evaluates 2 * (3 + 4).
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-11>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-11. Modify the program entab and detab (written as exercises in Chapter 1) to accept a list of tab stops as arguments. Use the default tab settings if there are no arguments.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456959200.34594
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: latch!latch@nat/intel/x-cqdsecxfqywjujet
type: text

<kr5-12>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-12. Extend entab and detab to accept the shorthand `entab -m +n` to mean tab stops every n columns, starting at column m. Choose convenient (for the user) default behavior.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1441884276.10871
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr5-13>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-13. Write the program tail, which prints the last n lines of its input. By default, n is set to 10, let us say, but it can be changed by an optional argument so that `tail -n` prints the last n lines. The program should behave rationally no matter how unreasonable the input or the value of n. Write the program so that it makes the best use of available storage; lines should be stored as in the sorting program of Section 5.6, not in a two-dimensional array of fixed size.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1457219427.6722
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: Arch-TK!Arch-TK@fsf/member/Arch-TK
type: text

<kr5-14>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-14. Modify the sort program to handle a -r flag, which indicates sorting in reverse (decreasing) order. Be sure that -r works with -n.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-15>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-15. Add the option -f to fold upper and lower case together, so that case distinctions are not made during sorting; for example, a and A compare equal.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: profess
last_referenced_on: 1440903259.14912
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<kr5-16>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-16. Add the -d (‘‘directory order’’) option, which makes comparisons only on letters, numbers and blanks. Make sure it works in conjunction with -f.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-17>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-17. Add a field-searching capability, so sorting may bee done on fields within lines, each field sorted according to an independent set of options. (The index for this book was sorted with -df for the index category and -n for the page numbers.)
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445908815.78887
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: X-Scale!~gbabios@2001:0:53aa:64c:0:386:fa61:d82b
type: text

<kr5-18>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-18. Make dcl recover from input errors.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-19>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-19. Modify undcl so that it does not add redundant parentheses to declarations.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: xguest144
last_referenced_on: 1444196694.03397
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: xguest144!~user@93.177.55.112
type: text

<kr5-2>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-2. Write getfloat, the floating-point analog of getint. What type does getfloat return as its function value?
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-20>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-20. Expand dcl to handle declarations with function argument types, qualifiers like const, and so on.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: tcmitchell
last_referenced_on: 1450035747.49968
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 6
ref_user: tcmitchell!~quassel@ec2-52-3-178-31.compute-1.amazonaws.com
type: text

<kr5-3>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-3. Write a pointer version of the function strcat that we showed in Chapter 2: strcat(s,t) copies the string t to the end of s.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-4>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-4. Write the function strend(s,t), which returns 1 if the string t occurs at the end of the string s, and zero otherwise.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: anonnumberanon
last_referenced_on: 1454365465.15646
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr5-5>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-5. Write versions of the library functions strncpy, strncat, and strncmp, which operate on at most the first n characters of their argument strings. For example, strncpy(s,t,n) copies at most n characters of t to s. Full descriptions are in Appendix B.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: anonnumberanon
last_referenced_on: 1454365945.18701
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr5-6>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-6. Rewrite appropriate programs from earlier chapters and exercises with pointers instead of array indexing. Good possibilities include getline (Chapters 1 and 4), atoi, itoa, and their variants (Chapters 2, 3, and 4), reverse (Chapter 3), and strindex and getop (Chapter 4).
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456457459.42855
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<kr5-7>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-7. Rewrite readlines to store lines in an array supplied by main, rather than calling alloc to maintain storage. How much faster is the program?
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443877957.6342
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: thomas_d!~thomas_d@unaffiliated/thomas-d/x-6984210
type: text

<kr5-8>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-8. There is no error checking in day_of_year or month_day. Remedy this defect.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr5-9>
action: /say Chapter 5: Pointers and Arrays; Exercise 5-9. Rewrite the routines day_of_year and month_day with pointers instead of indexing.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr6-1>
action: /say Chapter 6: Structures; Exercise 6-1. Our version of getword does not properly handle underscores, string constants, comments, or preprocessor control lines. Write a better version.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1457320244.43531
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr6-2>
action: /say Chapter 6: Structures; Exercise 6-2. Write a program that reads a C program and prints in alphabetical order each group of variable names that are identical in the first 6 characters, but different somewhere thereafter. Don’t count words within strings and comments. Make 6 a parameter that can be set from the command line.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr6-3>
action: /say Chapter 6: Structures; Exercise 6-3. Write a cross-referencer that prints a list of all words in a document, and for each word, a list of the line numbers on which it occurs. Remove noise words like ‘‘the,’’ ‘‘and,’’ and so on.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr6-4>
action: /say Chapter 6: Structures; Exercise 6-4. Write a program that prints the distinct words in its input sorted into decreasing order of frequency of occurrence. Precede each word by its count.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr6-5>
action: /say Chapter 6: Structures; Exercise 6-5. Write a function undef that will remove a name and definition from the table maintained by lookup and install.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1452408343.20801
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<kr6-6>
action: /say Chapter 6: Structures; Exercise 6-6. Implement a simple version of the #define processor (i.e., no arguments) suitable for use with C programs, based on the routines of this section. You may also find getch and ungetch helpful.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443631520.27406
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kr7-1>
action: /say Chapter 7: Input and Output; Exercise 7-1. Write a program that converts upper case to lower or lower case to upper, depending on the name it is invoked with, as found in argv[0].
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr7-2>
action: /say Chapter 7: Input and Output; Exercise 7-2. Write a program that will print arbitrary input in a sensible way. As a minimum, it should print non-graphic characters in octal or hexadecimal according to local custom, and break long text lines.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr7-3>
action: /say Chapter 7: Input and Output; Exercise 7-3. Revise minprintf to handle more of the other facilities of printf.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr7-4>
action: /say Chapter 7: Input and Output; Exercise 7-4. Write a private version of scanf analogous to minprintf from the previous section.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr7-5>
action: /say Chapter 7: Input and Output; Exercise 7-5. Rewrite the postfix calculator of Chapter 4 to use scanf and/or sscanf to do the input and number conversion.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: profess
last_referenced_on: 1440903306.56154
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<kr7-6>
action: /say Chapter 7: Input and Output; Exercise 7-6. Write a program to compare two files, printing the first line where they differ.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr7-7>
action: /say Chapter 7: Input and Output; Exercise 7-7. Modify the pattern finding program of Chapter 5 to take its input from a set of named files or, if no files are named as arguments, from the standard input. Should the file name be printed when a matching line is found?
created_on: 1436132320.52224
enabled: 1
last_referenced_in: marchelzo_
last_referenced_on: 1436282986.9576
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: marchelzo_!~marchelzo@hlfxns016cw-156057132245.dhcp-dynamic.FibreOp.ns.bellaliant.net
type: text

<kr7-8>
action: /say Chapter 7: Input and Output; Exercise 7-8. Write a program to print a set of files, starting each new one on a new page, with a title and a running page count for each file.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440289330.24048
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: MethylatorX!~quassel@41.238.141.38
type: text

<kr7-9>
action: /say Chapter 7: Input and Output; Exercise 7-9. Functions like isupper can be implemented to save space or to save time. Explore both possibilities.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr8-1>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-1. Rewrite the program cat from Chapter 7 using read, write, open, and close instead of their standard library equivalents. Perform experiments to determine the relative speeds of the two versions.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1441742817.7639
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: jd1!jd1@unaffiliated/jd1
type: text

<kr8-2>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-2. Rewrite fopen and _fillbuf with fields instead of explicit bit operations. Compare code size and execution speed.
created_on: 1436132320.52224
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1441859080.10226
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<kr8-3>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-3. Design and write _flushbuf, fflush, and fclose.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr8-4>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-4. The standard library function int fseek(FILE *fp, long offset, int origin) is identical to lseek except that fp is a file pointer instead of a file descriptor and return value is an int status, not a position. Write fseek. Make sure that your fseek coordinates properly with the buffering done for other functions of the library.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr8-5>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-5. Modify the fsize program to print the other information contained in the inode entry.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr8-6>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-6. The standard library function calloc(n,size) returns a pointer to n objects of size size, with the storage initialized to zero. Write calloc, by calling malloc or by modifying it.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr8-7>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-7. malloc accepts a size request without checking its plausibility; free believes that the block it is asked to free contains a valid size field. Improve these routines so they make more pains with error checking.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr8-8>
action: /say Chapter 8: The UNIX System Interface; Exercise 8-8. Write a routine bfree(p,n) that will free any arbitrary block p of n characters into the free list maintained by malloc and free. By using bfree, a user can add a static or external array to the free list at any time.
created_on: 1436132320.52224
enabled: 1
owner: pragma-!chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<kr_lovecraft>
action: /say pragma- found this: http://www.bobhobbs.com/files/kr_lovecraft.html
created_on: 1469739479.38136
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487292440.43731
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<krexercises>
action: kr1-1 kr1-10 kr1-11 kr1-12 kr1-13 kr1-14 kr1-15 kr1-16 kr1-17 kr1-18 kr1-19 kr1-2 kr1-20 kr1-21 kr1-22 kr1-23 kr1-24 kr1-3 kr1-4 kr1-5 kr1-7 kr1-8 kr1-9 kr2-1 kr2-10 kr2-2 kr2-3 kr2-4 kr2-5 kr2-6 kr2-7 kr2-8 kr2-9 kr3-1 kr3-2 kr3-3 kr3-4 kr3-5 kr3-6 kr4-1 kr4-10 kr4-11 kr4-12 kr4-13 kr4-14 kr4-2 kr4-3 kr4-4 kr4-5 kr4-6 kr4-7 kr4-8 kr4-9 kr5-1 kr5-10 kr5-11 kr5-12 kr5-13 kr5-14 kr5-15 kr5-16 kr5-17 kr5-18 kr5-19 kr5-2 kr5-20 kr5-3 kr5-4 kr5-5 kr5-6 kr5-7 kr5-8 kr5-9 kr6-1 kr6-2 kr6-3 kr6-4 kr6-5 kr6-6 kr7-1 kr7-2 kr7-3 kr7-4 kr7-5 kr7-6 kr7-7 kr7-8 kr7-9 kr8-1 kr8-2 kr8-3 kr8-4 kr8-5 kr8-6 kr8-7 kr8-8
created_on: 1436235395.83959
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436236393.26433
enabled: 1
last_referenced_in: edk
last_referenced_on: 1446056913.33695
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: edk!~edk@spy/edk0
type: text

<language>
action: /say Please apply bad language judiciously and on a case-by-case basis.
created_on: 1462294698.4657
enabled: 1
owner: qi!edk@spy/edk0
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<last>
action: /say No refunds.
created_on: 1385866053.26907
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445941228.36753
owner: addatoo!~daem0n@c-98-204-134-144.hsd1.md.comcast.net
rate_limit: 15
ref_count: 7
ref_user: fluter!~fluter@fedora/fluter
type: text

<lcthw>
action: /say Learn C The Hard Way is an online book that should be avoided. It does not teach you C, but rather shows how C might work on a specific implementation. It contains numerous errors, bad examples and absurd arguments. See https://kellett.im/a/hardway and http://hentenaar.com/dont-learn-c-the-wrong-way
created_on: 1397901901.34281
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1461022404.41108
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490133287.97093
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 122
ref_user: Pessimist!Pessimist@gateway/shell/layerbnc/x-uewunndhmipszexa
type: text

<ld>
action: /say "Undefined reference" is a linker error. It's not a compile error. #includes don't help. You did not define the thing in the error message; you forgot to link the file that defines it; you forgot to link to the library that defines it; or, if it's a static library, you have the wrong order on the linker command line. Check which one. (Note that some linkers call it an unresolved external.)
created_on: 1287675054.41867
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490299152.4549
owner: boris``
rate_limit: 15
ref_count: 13
ref_user: dminuoso!~dminuoso@unaffiliated/dminuoso
type: text

<lf>
action: /call double
created_on: 1195072615
enabled: 1
last_referenced_on: 1348174703.91828
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: pragma-
type: text

<libc>
action: /say The term "libc" is commonly used as a shorthand for the "standard C library", a library of standard functions that can be used by all C programs (and sometimes by programs in other languages).
created_on: 1477416340.6549
enabled: 1
owner: latch!~latch@unaffiliated/latch
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<libpack>
action: http://www.leonerd.org.uk/code/libpack
created_on: 1200500816
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1478884801.4319
owner: PoppaVic
rate_limit: 15
ref_count: 163
ref_user: LeoNerd!~leo@genoa.dictatorshipcake.co.uk
type: text

<libtermkey>
action: http://www.leonerd.org.uk/code/libtermkey/
created_on: 1310053812.10731
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1472415437.19958
owner: LeoNerd
rate_limit: 15
ref_count: 7
ref_user: kate!~kate@unaffiliated/kate
type: text

<linkers>
action: http://www.lurklurk.org/linkers/linkers.html
created_on: 1407364057.09611
enabled: 1
last_referenced_in: korans
last_referenced_on: 1469229050.7063
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: korans!~korans@46.254.251.97
type: text

<lm>
action: Link the bloody math library
created_on: 1310268412.10528
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<local>
action: /say There is no "local" scope in C. There are four kinds of scopes: function, file, block, and function prototype. A variable that appears inside of a function has block scope, which terminates at the end of the block.
created_on: 1478367197.55075
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1478367495.23654
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 1
ref_user: enso!~damien@hlfxns016cw-156034000026.dhcp-dynamic.FibreOP.ns.bellaliant.net
type: text

<lock>
action: In computer science, a lock is a synchronization mechanism for enforcing limits on access to a resource in an environment where there are many threads of execution
created_on: 1339710616.13249
enabled: 1
last_referenced_in: devut
last_referenced_on: 1481286762.09573
owner: sickle
rate_limit: 15
ref_count: 6
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<long>
action: a signed integer data type, at least 32 bits wide, which must be able to represent (at least) all the integers in the range -2147483647 to +2147483647. Its lowest value, LONG_MIN, and highest value, LONG_MAX, are defined in <limits.h>
created_on: 1104595499
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489805431.30081
owner: infobahn
rate_limit: 15
ref_count: 34
ref_user: Elronnd!elronnd@slashem.me
type: text

<longlong>
action: /say long long is a signed integer data type, at least 64 bits wide, which must be able to represent (at least) all the integers in the range -9223372036854775807 to +9223372036854775807. Its lowest value, LLONG_MIN, and highest value, LLONG_MAX, are defined in <limits.h>
created_on: 1412837197.37342
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1412837286.63687
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1412980443.46798
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<longlonglong>
action: /say long long long is too long for candide
created_on: 1412837217.23202
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445941238.34386
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: fluter!~fluter@fedora/fluter
type: text

<lowlevel>
action: /say If everything remotely "low level" were to automatically become associated with C, ##C would be flooded with tonnes of irrelevant questions about assembly and hardware.
created_on: 1446689401.22552
enabled: 1
owner: Sebastian!uid71324@gateway/web/irccloud.com/x-uqvndqntaomdnmvk
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<lvalue>
action: /say An lvalue is an expression that potentially designates an object. When its value is used, it is converted to the value stored in its deisgnated object. Only modifiable lvalues can be assigned to; these include non-const variables and pointer dereferences.
created_on: 1251745741
edited_by: edk!edk@spy/edk0
edited_on: 1456752711.96025
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481234818.70516
owner: Wulf_
rate_limit: 15
ref_count: 14
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<lysator>
action: http://www.lysator.liu.se/c/
created_on: 1104460803
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<macroargopt>
action: /say { #define ASSERT1(...) printf("[cond = %d]\n", __VA_ARGS__)\n  #define ASSERT2(...) printf("[cond = %d, msg = %s]\n", __VA_ARGS__)\n #define ASSERTX(a, b, n, ...) n\n #define ASSERT(...) ASSERTX(__VA_ARGS__, ASSERT2(__VA_ARGS__), ASSERT1(__VA_ARGS__), 0)\n     ASSERT(5, "hi");  ASSERT(42); }
created_on: 1450229844.8849
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1488844043.85121
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 7
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<main>
action: int main(int argc, char *argv[]); or int main(int argc, char **argv); or int main(void); or some other implementation-defined prototype; See also ''argc'' and ''argv''; the standard entry point to C programs
created_on: 1104231974
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456055714.80564
owner: twkm
rate_limit: 15
ref_count: 106
ref_user: kate!~kate@unaffiliated/kate
type: text

<mainloop_io>
action: http://www.linuxjournal.com/article/8545
created_on: 1181404512
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 7
ref_user: PoppaVic
type: text

<malloc>
action: /call dontcastmalloc
created_on: 1280342692.40847
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1481449461.34616
owner: PoppaVic
rate_limit: 15
ref_count: 166
ref_user: dorp!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<mallocidiom>
action: /call mallocsizeof
created_on: 1455739914.6829
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489038230.84758
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 32
ref_user: bg!~marchelzo@unaffiliated/marchelzo
type: text

<mallocobj>
action: /say It's better to use the object instead of the type as argument to sizeof when allocating.  int *p; p = malloc(sizeof *p); is preferable to p = malloc(sizeof (int)); because you can then later change p to long *p or some other type without having to worry about maintaining or forgetting to change the malloc.
created_on: 1393209164.51908
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1393209237.03703
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1393209173.40239
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<mallocsizeof>
action: /say T *p = malloc(sizeof *p) is a much more robust idiom than T *p = malloc(sizeof (T)) because there is no chance of the sizeof (T) failing to match up with the T that was used to declare p. It's also more concise and easier to read.
created_on: 1397858781.41594
edited_by: fstd!~fstd@unaffiliated/fisted
edited_on: 1406748421.69367
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489038230.84861
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 47
ref_user: bg!~marchelzo@unaffiliated/marchelzo
type: text

<man-pages-posix>
action: If you are using OS that tries to be POSIX-compliant, or if such OS is target platform, use POSIX manpages: `emerge man-pages-posix` in Gentoo; `apt-get install manpages-posix manpages-posix-dev` in Debian or Ubuntu; in Windows download man-pages-posix from https://tinyurl.com/man-pages-posix or download the POSIX from http://pubs.opengroup.org/onlinepubs/9699919799/download/
created_on: 1491385273.48663
enabled: 1
owner: prev!~prev@unaffiliated/prev
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<mantra>
action: /say mantra for ##c
created_on: 1489922426.5379
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489922430.01648
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<mathsucks>
action: http://thebestpageintheuniverse.net/c.cgi?u=math
created_on: 1326217577.13828
enabled: 1
last_referenced_in: izabera
last_referenced_on: 1422143424.31308
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: izabera!~izabera@unaffiliated/izabera
type: text

<mem>
action: a reserved function identifier prefix when followed by a lowercase letter
created_on: 1104399754
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1462373725.98803
owner: prec
rate_limit: 15
ref_count: 10
ref_user: latch!~latch@unaffiliated/latch
type: text

<memory>
action: /say The structure of computer memory and how it is utilised is something with which all programmers should be familiar. See Drepper's paper: What Every Programmer Should Know About Memory: http://www.akkadia.org/drepper/cpumemory.pdf
created_on: 1401652092.59877
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440850983.82243
owner: boru!~boru@unaffiliated/boru
rate_limit: 15
ref_count: 4
ref_user: u-ou!no-n@unaffiliated/no-n
type: text

<meta>
action: /call foobar
created_on: 1401586471.69946
enabled: 1
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<metasyntactic>
action: /call foobar
created_on: 1401586478.33928
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440504331.64632
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 1
ref_user: kate!~kate@unaffiliated/kate
type: text

<muldim>
action: http://c-faq.com/aryptr/dynmuldimary.html
created_on: 1271609036
enabled: 1
last_referenced_in: sha0
last_referenced_on: 1334027090.56312
owner: PoppaVic
rate_limit: 15
ref_count: 36
ref_user: sha0
type: text

<my penis>
action: defined as unsigned char
created_on: 1333507899.57137
enabled: 1
owner: Sarajevo
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<n1256>
action: http://www.open-std.org/jtc1/sc22/WG14/www/docs/n1256.pdf
created_on: 1271198634
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480389537.15888
owner: pragma_
rate_limit: 15
ref_count: 12
ref_user: sha0!~sha0@CPEbcc8101460c0-CMbcc8101460bd.cpe.net.cable.rogers.com
type: text

<n1570>
action: /call c11
created_on: 1451426711.22426
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484961919.56371
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: phox!~phox@c-73-225-0-79.hsd1.wa.comcast.net
type: text

<nacq>
action: /say Not a C question. Your question is not specific to the C programming language. Standard C does not know nor care about colors, mice, windows, keyboards, networks or any other system-specific things. Please tell us what OS, compiler, tools or libraries you are using/abusing; or find the appropriate channel.
created_on: 1315568063.61932
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480819744.1488
owner: pragma_
rate_limit: 15
ref_count: 14
ref_user: izalove!~izabera@unaffiliated/izabera
type: text

<nelemof>
action: a standard idiom for computing the number of elements in an array variable:  #define nelemof(array) (sizeof array/sizeof *array)
created_on: 1108151345
enabled: 1
last_referenced_on: 1278616504.23704
owner: prec
rate_limit: 15
ref_count: 3
ref_user: n00p
type: text

<newjargon>
action: http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html
created_on: 1352347011.50444
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1403859656.49467
owner: pragma-
rate_limit: 15
ref_count: 8
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<newline>
action: /say \n represents an implementation-defined character value, which is translated to and from the system end-of-line character sequence when written to or read from a stream in text mode.
created_on: 1454618306.41377
enabled: 1
last_referenced_in: edk
last_referenced_on: 1454638706.77244
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 2
ref_user: edk!~edk@spy/edk0
type: text

<notC>
action: /say That is not a C issue.  This channel exists for discussion of the Standard C Language itself; not tools such as Makefiles, IDEs, compilers (see ##workingset for these things) or random libraries (including OS-specific ones such as POSIX or Windows; see ##posix or #winapi).
created_on: 1273154639
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444820315.40329
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490032477.46985
noembed: 0
owner: n00p
rate_limit: 300
ref_count: 564
ref_user: dho!~dho@veep.9vx.org
type: text

<nothere>
action: /call notC
created_on: 1385191499.60178
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1385191714.33803
enabled: 1
last_referenced_in: immibis
last_referenced_on: 1451209391.94781
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 5
ref_user: immibis!~ChatZill1@122-61-226-17.jetstream.xtra.co.nz
type: text

<nullp>
action: /say Null pointers are pointer values that are guaranteed to compare equal to 0 and to other null pointers, and not to point at any object or function.
created_on: 1440506312.30308
edited_by: edk!~edk@spy/edk0
edited_on: 1440506459.33656
enabled: 1
last_referenced_in: edk
last_referenced_on: 1450298332.27279
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 1
ref_user: edk!~edk@spy/edk0
type: text

<nullptr>
action: /call nullp
created_on: 1440506699.46222
enabled: 1
last_referenced_in: edk
last_referenced_on: 1450298332.25856
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: edk!~edk@spy/edk0
type: text

<object>
action: /say An object is a region of data storage in the execution environment, the contents of which can represent values.
created_on: 1240461189
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1427883546.59505
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1474386939.04671
owner: Wulf_
rate_limit: 15
ref_count: 40
ref_user: XOCKET_[!~me@bzq-79-179-18-78.red.bezeqint.net
type: text

<objectcgi>
action: See http://www.messners.com/objectcgi/objectcgi.html for a library to handle web CGI with C.
created_on: 1106001595
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: n00p
type: text

<ocd>
action: /say Knock it off! There's an ongoing C discussion!
created_on: 1479507305.81
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1482590721.92772
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489510214.2902
locked: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 24
ref_user: whoisxy!~whoisxy@87.244.83.147
type: text

<octet>
action: defined as as a quantity of eight bits, typically used to represent one ASCII character, a signed integer from -128 to 127 or an unsigned integer from 0 to 255. On most platforms used today a byte has the same size as an octet.
created_on: 1407792855.57193
edited_by: FUZxxl!~fuz@d00m.org
edited_on: 1407792915.1962
enabled: 1
last_referenced_in: jd1
last_referenced_on: 1436374197.26489
owner: FUZxxl!~fuz@d00m.org
rate_limit: 15
ref_count: 3
ref_user: jd1!~jd1@192.55.55.39
type: text

<octett>
action: /call octet
created_on: 1407793067.97787
enabled: 1
last_referenced_in: jd1
last_referenced_on: 1436374197.25692
owner: FUZxxl!~fuz@d00m.org
rate_limit: 15
ref_count: 2
ref_user: jd1!~jd1@192.55.55.39
type: text

<offtopic>
action: /say For discussion not related to standard C, please go to ##c-offtopic. This includes discussion about non-standard libraries, operating systems, cats, video games, cars, chess, etc.
created_on: 1485977935.07835
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1487861785.54684
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095080.74415
owner: atk!~Arch-TK@fsf/member/Arch-TK
rate_limit: 15
ref_count: 75
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<onlinek&r2>
action: /say If you cannot/will not buy k&r2 go here at least, then quit pissing and moaning. http://publications.gbdirect.co.uk/c_book/
created_on: 1175854606
edited_by: fstd!~fstd@unaffiliated/fisted
edited_on: 1431991391.99968
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1431991305.52147
owner: LordOllie
rate_limit: 15
ref_count: 32
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<ooc>
action: /say Object-Oriented Programming With C: http://www.cs.rit.edu/~ats/books/ooc.pdf
created_on: 1414861052.16645
enabled: 1
last_referenced_in: ski
last_referenced_on: 1488213931.78874
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: ski!~ski@remote11.chalmers.se
type: text

<opprecedence>
action: http://en.wikipedia.org/wiki/Operators_in_C_and_C%2B%2B#Operator_precedence
created_on: 1301037079.18466
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1384449385.68241
owner: van7hu
rate_limit: 15
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<ops>
action: /say CaZe, Chris, dho, edk, kate, noselasd, pragma-, Saparok, twkm, Wulf, Xgc and Zhivago are channel operators here.
created_on: 1371444847.43427
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1486598229.87052
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489814209.7764
owner: pragma-
rate_limit: 300
ref_count: 62
ref_user: Maxdamantus!~Maxdamant@unaffiliated/maxdamantus
type: text

<order>
action: /say The Order Metalanguage for C Preprocessor Metaprogramming: https://github.com/rofl0r/order-pp
created_on: 1478596442.54771
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ordermatters>
action: /call compilerline
created_on: 1266709336
enabled: 1
last_referenced_on: 1329510645.25135
owner: PoppaVic
rate_limit: 15
ref_count: 17
ref_user: PoppaVic
type: text

<ot>
action: /call offtopic
created_on: 1485999090.74733
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095080.74147
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 69
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<p2s>
action: /say A pointer to a string is a pointer to its initial (lowest addressed) character. The length of a string is the number of bytes preceding the null character and the value of a string is the sequence of the values of the contained characters, in order.
created_on: 1289157193.4768
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1289157238.22498
owner: n00p
rate_limit: 15
ref_count: 1
ref_user: guidj0s
type: text

<p99>
action: /say Preprocessor macros and functions for C99 and C11: http://p99.gforge.inria.fr/
created_on: 1360601148.63414
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271604.15646
owner: kulp
rate_limit: 15
ref_count: 2
ref_user: wlhlm
type: text

<parens>
action: /call paren
created_on: 1390001510.89311
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483979790.37451
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 132
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<parsing>
action: http://www.ddj.com/cpp/196603535
created_on: 1208718021
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489805593.00743
owner: PoppaVic
rate_limit: 15
ref_count: 6
ref_user: Elronnd!elronnd@slashem.me
type: text

<pastetestcase>
action: /say http://i.imgur.com/1qZwa2V.jpg
created_on: 1312632115.87252
enabled: 1
last_referenced_in: profess_
last_referenced_on: 1425093628.59911
owner: ouah
rate_limit: 15
ref_count: 76
ref_user: profess_!~profess__@unaffiliated/csddesk
type: text

<peril>
action: http://www.pldaniels.com/c-of-peril/
created_on: 1104460665
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1339617422.07622
owner: twkm
rate_limit: 15
ref_count: 8
ref_user: Twey
type: text

<perseverance>
action: /say In the realm of ideas everything depends on enthusiasm... in the real world all rests on perseverance.
created_on: 1375297922.18967
enabled: 1
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<pgib:>
action: that a relatively new addition to
created_on: 1378500398.88576
enabled: 1
owner: JoeQuery!~joequery@72-48-145-172.static.grandenetworks.net
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<pikestyle>
action: /say Notes on Programming in C: http://doc.cat-v.org/bell_labs/pikestyle
created_on: 1448497618.25408
enabled: 1
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<pitfalls>
action: /say Common C mistakes: http://www.drpaulcarter.com/cs/common-c-errors.html
created_on: 1203450520
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484163726.21566
owner: PoppaVic
rate_limit: 15
ref_count: 12
ref_user: qwename!~qwename@d154-20-114-183.bchsia.telus.net
type: text

<pointer>
action: /call binky
created_on: 1391698826.9491
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485016816.57181
noembed: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 26
ref_user: kl3!~kl3@gateway/tor-sasl/kl3
type: text

<pointerfun>
action: /call binky
created_on: 1206989366
enabled: 1
last_referenced_on: 1339709645.54061
owner: Baughn
rate_limit: 15
ref_count: 14
ref_user: sickle
type: text

<pointerops>
action: /say The * operator makes an object from a pointer value.  The & operator makes a pointer value from an object.
created_on: 1195411991
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: kate`
type: text

<pointers>
action: http://c-faq.com/ptrs/index.html
created_on: 1280111959.6076
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475348120.94558
owner: CyL_Zz
rate_limit: 15
ref_count: 36
ref_user: masochist!~masochist@unaffiliated/masochist
type: text

<pointertutorial>
action: http://pw1.netcom.com/~tjensen/ptr/pointers.htm
created_on: 1396310485.32821
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<polyglot>
action: http://stchaz.free.fr/which_interpreter and http://ideology.com.au/polyglot/
created_on: 1392049996.68139
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1392050344.76498
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1393288225.87213
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: cousteau!~cousteau@80.174.59.84.dyn.user.ono.com
type: text

<port70>
action: /say HTML conversions of C standards: http://port70.net/~nsz/c/
created_on: 1393744235.24115
enabled: 1
last_referenced_in: o11c
last_referenced_on: 1442364547.49426
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 6
ref_user: o11c!~ben@unaffiliated/o11c
type: text

<portability>
action: very important: http://clc-wiki.net/wiki/C_community:comp.lang.c:Portability_attitude
created_on: 1263936716
enabled: 1
last_referenced_in: ##c-unregistered
last_referenced_on: 1423372244.21611
owner: n00p
rate_limit: 15
ref_count: 14
ref_user: SeabassedOne!~Seabassch@unaffiliated/seabasschan
type: text

<posix>
action: /say POSIX is the Portable Operating System Interface, <http://pubs.opengroup.org/onlinepubs/9699919799/>. ##posix exists; please consider taking your related questions there.
created_on: 1439368279.7944
enabled: 1
last_referenced_in: devut
last_referenced_on: 1484931336.44223
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 4
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<practice>
action: /say Practice makes perfect.
created_on: 1375289635.75129
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1396841884.31388
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 4
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<precedence>
action: the order the compiler uses to evaluate C expressions.  See http://softkorner.wordpress.com/2011/09/21/precedence-of-c-operators/ for a table of operator precedence and associativity
created_on: 1339718460.33579
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491132461.635
owner: sickle
rate_limit: 15
ref_count: 23
ref_user: prev!~prev@unaffiliated/prev
type: text

<prejudice>
action: /say There's little need to make generalizations about people who program with C. Some have interesting prejudices, others don't. In any case it will depend on the individual, and not the fact that they have a preference for a particular language.
created_on: 1396278249.27733
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1396278355.98553
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1466004706.4546
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 6
ref_user: ManDay!~ManDay@unaffiliated/manday
type: text

<previous>
action: /say No refunds.
created_on: 1385865956.22637
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486024158.5488
owner: addatoo!~daem0n@c-98-204-134-144.hsd1.md.comcast.net
rate_limit: 15
ref_count: 3
ref_user: lucasem!~lucasem@xvm-74.mit.edu
type: text

<printf%pchar*>
action: http://www.iso-9899.info/n1570.html#6.5.2.2p6
created_on: 1457209518.65243
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1468510695.28577
owner: cousteau!u291187@131.228.134.37.dynamic.jazztel.es
rate_limit: 15
ref_count: 4
ref_user: cousteau!869356f3@gateway/web/freenode/ip.134.147.86.243
type: text

<procedure>
action: /say A procedure is a sequence of operations over time.
created_on: 1309885699.16953
enabled: 1
last_referenced_in: angstrom
last_referenced_on: 1313029932.8719
owner: angstrom
rate_limit: 15
ref_count: 2
ref_user: angstrom
type: text

<promotions>
action: /call conversions
created_on: 1353362093.29351
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443195369.21408
owner: pragma-
rate_limit: 15
ref_count: 8
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<protip>
action: http://wiki.erepublik.com/images/6/6a/Protip.jpg
created_on: 1410056115.61465
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1434864868.33758
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 2
ref_user: snuffeluffegus!~snuffeluf@cpe-45-37-81-6.nc.res.rr.com
type: text

<prototype>
action: a function declaration that also includes types for the parameters.
created_on: 1105035288
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471987876.3418
owner: twkm
rate_limit: 15
ref_count: 15
ref_user: XOCKET!~me@bzq-109-67-58-215.red.bezeqint.net
type: text

<pstd>
action: http://paste.pr0.tips/
created_on: 1437132690.05637
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486301489.9213
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 6
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<purpose>
action: /say The purpose of the standard is to provide an unambiguous and machine-independent definition of the language.
created_on: 1405963341.50502
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1405963491.30689
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1407297283.90764
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 2
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<qsort>
action: / qsort() sorts an array of data, #include <stdlib.h>, void qsort(void *base, size_t nelems, size_t elsize, int (*compar)(const void *, const void *)); returns nothing, see http://www.iso-9899.info/man?qsort
created_on: 1104399031
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1442292578.42988
owner: twkm
rate_limit: 15
ref_count: 7
ref_user: fluter!~fluter@fedora/fluter
type: text

<quine>
action: #include <stdio.h> char *s = "#include <stdio.h> char *s = %c%s%c, c = '%c'; int main(void) { printf(s,c,s,c,c); return 0; }", c='"'; int main(void) { printf(s,c,s,c,c); return 0; }
created_on: 1275530214
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1382099564.63748
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1455335051.03311
owner: dave0
rate_limit: 15
ref_count: 19
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<quit>
action: /quit gone
created_on: 1469030367.82408
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1488710420.40708
owner: pksadiq!~user@106.208.126.239
rate_limit: 15
ref_count: 4
ref_user: Arckazur!~arckazur@152.61.68.91.rev.sfr.net
type: text

<quitme>
action: /quit
created_on: 1469030305.95459
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469030313.52168
owner: pksadiq!~user@106.208.126.239
rate_limit: 15
ref_count: 1
ref_user: pksadiq!~user@106.208.126.239
type: text

<quut>
action: /say Some C history, literature and culture: http://www.quut.com/c/
created_on: 1402101376.02572
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ramblings-atoi>
action: /say http://ramblings.implicit.net/posts/2014/4/27/c-functions-that-should-be-avoided
created_on: 1436508501.29998
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440168338.38662
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 2
ref_user: marchelzo!~marchelzo@216.83.6.45
type: text

<ramblings-cstring>
action: /say http://ramblings.implicit.net/posts/2014/4/27/c-has-no-string-type
created_on: 1436508567.91877
enabled: 1
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ramblings-gets>
action: /say http://ramblings.implicit.net/posts/2014/4/27/c-functions-that-should-be-avoided
created_on: 1436508508.46934
enabled: 1
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ramblings-ptrvsarray>
action: /say http://ramblings.implicit.net/posts/2014/4/19/the-confusion-between-pointers-and-arrays
created_on: 1436508740.81919
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445522922.31916
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 3
ref_user: edk!~edk@spy/edk0
type: text

<ramblings-ptrvsint>
action: /say http://ramblings.implicit.net/posts/2014/4/20/pointers-are-not-integers
created_on: 1436508624.75562
enabled: 1
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ramblings-scanf>
action: /say http://ramblings.implicit.net/posts/2014/5/4/c-functions-that-should-be-avoided-part-3-scanf
created_on: 1436508404.08269
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1439689304.50927
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 4
ref_user: marchelzo!~marchelzo@hlfxns016cw-156057132245.dhcp-dynamic.FibreOp.ns.bellaliant.net
type: text

<ramblings-stack>
action: /say http://ramblings.implicit.net/posts/2014/4/21/there-is-no-stack
created_on: 1436508652.31191
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1480330920.48778
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 1
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<ramblings-strncpy>
action: /say http://ramblings.implicit.net/posts/2014/5/2/c-functions-that-should-be-avoided-part-2
created_on: 1436508468.2776
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475336141.23982
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 3
ref_user: kate!~kate@unaffiliated/kate
type: text

<ramblings-tias>
action: /say http://ramblings.implicit.net/posts/2014/4/20/c-is-not-a-try-it-and-see-language
created_on: 1436508679.92369
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1436673864.85311
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 1
ref_user: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
type: text

<ramblings-websites>
action: /say http://ramblings.implicit.net/posts/2014/5/3/do-not-trust-random-websites-about-c
created_on: 1436508435.54129
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445274520.4998
owner: marchelzo_!~marchelzo@unaffiliated/marchelzo/x-2669545
rate_limit: 15
ref_count: 2
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<rand>
action: pseudo-random number generator, #include <stdlib.h>, int rand(void); returns the next number in the sequence in the range [0,RAND_MAX], see http://www.iso-9899.info/man?rand and http://www.azillionmonkeys.com/qed/random.html
created_on: 1104397431
enabled: 1
last_referenced_in: qwename
last_referenced_on: 1482973796.76546
owner: twkm
rate_limit: 15
ref_count: 31
ref_user: qwename!~qwename@45.72.210.183
type: text

<random>
action: /call cc -lang=sh rand_length=$(echo '$arg[0]' | tr -cd '[0-9]'); if [ -z "$rand_length" ]; then rand_length=4; fi; echo "ibase=16; $(hexdump -e '"%02X"' -n $rand_length /dev/urandom)" | bc -s | tr -d '[[:space:]]\\'
created_on: 1482989677.1834
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483046973.01275
owner: qwename!~qwename@45.72.210.183
rate_limit: 15
ref_count: 2
ref_user: qwename!~qwename@45.72.210.183
type: text

<randomkr>
action: /call $krexercises
created_on: 1436235414.71845
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443631520.26584
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 15
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<randomtesting>
action: /say Due to the nature of undefined/implementation-specific/unspecified behavior, testing random code is not a adequate way of determining if something really does work.
created_on: 1375289308.92542
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1452699240.07132
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<reading-declarations>
action: http://www.antlr.org/wiki/display/CS652/How+To+Read+C+Declarations
created_on: 1344035170.18893
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271801.84975
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<realloc>
action: http://www.iso-9899.info/wiki/Why_not_realloc
created_on: 1254955396
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1481804472.17213
owner: Chris
rate_limit: 15
ref_count: 50
ref_user: yanhuihang!3af8d10b@gateway/web/cgi-irc/kiwiirc.com/ip.58.248.209.11
type: text

<recursion-vs-iteration>
action: http://benpfaff.org/writings/clc/recursion-vs-iteration.html
created_on: 1370721112.82087
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271247.4217
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<reesoo>
action: /say J. Rees on how object-oriented programming is defined: http://paulgraham.com/reesoo.html
created_on: 1401736073.90963
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<reference>
action: http://www.acm.uiuc.edu/webmonkeys/book/c_guide/
created_on: 1104460727
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1478948716.66692
owner: twkm
rate_limit: 15
ref_count: 37
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<referencedtype>
action: "a pointer type may be derived from a function type, an object type, or an incomplete type, called the referenced type.  A pointer type describes an object whose value provides a reference to an entity of the referenced type.  A pointer type derived from the referenced type T is sometimes called ``pointer to T''.  The construction of a pointer type from a referenced type is called ``pointer type derivation''."
created_on: 1107989463
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: lemonade`
type: text

<references>
action: /say C does not have pass-by-reference or "heavy" references like C++ or some other languages do.  C does have a definition of references that is probably not what you want or need to know about, see:  referencedtype
created_on: 1108087719
enabled: 1
last_referenced_in: latch
last_referenced_on: 1466179235.17487
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: latch!~latch@unaffiliated/latch
type: text

<regexp>
action: http://swtch.com/~rsc/regexp/regexp1.html
created_on: 1205423735
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: PoppaVic
type: text

<register>
action: a storage-class specifier for an object that suggests that access for the object be as fast as possible.  The extent to which the suggestion is effective is implementation defined.  Whether or not addressable storage is actually used, the address of any part of an object declared with storage-class specifier register cannot be computed.
created_on: 1107636580
enabled: 1
last_referenced_in: marchelzo
last_referenced_on: 1488393004.72494
owner: pragma_
rate_limit: 15
ref_count: 28
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<registers>
action: /say If you have a question about accessing registers in C, please don't ask us. Standard C has no way of manipulating hardware registers. We don't know what compiler or platform you're using. You should be reading the documentation instead.
created_on: 1288774027.48456
enabled: 1
last_referenced_in: stark
last_referenced_on: 1457718625.94106
owner: boris``
rate_limit: 15
ref_count: 2
ref_user: stark!stark@unaffiliated/stark
type: text

<religion>
action: http://www.iso-9899.info/wiki/Religion
created_on: 1202935690
enabled: 1
last_referenced_in: sickle
last_referenced_on: 1339709656.78944
owner: Baughn
rate_limit: 15
ref_count: 2
ref_user: sickle
type: text

<remove_char_from_string>
action: while((ptr=strchr(str, 'w')))memmove(ptr,ptr+1,strlen(ptr));
created_on: 1275787387
enabled: 1
owner: dave0
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<reset>
action: /say Days since our last accident: 0
created_on: 1387390927.47967
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489019198.91162
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 46
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<resources>
action: http://www.lysator.liu.se/c/ - http://www.iso-9899.info/wiki/Web_resources - http://www.iso-9899.info/wiki/Books - See also: reference
created_on: 1106813548
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1478948498.56637
owner: pragma_
rate_limit: 15
ref_count: 21
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<restrict>
action: a type qualifier, which may only be used with a pointer type, and which requires that objects referenced through such a pointer must be made through a single pointer value, i.e., no aliases / pointers into other parts of the object are allowed
created_on: 1105427254
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1421766808.26519
owner: twkm
rate_limit: 15
ref_count: 21
ref_user: cartnam!~cartnam@92.85.83.120
type: text

<roulette2>
action: /kick $randomnick
created_on: 1482968311.30091
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483489826.20154
owner: immibis!~chatzilla@122-61-224-36.jetstream.xtra.co.nz
rate_limit: 15
ref_count: 4
ref_user: qwename!~qwename@45.72.210.183
type: text

<roulettе>
action: /say $args: *click*
created_on: 1482977163.16009
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486074300.03598
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 12
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<roulеtte>
action: /say $args: *click*
created_on: 1482976955.88604
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1482976979.64687
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<rsize_t>
action: /say The type rsize_t is equivalent to the type size_t but with a runtime-constraint violation if the value is greater than RSIZE_MAX.
created_on: 1404693676.69579
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1439838980.11064
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: kate!~kate@unaffiliated/kate
type: text

<rtfb>
action: /say Read the @#&ing Book - Your primary guide for learning C should be a good book (see http://www.iso-9899.info/wiki/Books).  You must not expect to become a proficient C programmer just from reading crappy online `tuts', staring at other people's code, and/or boring us to death by asking dozens of exceedingly trivial questions.
created_on: 1192833517
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284139.81937
owner: PoppaVic
rate_limit: 15
ref_count: 16
ref_user: protege!~shynoob@182.59.209.11
type: text

<runtime>
action: /say The greatest trick that C ever pulled was convince the world that it does not have a runtime.
created_on: 1387235308.47541
enabled: 1
last_referenced_in: fstd
last_referenced_on: 1484606433.81025
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 8
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<s&w>
action: /say /When k&r fails, try http://www.smith-wesson.com/
created_on: 1251220163
enabled: 1
last_referenced_in: langerjan
last_referenced_on: 1382539851.41953
owner: ment
rate_limit: 15
ref_count: 3
ref_user: LangerJan!~jg@p4FDCB74E.dip0.t-ipconnect.de
type: text

<sallyanne>
action: /say The Sally-Anne test: https://outrunningthestorm.files.wordpress.com/2012/06/sallyanne.gif
created_on: 1421080015.22144
enabled: 1
last_referenced_in: kate
last_referenced_on: 1478726122.69591
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 3
ref_user: kate!~kate@212.74.13.142
type: text

<sauce>
action: /say I wrote a program in C that suggests recipes. One of them is a lasagne sauce. Should I make it sweet or spicy? It's written in C. Please.
created_on: 1383765760.31149
edited_by: edk!edk@unaffiliated/edk
edited_on: 1387837845.94411
enabled: 1
last_referenced_in: nitrix
last_referenced_on: 1393037925.83377
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 7
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<scanf>
action: a function that can be unsafe and unproductive - "It's nearly impossible to do decent error recovery with scanf; usually it's far easier to read entire lines (with fgets or the like), then interpret them, either using sscanf or some other techniques." - See http://www.eskimo.com/~scs/C-faq/q12.20.html
created_on: 1106970012
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1379289170.20916
enabled: 1
last_referenced_in: maxxe
last_referenced_on: 1481328580.67497
owner: Major-Willard
rate_limit: 15
ref_count: 479
ref_user: maxxe!~maxxe@unaffiliated/maxxe
type: text

<scanf_is_stupid>
action: /say It looks like the !scanf factoid was unsuccessful at convincing you not to use scanf(). scanf() isn't really that stupid, providing you know how to use it correctly. Chris Torek explains some problems with the way scanf() is commonly used and provides methods of solving those problems here: http://bytes.com/topic/c/answers/215517-warning-against-scanf#post840862
created_on: 1264982172
enabled: 1
last_referenced_in: pessimist
last_referenced_on: 1462423091.93764
owner: n00p
rate_limit: 15
ref_count: 15
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-mogvncyquiljmuwh
type: text

<scanf_is_stupid_is_stupid>
action: /say Your mother!
created_on: 1303686157.40231
enabled: 1
owner: n00p
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<schildt>
action: /say Please avoid Herbert Schildt's C books.  See http://www.seebs.net/c/c_tcn4e.html and http://www.lysator.liu.se/c/schildt.html -- Other stuff to avoid: http://www.iso-9899.info/wiki/Main_Page#Stuff_that_should_be_avoided
created_on: 1277949707.2979
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1480944033.75158
owner: pragma_
rate_limit: 15
ref_count: 22
ref_user: vclam!~unknown@c-24-11-122-3.hsd1.ut.comcast.net
type: text

<scope>
action: /call global
created_on: 1323918650.46918
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484937534.74345
owner: pragma_
rate_limit: 15
ref_count: 16
ref_user: masoudd!~masoudd@5.116.26.205
type: text

<seed>
action: http://www.stanford.edu/~blp/writings/clc/random-seed.html
created_on: 1201872769
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1464990594.27933
owner: kate`
rate_limit: 15
ref_count: 2
ref_user: latch!~latch@unaffiliated/latch
type: text

<seqpoint>
action: http://c-faq.com/expr/seqpoints.html
created_on: 1212874512
enabled: 1
owner: igli
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<sequencepoint>
action: /say Evaluation of an expression may produce side effects. At certain specified points in the execution sequence called sequence points, all side effects of previous evaluations shall be complete and no side effects of subsequent evaluations shall have taken place.
created_on: 1263575275
enabled: 1
last_referenced_in: pessimist
last_referenced_on: 1428241701.30385
owner: Wulf_
rate_limit: 15
ref_count: 12
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-ebebnahoffxtgfda
type: text

<serialize>
action: packing structures, usually portably for later extraction: see man 3 xdr as well as http://tpl.sourceforge.net/ and http://www.leonerd.org.uk/code/libpack/
created_on: 1266811304
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485908630.34908
owner: PoppaVic
rate_limit: 15
ref_count: 39
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<sex>
action: /say Sex is allowed in ##C only on weekdays starting with 'U'.
created_on: 1243974321
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1486831817.02294
owner: pragma_
rate_limit: 15
ref_count: 20
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<shh>
action: /say STFU $args
created_on: 1469393800.01431
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491101978.37041
owner: korans!~korans@46.254.251.97
rate_limit: 15
ref_count: 6
ref_user: qwename!~qwename@198.13.214.119
type: text

<short>
action: a signed integer data type, at least 16 bits wide, which must be able to represent (at least) all the numbers in the range -32767 to +32767. Its lowest value, SHRT_MIN, and highest value, SHRT_MAX, are defined in <limits.h>
created_on: 1104595429
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1467769423.23583
owner: infobahn
rate_limit: 15
ref_count: 15
ref_user: masoudd!~masoudd@5.112.123.117
type: text

<shuffle>
action: /say { srand(time(0));    int array[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, end = 10;  while(end > 0) { int random = rand() % end; end--; int temp = array[end]; array[end] = array[random]; array[random] = temp; }    for(int i = 0; i < 10; i++) printf("%d ", array[i]); }
created_on: 1409877800.54993
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491022947.61203
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
type: text

<sing>
action: /me sings: "Soft kitty, warm kitty, little ball of fur~ Happy kitty! Sleepy kitty! Purr, purr, purr~"
created_on: 1396987419.15705
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471992203.92905
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 4
ref_user: XOCK_STREAM!~me@bzq-109-65-137-68.red.bezeqint.net
type: text

<sir>
action: /say All I ask is that you be a sir. Fancy mustaches, top hats, and monocles are scientifically proven to impress the ladies.
created_on: 1372985064.65917
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1432114738.81484
owner: nitrix
rate_limit: 15
ref_count: 6
ref_user: blue403!~smurfa@unaffiliated/smurfa
type: text

<sitestats>
action: http://www.iso-9899.info/webstats/
created_on: 1104462371
enabled: 1
last_referenced_in: mbohun
last_referenced_on: 1349342940.44654
owner: twkm
rate_limit: 15
ref_count: 4
ref_user: mbohun
type: text

<size_t>
action: an unsigned integer type which is the result type of the sizeof operator.  A size_t variable can store the size of any object.  C90: printf("%lu\n", (unsigned long)sizeof a); C99: printf("%zu\n", sizeof a);
created_on: 1107760223
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491069324.73373
owner: prec
rate_limit: 15
ref_count: 64
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<sizeof>
action: /say The sizeof operator yields a size_t, that is the size (in bytes) of its operand, which may be an expression or the parenthesized name of a type. e.g. `sizeof expr` and `sizeof (int)`. That expression is not evaluated unless it is a variable-length array. sizeof does not have function call semantics; don't confuse people by writing it with function call syntax.
action_with_args: /call cc sizeof $args
created_on: 1108181591
edited_by: edk!~edk@spy/edk0
edited_on: 1436551091.54499
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489090553.98928
owner: prec
rate_limit: 15
ref_count: 92
ref_user: masoudd!~masoudd@5.115.206.131
type: text

<slang>
action: http://umumble.com/blogs/Programming/321/
created_on: 1325974121.36778
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1341418578.49412
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: cousteau
type: text

<smallchild>
action: /say http://i.imgur.com/uqKRkxc.png
created_on: 1375306665.88108
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1436132910.38509
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<smarties>
action: http://www.torek.net/torek/c/index.html
created_on: 1104460794
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469391057.07211
owner: twkm
rate_limit: 15
ref_count: 4
ref_user: korans!~korans@46.254.251.97
type: text

<smartq>
action: /say Learning how to effectively ask questions is beneficial for all. See http://www.catb.org/esr/faqs/smart-questions.html
created_on: 1376746747.12143
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1445018208.26358
owner: boru!~boru@unaffiliated/boru
rate_limit: 15
ref_count: 10
ref_user: edk!~edk@spy/edk0
type: text

<snippets>
action: http://www.iso-9899.info/wiki/Snippets
created_on: 1203783826
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 7
ref_user: PoppaVic
type: text

<so>
action: http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html
created_on: 1316837035.42207
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489598768.50779
owner: Wulf
rate_limit: 15
ref_count: 28
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<sometypes>
action: "char a[1]" "char a[2]" "int a" "void a" "void* a[6]"
created_on: 1236414189
enabled: 1
last_referenced_in: rsca
last_referenced_on: 1289964335.56925
owner: snhmib
rate_limit: 15
ref_count: 1
ref_user: rsca
type: text

<spam>
action: /call query
created_on: 1418639611.34487
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1453279464.67676
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: haneefmubarak!~haneefmub@50.53.243.98
type: text

<spiral>
action: The "Clockwise/Spiral Rule" is a technique for understanding C declarations.  See http://c-faq.com/decl/spiral.anderson.html
created_on: 1198028238
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486956089.87782
owner: Draconx|Laptop
rate_limit: 15
ref_count: 13
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<sscanf>
action: /say The sscanf function is similar to scanf, except that its input comes from a string instead of a stream. fgets is commonly used prior to sscanf to provide a simple approach which doesn't leave unmatched bytes on the stream, unlike scanf. Note that sscanf's and sprintf's format specifiers are not perfectly reflective, and that it is possible for fgets to fetch part of a line.
created_on: 1271531720
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470248655.1127
owner: pragma_
rate_limit: 15
ref_count: 16
ref_user: TailsTheFox!~androirc@205.197.242.181
type: text

<stack>
action: /say C does not require implementations to use stacks or heaps. Please refer to the actually defined storage durations, which are four: allocated, automatic, thread and static.
created_on: 1311728555.05505
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490069699.93445
owner: guidj0s
rate_limit: 15
ref_count: 131
ref_user: mthowe!~morganh@unaffiliated/mthowe
type: text

<stacktrace>
action: http://www.tlug.org.za/wiki/index.php/Obtaining_a_stack_trace_in_C_upon_SIGSEGV
created_on: 1235765092
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1410148344.22392
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<standard>
action: C89/C90 draft: http://port70.net/~nsz/c/c89/c89-draft.html - C99 + TC1,2,3 working paper: http://open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf - C11 draft: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf - Quick C library reference: http://goo.gl/n3TYMD  - An explanation of all C standards: http://clc-wiki.net/wiki/The_C_Standard
created_on: 1249578326
edited_by: edk!~edk@spy/edk0
edited_on: 1435278588.66322
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1489593404.40545
owner: kate`
rate_limit: 15
ref_count: 615
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<standards>
action: /call standard
created_on: 1325646055.9179
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485431069.75834
owner: pragma_
rate_limit: 15
ref_count: 18
ref_user: HDMI_!b8003ef7@gateway/web/freenode/ip.184.0.62.247
type: text

<static>
action: used if the function/variable should be limited to one source file, at translation unit scope; variables of this storage class are initialised to zero; variables of this storage class which are declared in functions maintain their value between calls to the function
created_on: 1106976976
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489662123.96088
owner: Major-Willard
rate_limit: 15
ref_count: 58
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<std>
action: /say For a list of links to C standards, use the `standard` factoid; for citing the C99 standard, use `c99std`; for citing the C11 standard, use `c11std`
action_with_args: /say Standard C has no notion of '$args', so you must be talking about some specific OS, library, tool, implementation, architecture, et cetera. These are beyond the scope of this channel, which focuses on Standard C.
created_on: 1360056405.36738
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491011733.678
owner: pragma-
rate_limit: 15
ref_count: 387
ref_user: nchambers!~nchambers@136.62.134.51
type: text

<std::>
action: C++, not C. Try #c++
created_on: 1108585411
enabled: 1
last_referenced_in: vigud
last_referenced_on: 1359115483.70845
owner: NeverDream
rate_limit: 15
ref_count: 4
ref_user: Vigud
type: text

<stdarg>
action: interfaces for handling variable argument lists; #include <stdarg.h>; void va_start(va_list ap, arg); void va_copy(va_list dest, va_list src); type va_arg(va_list ap, type); void va_end(va_list ap); see http://www.iso-9899.info/man?stdarg
created_on: 1104404716
enabled: 1
last_referenced_in: profess
last_referenced_on: 1467603797.93424
owner: prec
rate_limit: 15
ref_count: 8
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<stdc>
action: /call cstd
created_on: 1297391573.67872
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491011733.67201
owner: pragma_
rate_limit: 15
ref_count: 144
ref_user: nchambers!~nchambers@136.62.134.51
type: text

<stdcvim>
action: /call c99vim
created_on: 1375946558.64588
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<stderr>
action: a FILE *, traditionally associated with file descriptor 2
created_on: 1104616252
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 1
ref_user: s00p
type: text

<stdin>
action: a FILE *, traditionally associated with file descriptor 0, using fflush() with it is generally pointless
created_on: 1104616182
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1402068584.16266
owner: Major-Willard
rate_limit: 15
ref_count: 18
ref_user: dorp!~dorp@46.120.11.7
type: text

<stdinflush>
action: /say Will fflush(stdin) flush unread characters from the standard input stream?  No!  See http://www.c-faq.com/stdio/stdinflush.html and http://www.c-faq.com/stdio/stdinflush2.html
created_on: 1193892288
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482863386.64616
owner: pragma_
rate_limit: 15
ref_count: 27
ref_user: atk!Arch-TK@fsf/member/Arch-TK
type: text

<stdout>
action: a FILE *, traditionally associated with file descriptor 1
created_on: 1104616210
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 2
ref_user: Major-Willard
type: text

<storage>
action: /call linkageandstorage
created_on: 1221600563
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1467478328.75285
owner: kate`
rate_limit: 15
ref_count: 28
ref_user: AirPlanes!~ShortBob@bzq-79-178-105-109.red.bezeqint.net
type: text

<str>
action: a reserved file-scope identifier prefix when followed by a lowercase letter
created_on: 1104399552
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1442477710.51726
owner: prec
rate_limit: 15
ref_count: 10
ref_user: sm0ke!~sm0ke@unaffiliated/sm0ke
type: text

<strcat>
action: /say IT CAN ALL GO WRONG!
created_on: 1288807638.54215
enabled: 1
last_referenced_in: maxxe
last_referenced_on: 1434254506.20864
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: maxxe!~maxxe@unaffiliated/maxxe
type: text

<strcpy>
action: /say IT CAN ALL GO WRONG!
created_on: 1288807630.54684
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484870300.35047
owner: pragma_
rate_limit: 15
ref_count: 17
ref_user: omnihil!~omnihil@gateway/tor-sasl/omnihil
type: text

<string>
action: /say A "string" is a contiguous sequence of characters terminated by and including the first null character; http://www.iso-9899.info/wiki/String
created_on: 1179262366
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490196129.36446
owner: kate`
rate_limit: 15
ref_count: 129
ref_user: dorp_!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<stringification>
action: /say C pre-processor stringification macros: http://gcc.gnu.org/onlinedocs/cpp/Stringification.html
created_on: 1296689295.26187
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488067878.24847
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: cr1t1cal!~cr1t1cal@unaffiliated/cr1t1cal
type: text

<stringify>
action: /call stringification
created_on: 1296689310.59683
enabled: 1
last_referenced_on: 1330476098.48449
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: pragma_
type: text

<stringptr>
action: /say A pointer to a string is a pointer to its initial (lowest addressed) character. See also: !string
created_on: 1289157592.73858
enabled: 1
last_referenced_in: maxxe
last_referenced_on: 1407177399.82818
owner: n00p
rate_limit: 15
ref_count: 2
ref_user: maxxe!~maxxe@unaffiliated/maxxe
type: text

<strncpy>
action: http://c-faq.com/lib/strncpy.html and http://blogs.msdn.com/oldnewthing/archive/2005/01/07/348437.aspx
created_on: 1204705609
enabled: 1
last_referenced_in: kate
last_referenced_on: 1491235071.56512
owner: pragma_
rate_limit: 15
ref_count: 25
ref_user: kate!~kate@unaffiliated/kate
type: text

<strtol>
action: /say The strtol() function converts a string to a long int value in a way that allows the caller to do meaningful error handling.
created_on: 1425956608.03143
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1425956695.30705
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 1
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<struct>
action: used to define an abstract data type containing other (possibly nested) data types
created_on: 1104886362
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489661814.36002
owner: Major-Willard
rate_limit: 15
ref_count: 67
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<structpacking>
action: /say The Lost Art of C Structure Packing: http://www.catb.org/esr/structure-packing/
created_on: 1428751511.88438
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485551297.14308
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<subroutine>
action: a generic definition for any segment of reusable code. see callback
created_on: 1427887694.80346
enabled: 1
last_referenced_in: uuhimhere
last_referenced_on: 1427887702.50059
owner: uuhimhere!~uuhimhere@1.9.98.51
rate_limit: 15
ref_count: 1
ref_user: uuhimhere!~uuhimhere@1.9.98.51
type: text

<subtitles>
action: /say Enabling subtitles.  Others should now be able to decipher your retarded language.
created_on: 1464128840.40121
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490992005.82297
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 10
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<support>
action: /say If you are looking for support for a particular piece of software, you are in the wrong place.  This channel exists for C programmers and those aspiring to be C programmers -- it is not a general software support channel.
created_on: 1108943444
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428749730.36184
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480895658.21757
owner: prec
rate_limit: 15
ref_count: 40
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<survey>
action: /call poll
created_on: 1375499549.00472
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1472084696.35154
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: Chris!sid107964@spy/chris
type: text

<sus>
action: /say The Single UNIX Specification - http://www.unix.org/single_unix_specification/
created_on: 1332565445.52295
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374272001.67192
owner: Wulf
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<svn>
action: evil
created_on: 1392240499.19229
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1392240524.03945
owner: zid`!zid@zid.0bit.org
rate_limit: 15
ref_count: 1
ref_user: zid`!zid@zid.0bit.org
type: text

<system-dependent>
action: /call doesntcare
created_on: 1199480739
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: jwillia3
type: text

<t&g>
action: The C Answer Book by Clovis L. Tondo and Scott E. Gimpel.
created_on: 1198330155
enabled: 1
last_referenced_in: daowee
last_referenced_on: 1379822723.98538
owner: gamag
rate_limit: 15
ref_count: 3
ref_user: daowee!~daowee@m83-185-149-136.cust.tele2.se
type: text

<tautology>
action: /say Tautologies are things that are tautologous.
created_on: 1366329411.77906
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271458.6608
owner: Maxdamantus
rate_limit: 15
ref_count: 3
ref_user: wlhlm
type: text

<teachingmath>
action: http://www.personal.psu.edu/drg16/evolution%20of%20teaching%20math.pdf
created_on: 1336210893.55896
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271982.32456
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<terminator>
action: http://img223.imageshack.us/img223/7959/stringliteralgg3.png
created_on: 1194839172
enabled: 1
owner: Cin
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<terrible>
action: /say Programing is terrible. https://www.youtube.com/watch?v=csyL9EC0S0c
created_on: 1392493517.76891
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1395791629.27031
owner: kate`!~kate@unaffiliated/kate/x-0000001
rate_limit: 15
ref_count: 2
ref_user: rob``!~rob@gtng-4db0456a.pool.mediaWays.net
type: text

<testcaseorgtfo>
action: /say http://i.imgur.com/1qZwa2V.jpg
created_on: 1372966419.42271
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1450570980.43438
owner: pragma-
rate_limit: 15
ref_count: 4
ref_user: Arch-TK!Arch-TK@fsf/member/Arch-TK
type: text

<testing>
action: /say C unit testing frameworks: http://check.sourceforge.net and https://github.com/Tuplanolla/cheat
created_on: 1413040096.51198
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483276637.10851
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<therule>
action: /say The Rule, as Chris Torek calls it, is outdated, wrong and mostly useless. If you want to read it anyway, it says: "In a value context, an object of type "array N of T" (for suitable size N and element type T) becomes a value of  type "pointer to T", pointing to the first element of that array, i.e., the one with subscript 0." http://web.torek.net/torek/c/pa.html
created_on: 1295884125.80932
edited_by: edk!~edk@spy/edk0
edited_on: 1441696508.08881
enabled: 1
last_referenced_in: lemonade`
last_referenced_on: 1487536822.52416
owner: ouah
rate_limit: 15
ref_count: 47
ref_user: lemonade`!~lemonade_@pool-96-255-35-216.washdc.fios.verizon.net
type: text

<threestar>
action: /call 3star
created_on: 1456323930.37776
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<tias>
action: /say "Try It And See" may work in other languages, but not in C due to the nature of undefined behavior/unportable code. Such coding-by-experimentation often leads to situations such as "But it worked fine earlier!" and/or "But it worked on my machine!". https://goo.gl/jPWRA9
created_on: 1228985071
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1481502828.75287
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491253950.2409
owner: Spark
rate_limit: 15
ref_count: 207
ref_user: muffindrake!~muffindra@unaffiliated/muffindrake
type: text

<timezone>
action: none of my concern
created_on: 1321158051.60361
enabled: 1
owner: Skapare
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<to>
action: a reserved function identifier prefix when followed by a lowercase letter
created_on: 1104400219
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1489175037.64124
owner: prec
rate_limit: 15
ref_count: 13
ref_user: Meeseeks!~darkseid4@myfirstthoughtwas.wtf
type: text

<top10>
action: /say Top 10 beginner mistakes: http://www.andromeda.com/people/ddyer/topten.html (Bonus: find the mistakes within the mistakes!)
created_on: 1193812563
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1454731631.2214
owner: pragma_
rate_limit: 15
ref_count: 33
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<translation>
action: /call tu
created_on: 1345338490.10754
enabled: 1
last_referenced_on: 1421503768.69658
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: cartnam!~cartnam@109.97.98.77
type: text

<translation-unit>
action: /call tu
created_on: 1345338493.90964
enabled: 1
last_referenced_on: 1346790067.90837
owner: pragma-
rate_limit: 15
ref_count: 2
ref_user: Tuplanolla
type: text

<trie>
action: http://www.cs.bu.edu/teaching/c/tree/trie/
created_on: 1205343145
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471221211.85069
owner: PoppaVic
rate_limit: 15
ref_count: 3
ref_user: eyepatch!6cd60cfa@gateway/web/freenode/ip.108.214.12.250
type: text

<trigraph>
action: a three character sequence beginning with two question marks, intended to make using C possible on systems where the usual punctuators are missing, typically from keyboards. these sequence is replaced during phase 1 of translation and takes place even within quoted strings.
created_on: 1104552373
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456898626.44593
owner: twkm
rate_limit: 15
ref_count: 5
ref_user: masoudd!~masoudd@5.116.128.50
type: text

<tu>
action: /say A source file together with all the headers and source files included is known as a preprocessing translation unit . After preprocessing, a preprocessing translation unit is called a translation unit. The separate translation units of a program communicate by (for example) calls to functions whose identifiers have external linkage, manipulation of objects whose identifiers have external linkage, or manipulation of data files.
created_on: 1345338450.31284
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475087440.70526
owner: pragma-
rate_limit: 15
ref_count: 15
ref_user: XOCKET!~XOCKET@unaffiliated/xocket
type: text

<tutorial>
action: http://www.iso-9899.info/wiki/Web_resources#Getting_Started
created_on: 1108597292
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1490351490.83397
owner: pragma_
rate_limit: 15
ref_count: 52
ref_user: dorp!~dorp@84.111.138.241
type: text

<tuts>
action: /say Almost every "tutorial" on the web is written by a person who does not know C well. Would you learn C from such a person? Obtain a good C book (see ,books) and read it.
created_on: 1216118004
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1376081559.94274
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1462360385.13512
owner: Jafet
rate_limit: 15
ref_count: 27
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<typedef>
action: /say Blindly typedefing all structs "just because" is one of the greatest abuses of typedefs in C -- don't do this. Only typedef structs when they are supposed to be opaque types that are manipulated strictly via accessor/mutator functions. Never use typedef to create a pointer type.
created_on: 1383136612.29563
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1383136647.79051
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490120997.40563
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 49
ref_user: masoudd!~masoudd@5.117.4.29
type: text

<typedefs>
action: http://yarchive.net/comp/linux/typedefs.html
created_on: 1458053557.42372
enabled: 1
owner: latch!~latch@unaffiliated/latch
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<types>
action: http://www.ibm.com/developerworks/power/library/pa-ctypes3/ -- http://www.ibm.com/developerworks/views/power/libraryview.jsp?search_by=everything+you+ever+wanted+to+know+about+C+types
created_on: 1289629005.77406
enabled: 1
last_referenced_in: retr0id
last_referenced_on: 1484742365.04626
owner: PoppaVic
rate_limit: 15
ref_count: 9
ref_user: Retr0id!~null@host86-177-223-109.range86-177.btcentralplus.com
type: text

<uaf>
action: /say Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.
created_on: 1395495124.1023
enabled: 1
last_referenced_in: sacho
last_referenced_on: 1403493075.51846
owner: pentester_!~pentester@unaffiliated/pentester
rate_limit: 15
ref_count: 3
ref_user: sacho!~hecatonic@176-12-62-113.pon.spectrumnet.bg
type: text

<underhanded>
action: /say The Underhanded C Contest: http://underhanded.xcott.com/
created_on: 1325912478.29067
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<unicode-compression>
action: http://unicode.org/reports/tr6/
created_on: 1343964247.31064
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271842.40347
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<union>
action: used to define an abstract data type whose members occupy the same memory
created_on: 1104886538
enabled: 1
last_referenced_in: korans
last_referenced_on: 1483319558.6597
owner: Major-Willard
rate_limit: 15
ref_count: 16
ref_user: korans!~korans@93.191.206.65
type: text

<unsigned>
action: a qualifier for integer data types, which renders them incapable of representing negative numbers but increases the number of positive values they can represent.
created_on: 1104595343
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480388513.66426
owner: infobahn
rate_limit: 15
ref_count: 25
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: text

<uselessuseofbot>
action: /say Dedicated to izabera
created_on: 1419364478.47253
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1419364485.89079
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 1
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<utf8-everywhere>
action: http://www.utf8everywhere.org/
created_on: 1343964562.6426
enabled: 1
last_referenced_in: wlhlm
last_referenced_on: 1374271827.44467
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: wlhlm
type: text

<vla>
action: a variable length array: an array data structure of automatic storage duration whose length is determined at run time (instead of at compile time). Example: void foo(int n) { float arr[n]; }
created_on: 1241436478
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1476299106.80741
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489442293.95299
owner: Wulf_
rate_limit: 15
ref_count: 32
ref_user: krok_!~krok@static-50-53-171-198.bvtn.or.frontiernet.net
type: text

<voidmain>
action: main returns an int, void main() is for dummies
created_on: 1104875507
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1358177148.34447
owner: twkm
rate_limit: 15
ref_count: 11
ref_user: cousteau
type: text

<volatile>
action: /say A volatile-qualified object may be modified in ways unknown to the implementation or have other unknown side effects when accessed. Actions on such objects shall not be `optimized out` by an implementation or reordered except as permitted by the rules for evaluating expressions.
created_on: 1392434451.93921
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1392435590.99348
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1433478454.83314
owner: nitrix!~nitrix@unaffiliated/nitrix
rate_limit: 15
ref_count: 3
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<votekick>
action: /say $nick: No.
created_on: 1440522891.09036
edited_by: edk!~edk@spy/edk0
edited_on: 1440523076.63991
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456000463.58831
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 13
ref_user: edk!edk@spy/edk0
type: text

<warnings>
action: http://www.iso-9899.info/wiki/WarningFlags
created_on: 1173671019
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1433956300.20958
owner: Baughn
rate_limit: 15
ref_count: 155
ref_user: Chris!~chris@spy/chris
type: text

<wcs>
action: a reserved function identifier prefix when followed by a lowercase letter
created_on: 1104399769
enabled: 1
owner: prec
rate_limit: 15
ref_count: 1
ref_user: Saparok
type: text

<wcsftime>
action: convert date and time to wide string, #include <wchar.h>, size_t wcsftime(wchar_t *ws, size_t maxlen, const wchar_t *format, const struct tm *timeptr); returns NULL if the conversion would succeed within maxlen wide characters otherwise the number of codes stored excluding the terminating null wide character, see http://www.iso-9899.info/man?wcsftime
created_on: 1104393957
enabled: 1
last_referenced_in: sacho
last_referenced_on: 1403492960.6781
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: sacho!~hecatonic@176-12-62-113.pon.spectrumnet.bg
type: text

<wcsrtombs>
action: convert wide character string to (narrow) character string (restartable), #include <wchar.h>, size_t wcsrtombs(char *s, const wchar_t **ws, size_t len, mbstate_t *ps); returns (size_t)-1 and stores EILSEQ in errno if a wide character is encountered that cannot be converted otherwise the number of bytes in the resulting sequence not including the terminating null character, see http://www.iso-9899.info/man?wcsrtombs
created_on: 1104395426
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1406271214.76293
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: fluter!~fluter@fedora/fluter
type: text

<wg14>
action: http://www.open-std.org/jtc1/sc22/wg14/
created_on: 1104460837
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<whoisyourmaster>
action: /kick cr1t1cal You are not my master.
created_on: 1485591153.34748
effective-level: 20
enabled: 1
last_referenced_in: cr1t1cal
last_referenced_on: 1489303350.30978
locked: 0
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 13
ref_user: cr1t1cal!~cr1t1cal@unaffiliated/cr1t1cal
type: text

<whynot>
action: /say The why not series: http://www.db.net/~db/why_not_series.html
created_on: 1297676655.55852
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1365471911.45507
owner: carcat
rate_limit: 15
ref_count: 5
ref_user: pragma-
type: text

<winsock>
action: http://msdn.microsoft.com/en-us/library/ms740673%28v=vs.85%29.aspx
created_on: 1296827238.89673
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1296827241.10531
owner: Wulf
rate_limit: 15
ref_count: 1
ref_user: Wulf
type: text

<workingset>
action: /call toolchain
created_on: 1442509527.0591
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490165590.20751
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 10
ref_user: dorp_!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<worksforme>
action: /say It works. I tested it, it works.  (2 days later...)  Shit, it doesn't work on my professor's machine, why?
created_on: 1474479415.16725
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<x>
action: /say The X is stupid problem: You want to do X, but don't know how. Therefore, X is stupid.
created_on: 1410157333.66139
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475110834.46815
noembed: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 17
ref_user: SwiftMatt!~Objective@162.242.94.241
type: text

<x->y>
action: syntactic sugar for (*x).y
created_on: 1108845393
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1381645285.65968
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1381645101.82079
owner: prec
rate_limit: 15
ref_count: 3
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<x[y]>
action: syntactic sugar for *(x + y)
created_on: 1106283927
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475297604.66354
owner: prec
rate_limit: 15
ref_count: 53
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<x[y][z]>
action: syntactic sugar for *(*(x + y) + z)
created_on: 1268438822
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485129972.95938
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<xkcd>
action: http://xkcdsucks.blogspot.de/ and http://xkcd-sucks.blogspot.de/
created_on: 1420308313.76694
enabled: 1
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<xz>
action: /say The XZ problem: You want to type XY but you forgot that you are typing on an unusual keyboard where the Z and Y keys are swapped for some reason.
created_on: 1485437059.73347
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485460333.84823
owner: atk!~Arch-TK@fsf/member/Arch-TK
rate_limit: 15
ref_count: 2
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<yru>
action: y, r, and u are very convenient shorthands for why, are, and you. their use in this channel is highly encouraged.
created_on: 1489612051.55235
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612057.12552
owner: mzo!~marchelzo@unaffiliated/marchelzo
rate_limit: 15
ref_count: 1
ref_user: mzo!~marchelzo@unaffiliated/marchelzo
type: text

<|>
action: the bitwise inclusive OR binary operator
created_on: 1104595595
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484408368.23468
owner: Major-Willard
rate_limit: 15
ref_count: 12
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<|=>
action: the bitwise inclusive-OR assignment operator.  The expression (x |= y) is equivalent to (x = x | y) except that the expression x is evaluated only once.
created_on: 1107898467
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1375124473.98624
owner: prec
rate_limit: 15
ref_count: 14
ref_user: pragma-
type: text

<||>
action: the McCarthy logical-or binary operator
created_on: 1106515400
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484408375.77078
owner: Major-Willard
rate_limit: 15
ref_count: 16
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<}>
action: used to terminate a block
created_on: 1106528206
enabled: 1
last_referenced_in: _michael_
last_referenced_on: 1483531912.5901
owner: Major-Willard
rate_limit: 15
ref_count: 12
ref_user: _michael_!~user@ppp118-210-167-106.bras2.adl6.internode.on.net
type: text

<~>
action: the bitwise NOT unary operator
created_on: 1104602592
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1406300510.79935
owner: Major-Willard
rate_limit: 15
ref_count: 15
ref_user: cousteau!~cousteau@138.100.74.81
type: text

[##c++]
<cppqref>
action: /say C++ quick reference: http://www.sourcepole.com/sources/programming/cpp/cppqref.html
created_on: 1350619395.84941
enabled: 1
last_referenced_in: edk
last_referenced_on: 1414890433.88987
owner: pragma-
rate_limit: 15
ref_count: 2
ref_user: edk!edk@unaffiliated/edk
type: text

[##c-offtopic]
<rules>
action: /say 1. No unsolicited bulk spam.
created_on: 1486060638.51769
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489850802.55422
owner: atk!~Arch-TK@fsf/member/Arch-TK
rate_limit: 15
ref_count: 3
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<test20170313>
action: /say naptime: $nick says hello.
created_on: 1489418519.43093
enabled: 1
last_referenced_in: naptime_
last_referenced_on: 1489418533.24565
owner: naptime!~naptime@47-32-211-227.dhcp.ftwo.tx.charter.com
rate_limit: 15
ref_count: 1
ref_user: naptime_!~naptime@47-32-211-227.dhcp.ftwo.tx.charter.com
type: text

<wasm>
action: /say http://i.imgur.com/07ziwdV.png
created_on: 1489962849.80542
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489962853.7255
owner: atk!~Arch-TK@fsf/member/Arch-TK
rate_limit: 15
ref_count: 1
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

[##club-ubuntu]
<sudo>
action: /say $nick, make your own damn sandwich!
created_on: 1277372207.45751
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1390638353.97399
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491085396.3574
owner: NoCode
rate_limit: 15
ref_count: 28
ref_user: Introoter!derpson@gateway/shell/xshellz/x-qycecjflxmdmuxmk
type: text

[##posix]
<E2BIG>
action: Argument list too long
created_on: 1239972824
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EACCES>
action: Permission denied
created_on: 1239972852
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EADDRINUSE>
action: Address already in use
created_on: 1239973057
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EADDRNOTAVAIL>
action: Cannot assign requested address
created_on: 1239973059
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EADV>
action: Advertise error
created_on: 1239972985
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EAFNOSUPPORT>
action: Address family not supported by protocol
created_on: 1239973054
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EAGAIN>
action: Resource temporarily unavailable
created_on: 1239972852
enabled: 1
last_referenced_in: wulf
last_referenced_on: 1290332775.70585
owner: Wulf4
rate_limit: 15
ref_count: 2
ref_user: Wulf
type: text

<EALREADY>
action: Operation already in progress
created_on: 1239973097
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBADE>
action: Invalid exchange
created_on: 1239972945
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBADF>
action: Bad file descriptor
created_on: 1239972829
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: Wulf_
type: text

<EBADFD>
action: File descriptor in bad state
created_on: 1239973005
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBADMSG>
action: Bad message
created_on: 1239972997
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBADR>
action: Invalid request descriptor
created_on: 1239972948
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBADRQC>
action: Invalid request code
created_on: 1239972955
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBADSLT>
action: Invalid slot
created_on: 1239972957
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBFONT>
action: Bad font file format
created_on: 1239972962
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EBUSY>
action: Device or resource busy
created_on: 1239972854
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ECANCELED>
action: Operation canceled
created_on: 1239973124
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ECHILD>
action: No child processes
created_on: 1239972831
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ECHRNG>
action: Channel number out of range
created_on: 1239972925
enabled: 1
last_referenced_in: lemonade`
last_referenced_on: 1318210400.2261
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: lemonade`
type: text

<ECOMM>
action: Communication error on send
created_on: 1239972992
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ECONNABORTED>
action: Software caused connection abort
created_on: 1239973070
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ECONNREFUSED>
action: Connection refused
created_on: 1239973089
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ECONNRESET>
action: Connection reset by peer
created_on: 1239973072
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EDEADLK>
action: Resource deadlock avoided
created_on: 1239972902
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EDEADLOCK>
action: Resource deadlock avoided
created_on: 1239972960
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EDESTADDRREQ>
action: Destination address required
created_on: 1239973034
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EDOM>
action: Numerical argument out of domain
created_on: 1239972897
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EDOTDOT>
action: RFS specific error
created_on: 1239972994
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EDQUOT>
action: Disk quota exceeded
created_on: 1239973117
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EEXIST>
action: File exists
created_on: 1239972856
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EFAULT>
action: Bad address
created_on: 1239972852
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: Wulf_
type: text

<EFBIG>
action: File too large
created_on: 1239972881
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EHOSTDOWN>
action: Host is down
created_on: 1239973092
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EHOSTUNREACH>
action: No route to host
created_on: 1239973094
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EIDRM>
action: Identifier removed
created_on: 1239972923
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EILSEQ>
action: Invalid or incomplete multibyte or wide character
created_on: 1239973022
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EINPROGRESS>
action: Operation now in progress
created_on: 1239973099
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EINTR>
action: Interrupted system call
created_on: 1239972819
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EINVAL>
action: Invalid argument
created_on: 1239972869
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: joeyadams
type: text

<EIO>
action: Input/output error
created_on: 1239972819
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EISCONN>
action: Transport endpoint is already connected
created_on: 1239973077
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EISDIR>
action: Is a directory
created_on: 1239972867
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EISNAM>
action: Is a named type file
created_on: 1239973112
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EKEYEXPIRED>
action: Key has expired
created_on: 1239973129
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EKEYREJECTED>
action: Key was rejected by service
created_on: 1239973134
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EKEYREVOKED>
action: Key has been revoked
created_on: 1239973132
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EL2HLT>
action: Level 2 halted
created_on: 1239972942
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: joeyadams
type: text

<EL2NSYNC>
action: Level 2 not synchronized
created_on: 1239972927
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EL3HLT>
action: Level 3 halted
created_on: 1239972930
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: joeyadams
type: text

<EL3RST>
action: Level 3 reset
created_on: 1239972932
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELIBACC>
action: Can not access a needed shared library
created_on: 1239973009
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELIBBAD>
action: Accessing a corrupted shared library
created_on: 1239973012
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELIBEXEC>
action: Cannot exec a shared library directly
created_on: 1239973019
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELIBMAX>
action: Attempting to link in too many shared libraries
created_on: 1239973017
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELIBSCN>
action: .lib section in a.out corrupted
created_on: 1239973014
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELNRNG>
action: Link number out of range
created_on: 1239972935
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ELOOP>
action: Too many levels of symbolic links
created_on: 1239972915
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EMEDIUMTYPE>
action: Wrong medium type
created_on: 1239973122
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EMFILE>
action: Too many open files
created_on: 1239972874
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EMLINK>
action: Too many links
created_on: 1239972897
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EMSGSIZE>
action: Message too long
created_on: 1239973037
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EMULTIHOP>
action: Multihop attempted
created_on: 1239972992
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENAMETOOLONG>
action: File name too long
created_on: 1239972905
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENAVAIL>
action: No XENIX semaphores available
created_on: 1239973110
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENETDOWN>
action: Network is down
created_on: 1239973062
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENETRESET>
action: Network dropped connection on reset
created_on: 1239973067
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENETUNREACH>
action: Network is unreachable
created_on: 1239973064
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENFILE>
action: Too many open files in system
created_on: 1239972871
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOANO>
action: No anode
created_on: 1239972952
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOBUFS>
action: No buffer space available
created_on: 1239973074
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOCSI>
action: No CSI structure available
created_on: 1239972940
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENODATA>
action: No data available
created_on: 1239972967
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENODEV>
action: No such device
created_on: 1239972861
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOENT>
action: No such file or directory
created_on: 1239972819
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOEXEC>
action: Exec format error
created_on: 1239972826
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOKEY>
action: Required key not available
created_on: 1239973127
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOLCK>
action: No locks available
created_on: 1239972907
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOLINK>
action: Link has been severed
created_on: 1239972983
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOMEDIUM>
action: No medium found
created_on: 1239973119
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOMEM>
action: Cannot allocate memory
created_on: 1239972852
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOMSG>
action: No message of desired type
created_on: 1239972920
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENONET>
action: Machine is not on the network
created_on: 1239972975
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOPKG>
action: Package not installed
created_on: 1239972977
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOPROTOOPT>
action: Protocol not available
created_on: 1239973042
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOSPC>
action: No space left on device
created_on: 1239972884
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOSR>
action: Out of streams resources
created_on: 1239972972
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOSTR>
action: Device not a stream
created_on: 1239972965
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOSYS>
action: Function not implemented
created_on: 1239972910
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTBLK>
action: Block device required
created_on: 1239972852
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTCONN>
action: Transport endpoint is not connected
created_on: 1239973079
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTDIR>
action: Not a directory
created_on: 1239972864
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTEMPTY>
action: Directory not empty
created_on: 1239972912
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTNAM>
action: Not a XENIX named type file
created_on: 1239973107
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTRECOVERABLE>
action: State not recoverable
created_on: 1239973139
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTSOCK>
action: Socket operation on non-socket
created_on: 1239973032
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTTY>
action: Inappropriate ioctl for device
created_on: 1239972876
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENOTUNIQ>
action: Name not unique on network
created_on: 1239973002
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ENXIO>
action: No such device or address
created_on: 1239972821
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EOPNOTSUPP>
action: Operation not supported
created_on: 1239973049
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1321679200.58179
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: Wulf
type: text

<EOVERFLOW>
action: Value too large for defined data type
created_on: 1239972999
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EOWNERDEAD>
action: Owner died
created_on: 1239973137
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EPERM>
action: Operation not permitted
created_on: 1239972819
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EPFNOSUPPORT>
action: Protocol family not supported
created_on: 1239973052
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EPIPE>
action: Broken pipe
created_on: 1239972897
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EPROTO>
action: Protocol error
created_on: 1239972992
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EPROTONOSUPPORT>
action: Protocol not supported
created_on: 1239973044
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EPROTOTYPE>
action: Protocol wrong type for socket
created_on: 1239973040
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ERANGE>
action: Numerical result out of range
created_on: 1239972900
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1441847741.62704
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: crossroads1112!~crossroad@2602:306:320a:6fc0::43
type: text

<EREMCHG>
action: Remote address changed
created_on: 1239973007
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EREMOTE>
action: Object is remote
created_on: 1239972980
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EREMOTEIO>
action: Remote I/O error
created_on: 1239973114
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ERESTART>
action: Interrupted system call should be restarted
created_on: 1239973024
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EROFS>
action: Read-only file system
created_on: 1239972897
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ESHUTDOWN>
action: Cannot send after transport endpoint shutdown
created_on: 1239973082
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ESOCKTNOSUPPORT>
action: Socket type not supported
created_on: 1239973047
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ESPIPE>
action: Illegal seek
created_on: 1239972886
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ESRCH>
action: No such process
created_on: 1239972819
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: Wulf_
type: text

<ESRMNT>
action: Srmount error
created_on: 1239972992
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ESTALE>
action: Stale NFS file handle
created_on: 1239973102
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ESTRPIPE>
action: Streams pipe error
created_on: 1239973027
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ETIME>
action: Timer expired
created_on: 1239972970
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ETIMEDOUT>
action: Connection timed out
created_on: 1239973087
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ETOOMANYREFS>
action: Too many references: cannot splice
created_on: 1239973084
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ETXTBSY>
action: Text file busy
created_on: 1239972879
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 1
ref_user: Wulf4
type: text

<EUCLEAN>
action: Structure needs cleaning
created_on: 1239973104
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EUNATCH>
action: Protocol driver not attached
created_on: 1239972937
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EUSERS>
action: Too many users
created_on: 1239973029
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EWOULDBLOCK>
action: Resource temporarily unavailable
created_on: 1239972917
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EXDEV>
action: Invalid cross-device link
created_on: 1239972859
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<EXFULL>
action: Exchange full
created_on: 1239972950
enabled: 1
owner: Wulf4
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<SIGBUS>
action: a signal sent when an address is referenced that is not correctly aligned
created_on: 1107559298
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 2
ref_user: Major-Willard
type: text

<SIGSEGV>
action: a signal sent when an address is referenced that has not been allocated to your virtual address space
created_on: 1104612469
enabled: 1
last_referenced_in: q0
last_referenced_on: 1397733346.07847
owner: Major-Willard
rate_limit: 15
ref_count: 1
ref_user: q0!~q@CPE-58-174-77-12.aecz2.woo.bigpond.net.au
type: text

<SIGUSR1>
action: a signal reserved for unspecified user process use
created_on: 1104612781
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<SIGUSR2>
action: a signal reserved for unspecified user process use
created_on: 1104613039
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<apue>
action: Advanced Programming in the UNIX Environment, by Stevens and Rago, see http://www.apuebook.com/
created_on: 1268625692
enabled: 1
last_referenced_in: milanortsw
last_referenced_on: 1479252499.25596
owner: PoppaVic
rate_limit: 15
ref_count: 60
ref_user: MilanorTSW!~sakhmatd@fsf/member/MilanorTSW
type: text

<apue2>
action: http://www.apuebook.com/
created_on: 1197696012
enabled: 1
owner: kp
rate_limit: 15
ref_count: 5
ref_user: Draconx
type: text

<beej>
action: /say Beej's Guide to Network Programming -- Using Internet Sockets is at http://beej.us/guide/bgnet/
created_on: 1186757356
enabled: 1
last_referenced_in: georgej
last_referenced_on: 1328611685.64744
owner: twkm
rate_limit: 15
ref_count: 80
ref_user: GeorgeJ
type: text

<gettimeofday>
action: a function that returns the time in seconds and milliseconds since the epoch (Thursday, January 1 1970) and the local timezone
created_on: 1104639290
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ipc>
action: /say IPC is Inter-Process Communication.  A nice tutorial for UNIX is at http://www.ecst.csuchico.edu/~beej/guide/ipc/
created_on: 1104609621
enabled: 1
last_referenced_in: popl
last_referenced_on: 1369517613.71134
owner: twkm
rate_limit: 15
ref_count: 8
ref_user: popl
type: text

<posix>
action: /say The Open Group Base Specifications Issue 7: http://pubs.opengroup.org/onlinepubs/9699919799/
created_on: 1179496311
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1397728560.84291
enabled: 1
last_referenced_in: edk
last_referenced_on: 1439367946.10208
owner: pragma_
rate_limit: 15
ref_count: 38
ref_user: edk!~edk@spy/edk0
type: text

<pth>
action: http://www.gnu.org/software/pth/
created_on: 1181487162
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1296694044.23265
owner: PoppaVic
rate_limit: 15
ref_count: 7
ref_user: pragma_
type: text

<raw_ping>
action: http://courses.cs.vt.edu/~cs4254/fall04/slides/raw_1.pdf
created_on: 1203042361
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<unbufferedgetc>
action: /say How to disable line-buffering with termios/cbreak: http://shtrom.ssji.net/skb/getc.html and http://c-faq.com/osdep/cbreak.html
created_on: 1106032892
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487236359.27589
owner: pragma_
rate_limit: 15
ref_count: 32
ref_user: liste!~liste@unaffiliated/liste
type: text

<unixfaq>
action: http://www.erlenstar.demon.co.uk/unix/faq_toc.html
created_on: 1104460642
enabled: 1
last_referenced_on: 1281777553.47855
owner: twkm
rate_limit: 15
ref_count: 3
ref_user: luneff
type: text

<unp>
action: /call unp1
created_on: 1269767264
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475245987.74341
owner: pragma_
rate_limit: 15
ref_count: 74
ref_user: fluter!~fluter@fedora/fluter
type: text

<unp1>
action: Unix Network Programming Vol I: http://www.unpbook.com/
created_on: 1195011079
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475245987.76035
owner: pragma_
rate_limit: 15
ref_count: 159
ref_user: fluter!~fluter@fedora/fluter
type: text

<unp2>
action: unix network programming, volume 2: interprocess communications, by stevens, see http://www.kohala.com/start/unpv22e/unpv22e.html
created_on: 1104636219
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1297526408.81251
owner: twkm
rate_limit: 15
ref_count: 25
ref_user: Dianora
type: text

[#bash]
<!>
action: /say event not found -- These errors only happen in *interactive* shells when you run commands with ! in them with history expansion enabled. Run set +o histexpand (set +H) to disable it,and put it in your ~/.bashrc to disable it in future shell sessions, too. Regardless, it won't affect scripts.
created_on: 1396365868
enabled: 1
noembed: 1
owner: pgas
rate_limit: 10
ref_count: 252
ref_user: nobody
type: text

<!">
action: /call !
created_on: 1280253840
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1443840539.48509
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<!#!env>
action: /say In addition to having exec permission, the top of a script MUST have a #! line, called 'shebang' or 'hashbang'. It tells the kernel what program to run your script with. Make sure you adjust it to match where the appropriate version of Bash is installed on your system;. If your system does not have bash installed at /bin/bash you will likely have to adjust any scripts you receive.
created_on: 1421865429
enabled: 1
owner: kurahaupo1
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<!set>
action: /say help set <ENTER> http://www.bash-hackers.org/wiki/doku.php?id=commands:builtin:set -- set +H is useful; -evx are very good for debugging.
created_on: 1190290306
enabled: 1
owner: karolisl
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<">
action: /call UMQ
created_on: 1265219092
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 246
ref_user: nobody
type: text

<"`>
action: /say cmd1 "`cmd2 \"$1\"`" -- An expression that has never been written in the history of mankind; because that would be correct; and those that don't know enough to not use backticks also by necessity don't know how to quote.
created_on: 1360239652
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<#>
action: /say Either a comment, or in parameter expansion a count of something. ${#x} is the number of characters in $x. ${#x[@]} is the number of elements in the array 'x', and $# is the number of positional parameters.
created_on: 1184617884
enabled: 1
noembed: 1
owner: kojiro
rate_limit: 10
ref_count: 28
ref_user: nobody
type: text

<#!>
action: /call hashbang
created_on: 1251729845
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 80
ref_user: nobody
type: text

<#!binbash>
action: /say Use "!#/usr/bin/env bash" - it is more portable and will probably do what the user wants in a modified envrioment
created_on: 1284484161
enabled: 1
owner: variable
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<$>
action: /say In bash, $ means "Expand". It is NOT part of your variable name! You can expand "$variable" content, "$(command)" output or "$((arithmetic))" results.
created_on: 1254899939
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 53
ref_user: nobody
type: text

<$!>
action: /say $! expands to the process ID of the most recently executed background (asynchronous) command.
created_on: 1207111794
enabled: 1
owner: yitz
rate_limit: 10
ref_count: 98
ref_user: nobody
type: text

<$">
action: /say Bash supports $"..." quoting syntax for locale-specific translation. If the current locale is C or POSIX, the dollar sign is ignored. If the string is translated and replaced, the replacement is double-quoted. See http://mywiki.wooledge.org/BashFAQ/098
created_on: 1291049946
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1443840588.78843
owner: geirha
rate_limit: 10
ref_count: 57
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<$"">
action: /call $"
created_on: 1246686694
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1443840588.77678
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<$#>
action: /say $# expands to the number of arguments, not counting $0.
created_on: 1307345061
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 75
ref_user: nobody
type: text

<$$>
action: /say $$ expands to the PID of the shell. In a ( ) subshell, it expands to the process ID of the original shell, not the subshell. (Bash 4.0 and above have BASHPID for that.)
created_on: 1350055625
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 46
ref_user: nobody
type: text

<$'>
action: /say bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
created_on: 1386859414
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 227
ref_user: nobody
type: text

<$''>
action: /call $'
created_on: 1404223310
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<$(>
action: /say Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
created_on: 1416561675
enabled: 1
last_referenced_in: alyptik
last_referenced_on: 1484130328.56799
owner: geirha
rate_limit: 10
ref_count: 291
ref_user: alyptik!alyptik@unaffiliated/alyptik
type: text

<$((>
action: /say $((...)) is an arithmetic substitution. After doing the arithmetic, the whole thing is replaced by the value of the expression. See <http://mywiki.wooledge.org/ArithmeticExpression>.
created_on: 1283616383
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 91
ref_user: nobody
type: text

<$(($>
action: /say # six=1+5 nine=8+1; echo $(($six * $nine)) vs $((six * nine))
created_on: 1423497033
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<$()>
action: /call $(
created_on: 1373554250
enabled: 1
last_referenced_in: alyptik
last_referenced_on: 1484130328.557
owner: e36freak
rate_limit: 10
ref_count: 132
ref_user: alyptik!alyptik@unaffiliated/alyptik
type: text

<$(<>
action: /say The command substitution $(cat file) can be replaced by the equivalent but faster $(< file).
created_on: 1228996478
enabled: 1
owner: iasc
rate_limit: 10
ref_count: 79
ref_user: nobody
type: text

<$(echo>
action: /say $(echo ...) and echo $(...) are both pointless. Drop the echo and $(), just write ...: rm "$(echo myfile)" -> rm myfile --- echo "$(df -h)" -> df -h; http://www.iki.fi/era/unix/award.html#echo
created_on: 1423731482
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 33
ref_user: nobody
type: text

<$*>
action: /call $@
created_on: 1305275487
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 204
ref_user: nobody
type: text

<$->
action: /say $- expands to the current option flags as specified upon invocation, by the set builtin command, or those set by the shell itself (such as the -i option).
created_on: 1296939190
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<$0>
action: /say $0 is like argv[0] in C. It's whatever the caller decides to put there. You can't rely on it. See http://mywiki.wooledge.org/BashFAQ/028 and http://www.bash-hackers.org/wiki/doku.php/scripting/posparams#the_first_argument
created_on: 1280242031
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 159
ref_user: nobody
type: text

<$1>
action: /say Positional parameters by example: echo "First parameter is $1, second is $2. You supplied $# of them. They will now all be copied to /tmp."; cp "$@" /tmp;
created_on: 1285668282
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 35
ref_user: nobody
type: text

<$?>
action: /say The special parameter ? (expanded by $?) holds the exit status of the last synchronous command.
created_on: 1390142801
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 213
ref_user: nobody
type: text

<$@>
action: /say The difference between $@ and $*: Without quotes (don't do this!), there is no difference. With double quotes, "$@" expands to each positional parameter as its own argument: "$1" "$2" ..., while "$*" expands to the single argument "$1c$2c...", where 'c' is the first character of IFS. You almost always want "$@" (QUOTED!). The same goes for arrays: "${array[@]}".
created_on: 1409667154
enabled: 1
owner: [arx]
rate_limit: 10
ref_count: 514
ref_user: nobody
type: text

<$[>
action: /say $[...] is an obsolete, deprecated syntax for math. Don't use it. Use $((...)) instead.
created_on: 1294676904
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 72
ref_user: nobody
type: text

<$_>
action: /say "$_" expands to the last argument to the previous command, after expansion (man bash, Special Parameters)
created_on: 1303506465
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 56
ref_user: nobody
type: text

<$dayjob>
action: /say DAYJOB is a built-in variable for #bash, and is therefore capitalized
created_on: 1390438745
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<$grep>
action: /say ''GREP="/usr/bin/grep -i"; $GREP $FILE'' -- Do NOT put command names or options in variables. Doing so is dangerous and buggy. Variables are containers for DATA. Either inline the command completely or use a *function* instead. http://mywiki.wooledge.org/BashFAQ/050
created_on: 1405542319
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<$n>
action: /say http://bash-hackers.org/wiki/doku.php/scripting/posparams
created_on: 1231071212
enabled: 1
owner: shaiguitar
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<$shell>
action: /say The SHELL environment variable is normally set to the login shell specified in the passwd database (/etc/passwd) when you log in. It does NOT reflect what shell you're currently in. For that, try: ps -p $$
created_on: 1396820717
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<$tmp>
action: /say Avoid short and meaningless variable names. Use your variable names to communicate what they hold: the more your naming says, the better your code reads. $file, not $f. $remoteHost, not $h. One convention is to use singular words for regular variables, plural for arrays and the first letter of the array for indexes in that array (eg. for f in "${!files[@]}" / for file in "${files[@]}").
created_on: 1376535238
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<$var>
action: /say $var is NOT a variable. var is a variable and $var is the EXPANSION of that variable. bash replaces it by the contents of the variable var.
created_on: 1209547390
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<${>
action: /say Without curly braces parameter expansions refer to the longest valid variable name or shortest positional parameter. "${var}bar" expands the parameter named "var" while "$varbar" expands "varbar". "$123" references argv[1] and "${123}" references argv[123]. Braces are requried for parameters > 9, special PEs, and array expansions: ${10}, ${var##pat}, ${arr[5]}. BRACES AREN'T A SUBSTITUTE FOR QUOTES!
created_on: 1423925089
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 220
ref_user: nobody
type: text

<${!>
action: /say See !faq 6 for indirect variables, or !faq 5 for listing array indices.
created_on: 1425074604
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<${#>
action: /say see !faq length for variables and !faq 5 for array varibles
created_on: 1261337435
enabled: 1
owner: irc2samus
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<${$>
action: /say The correct syntax for parameter expansion is ${varMODIFIER} not ${$varMODIFIER}. Remove that second $.
created_on: 1179319977
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<${${>
action: /say ${x}, ${x%y}, ${x:y:z}, ... are parameter expansions. x needs to be a parameter. you can't 'nest' them like ${${x#y}%z} because ${x#y} is an expansion (a string), not a parameter.
created_on: 1283757338
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<${}>
action: /call ${
created_on: 1287148365
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 36
ref_user: nobody
type: text

<&>
action: /say If you put the control operator & at the end of a command, e.g. ''command args &'', the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0. Pid of the last backgrounded command is available via the special variable $!
created_on: 1272476781
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 149
ref_user: nobody
type: text

<&&>
action: /call ||
created_on: 1372353346
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 115
ref_user: nobody
type: text

<&&:>
action: /say cmd && : prevents set -e from killing the shell, and keeps intact the exit code of cmd
created_on: 1441042578
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<&&if>
action: /say Beware: ''a && b || c'' is NOT THE SAME as ''if a; then b; else c; fi''. The former will run 'c' if EITHER 'a' or 'b' fails. The if will run 'c' ONLY if 'a' fails.
created_on: 1375297234
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<&&||>
action: /say foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
created_on: 1276419923
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 48
ref_user: nobody
type: text

<&;>
action: /say '&;' is always wrong. So is '& ;'. If you want to run things in the background in a compact one-liner, omit the ';' entirely and simply use '&' between commands. for f in ./*; do my_command "$f" & done - see http://mywiki.wooledge.org/BashPitfalls#pf21
created_on: 1397244466
enabled: 1
owner: fr33load3r
rate_limit: 10
ref_count: 94
ref_user: nobody
type: text

<&>>
action: /say &> is a bash-specific feature. «&>file» is equivalent to «>file 2>&1». There is no &>> until Bash4. Use «>>file 2>&1» instead. We recommend not using &> or &>> in scripts, because it will break some valid scripts (see !badredir), and is an unintuitive syntax for beginners.
created_on: 1432128216
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 75
ref_user: nobody
type: text

<&>>>
action: /say ''&>file'' is equivalent to ''>file 2>&1'' and is bash/ksh specific. In bash 4, there is also ''&>>file''. For portability, it is a good idea to just write it out fully.
created_on: 1426602961
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<'>
action: /say Single quotes (') cause everything between them to be taken literally by bash. If you want to embed a ' inside a '...', write it as the four characters, '\'': echo 'It'\''s a blast!'
created_on: 1277222888
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 243
ref_user: nobody
type: text

<''>
action: /say '' is preferred for quoting code in #bash, because it has no semantic meaning for the shell; someone can copy-and-paste ''foo'' or the contents within, and the meaning to the shell is the same either way.
created_on: 1357254500
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<(>
action: /call ()
created_on: 1357143428
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 92
ref_user: nobody
type: text

<((>
action: /say ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonym for "let", if side effects (assignments) are needed. See <http://mywiki.wooledge.org/ArithmeticExpression>.
created_on: 1293585738
enabled: 1
owner: prince_jammys
rate_limit: 10
ref_count: 358
ref_user: nobody
type: text

<()>
action: /say Commands ran inside parenthesis are executed in a subshell. Useful for cd'ing into a directory without needing to figure out how to back out. See http://mywiki.wooledge.org/SubShell
created_on: 1357143415
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 45
ref_user: nobody
type: text

<(.)(.)bang>
action: /say http://homepages.cwi.nl/~aeb/std/shebang/
created_on: 1168017697
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<**>
action: /call globstar
created_on: 1254155054
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<->
action: /say Tools generally consider an argument that begins with a - as an option. To pass a filename that begins with a -, prefix it with its path: rm ./-foo. Also: rm -- -foo (see !--). - alone can also mean stdin.
created_on: 1379918390
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 28
ref_user: nobody
type: text

<-->
action: /say The special option -- means "end of options" to every POSIX command except echo and test. E.g., mv -- *.png /somedir # see also http://wiki.bash-hackers.org/dict/terms/end_of_options
created_on: 1316030679
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 148
ref_user: nobody
type: text

<-9>
action: /say Do NOT use SIGKILL (kill -9) to terminate processes. All processes will terminate in response to the default SIGTERM. If they don't terminate instantly, that's because they're busy cleaning up. If you interrupt them, you break them. See http://stackoverflow.com/a/690631/347411
created_on: 1384960490
enabled: 1
noembed: 1
owner: lhunath
rate_limit: 10
ref_count: 76
ref_user: nobody
type: text

<-c>
action: /say bash -c 'bash commands to execute' "$0" "$1" "$2" ... Since "$0" is typically unused, it is often set it to something arbitrary like _
created_on: 1254411920
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<-e>
action: /call set-e
created_on: 1319454580
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 70
ref_user: nobody
type: text

<-exec_>
action: /say find ... -exec sh -c 'blah "$1"' _ {} \; # When invoked with -c, any POSIX shell (including bash) uses the first positional parameter as "$0". '_' is a dummy value, so the passed filename becomes "$1". it could be anything. of course "$0" could be used, but when using -exec {} +, "$@" does not include "$0"
created_on: 1331919289
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<-f>
action: /say Do you actually need that -f in that command? If there a reason you are using it? Or is it just there because of habit? Do you actually know what the -f does and do you even want it there?
created_on: 1430612710
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<-nt>
action: /say [ f1 -nt f2 ] True if file1 is newer (mtime) than file2 *or* if file1 exists and file2 does not.
created_on: 1182378035
enabled: 1
owner: redduck666
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<-r>
action: /say Always use read with the -r option, otherwise backslashes are special. http://wiki.bash-hackers.org/commands/builtin/read#read_without_-r
created_on: 1410998544
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<-u>
action: /call set-u
created_on: 1408798435
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<-x>
action: /call set-x
created_on: 1434697012
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 409
ref_user: nobody
type: text

<08>
action: /call august
created_on: 1312544942
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<10q>
action: /say Isn't anyone going to thank me for all my hard work?
created_on: 1299792689
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<1line>
action: /call in1line
created_on: 1407527470
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 22
ref_user: nobody
type: text

<256colormap>
action: /say E=echo\ ;P=printf\ ;M=$'\e[0m';a(){ $P"\e[38;5;2${z}5;48;5;${1}m %4d $M" $1;};Z=$E$M;for i in 16 93 160;do ((r=(n=\!n)*2-1));for((x=0;x<6;x++,i+=r)) do for((j=0;L=(i+(R=(j/6?17-j:j))*6),z=(R%6>1?3:5),j<12;j++))do a $L;done;$E;done;done;z=5;for i in {0..23};do a $[i+232];((i==11))&&$Z;done;for i in {0..15};do ((i==8||\!i))&&$P'\n%*s' 12;a $i;done;$E
created_on: 1420424787
enabled: 1
owner: i336_
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<2>&1>
action: /say Making sense of the copy descriptor operator: http://wiki.bash-hackers.org/scripting/copydescriptor
created_on: 1271714518
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 76
ref_user: nobody
type: text

<2d>
action: /say Bash doesn't support multi-dimensional arrays. Common substitutes are: 1. directories, eg. firstName=$(<~/.myscript/names/first/"$person"); 2. shared indexes, eg. name="${firstNames[person]} ${lastNames[person]}"; 3. merge in associative key, eg. declare -A names=( ["0-first"]=John ["0-last"]=Doe ["1-first"]=Jane ["1-last"]=Doe ); 4. primes, eg. names[i*29 + j*31]=value
created_on: 1392997002
enabled: 1
last_referenced_in: devut
last_referenced_on: 1485070058.23673
owner: lhunath
rate_limit: 10
ref_count: 7
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<2like>
action: /say !1 but without backslash interpretation or stripping of leading/trailing spaces: while read -r; do my-command "$REPLY"; done <inputfile -- or for POSIX shell: while IFS= read -r line; do my-command "$line"; done <inputfile
created_on: 1355931952
enabled: 1
owner: saveTheWorld
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<2steps>
action: /say Step 1: Figure out want you want to do. Step 2: Do it. The first step is the hard part.
created_on: 1188812922
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<42>
action: /say 6 times 9
created_on: 1426270480
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1488036673.68326
noembed: 1
owner: izabera
rate_limit: 10
ref_count: 3
ref_user: tires!~tires@cpe-172-101-20-238.maine.res.rr.com
type: text

<80>
action: /say The 80-character limit is mostly pointless nowadays, except for in specific circumstances. <http://sprunge.us/cJTP>
created_on: 1318952897
enabled: 1
noembed: 1
owner: neurolysis
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<8601>
action: /say https://xkcd.com/1179/
created_on: 1371021179
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<99.9%>
action: /say http://dilbert.com/fast/2008-05-08
created_on: 1398725722
enabled: 1
owner: [arx]
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<:>
action: /say : is a builtin identical to the true builtin; they do nothing and have an exit status of 0
created_on: 1270345566
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1476446920.09706
owner: yitz_
rate_limit: 10
ref_count: 107
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<:)>
action: /say This character sequence causes greycat to smile. Use with caution.
created_on: 1303248798
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<:->
action: /say ${parameter:-word} Use Default Values. If parameter is unset or null, the expansion of word is substituted.
created_on: 1409271629
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<:=>
action: /say ${parameter:=word} Assign Default Values. If parameter is unset or null, the expansion of word is assigned to parameter.
created_on: 1407542483
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<;>
action: /say The ";" character is used to separate between commands. It does the (almost) exact same thing that <ENTER> does in a shell or a newline in a script.
created_on: 1426717129
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<;&>
action: /call ;;
created_on: 1338252255
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<;;>
action: /say ;; signifies the end of a case list. ;& makes it fall through to the next list. ;;& makes it fall through to the next list if the pattern matches.
created_on: 1338252194
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<;;&>
action: /call ;;
created_on: 1338252260
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<<>
action: /call redir
created_on: 1236006930
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 55
ref_user: nobody
type: text

<<(>
action: /say Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
created_on: 1403286314
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 357
ref_user: nobody
type: text

<<()>
action: /say Process Substitution >(command ...) or <(...) is replaced by a temporary filename. Writing or reading that file causes bytes to get piped to the command inside. Often used in combination with file redirection: cmd1 2> >(cmd2). See http://mywiki.wooledge.org/ProcessSubstitution http://mywiki.wooledge.org/BashFAQ/024
created_on: 1376318052
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 81
ref_user: nobody
type: text

<<<>
action: /say Here documents. cat <<EOF followed by several lines of text, followed by the literal string EOF on a new line, NOT indented. The portion between the EOFs is passed to the command as standard input. If 'EOF' is 'quoted', substitutions WON'T be done; otherwise they are. See <<- for the indented variety.
created_on: 1204959411
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 254
ref_user: nobody
type: text

<<<(>
action: /call <<()
created_on: 1395865286
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<<<()>
action: /say command < <(othercommand) # Same thing as ''othercommand | command'' but without subshelling 'command'. Uses file redirection (<) to redirect a file created by process substitution (<()). The space between < and <(..) is important to avoid ambiguity (is it a heredoc, is it a redirected PS?).
created_on: 1395865667
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<<<->
action: /say Indented Here documents. Here documents started with <<- will ignore preceding tabs on each line, allowing you to indent your here documents nicely. Refer to << for general information on Here documents. Note that only TABs will work - spaces will not. Some editors can replace the TAB character with spaces, so be careful.
created_on: 1426300221
enabled: 1
owner: llua
rate_limit: 10
ref_count: 71
ref_user: nobody
type: text

<<<<>
action: /say Here strings. Similar to here documents: The word after <<< and a newline are passed to the standard input of a command. Syntax: ''command <<< "some sentence"'' (Like ''echo "some sentence" | command'', but without the overhead of the subshell)
created_on: 1228905237
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 277
ref_user: nobody
type: text

<<<<$(>
action: /say <<<"$(command)" is pointless. It creates multiple temp files, requires the entire command to run before passing it to stdin, and removes trailing newlines from the command's output. Without the quotes, it's even worse; wordsplitting occurs and all whitespace gets squeezed to single spaces. Process substition was created for doing this efficiently and correctly. See http://mywiki.wooledge.org/ProcessSubstitution
created_on: 1333171490
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<<>>
action: /say <>foo is the same as 0<>foo. To redirect both stdin and stdout to the same file, you need <>foo >&0
created_on: 1440948454
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<<|>bang>
action: /say http://en.wikipedia.org/wiki/Shebang_%28Unix%29
created_on: 1168017759
enabled: 1
owner: VImtermute
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<=>
action: /call assignment
created_on: 1326989443
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486898156.43944
noembed: 1
owner: greycat
rate_limit: 10
ref_count: 64
ref_user: badet0s!5cddd6cf@gateway/web/freenode/ip.92.221.214.207
type: text

<=$?>
action: /say If you're using $? and not immediately assigning it to a variable, you're DoingItWrong. Either you're testing it immediately (in which case you don't need $? at all, see ![$? ) or else you're doing something else and then using it, in which case the value of $? will be changed before you use it.
created_on: 1422998875
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<==>
action: /say The == operator is used to test numbers for equality in ((arithmetic expressions)). In BASH and ksh it is the same as = in [[ ]]. It should not be used in the POSIX / Bourne compatible test or [ ], as this will not work in other shells.
created_on: 1285106199
enabled: 1
noembed: 1
owner: ferret
rate_limit: 10
ref_count: 46
ref_user: nobody
type: text

<>>
action: /say Use > to write redirect STDOUT to a file: ls > myFileList. See !redir
created_on: 1222624666
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 96
ref_user: nobody
type: text

<>&>
action: /say >&word where word is a number or - is FD duplication or closing. A plain >& or >&word (word not numeric or -) is just like &> -- cmd >& file is equivalent to cmd >file 2>&1 but the former is bash- and csh-only.
created_on: 1319317790
enabled: 1
owner: greycat|home
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<>(>
action: /call <(
created_on: 1236007616
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 73
ref_user: nobody
type: text

<>()>
action: /call >(
created_on: 1285771573
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<>>>
action: /say Use >> to append to a file and prevent the original contents from being erased. See !redir
created_on: 1222624659
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 69
ref_user: nobody
type: text

<>sed>
action: /say Ask in #sed.
created_on: 1200547743
enabled: 1
owner: igli
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<>|>
action: /say Redirect stdout, like > but ignores noclobber (set -C). See http://wiki.bash-hackers.org/syntax/redirection
created_on: 1423467671
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<?>
action: /say A question mark indicates a sentence is a question. When you see a sentence directed at you terminated with this symbol, somebody has asked you a question and is waiting for you to answer it.
created_on: 1402671387
enabled: 1
last_referenced_in: deadsoul
last_referenced_on: 1446177502.40201
noembed: 1
owner: lhunath
rate_limit: 10
ref_count: 19
ref_user: DeaDSouL!~deadsoul@94.29.129.54
type: text

<@>
action: /say The positional parameters can be used like a named array, sort of. "$@" is just like "${array[@]}". PE works too: "${@:2}", or "${@:(-1)}", or "${@/#-/}", etc. However, you can't set or unset single positional params.
created_on: 1303392666
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489636768.18395
owner: greycat
rate_limit: 10
ref_count: 64
ref_user: Hello71!~Hello71@wikipedia/Hello71
type: text

<[>
action: /say [ or test is the POSIX test command. It can do simple tests on files and strings. In bash, you should use the more powerful [[ instead and ban [ for sake of consistency. [[ can do pattern matching, is faster and safer to use. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals http://mywiki.wooledge.org/BashFAQ/031
created_on: 1393469285
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 358
ref_user: nobody
type: text

<[$?>
action: /say Don't do this: ``mycommand; if [ $? -eq 0 ]'' -- You're running the [ command and checking its exit code to test whether "mycommand"'s exit code is 0. That's a pointless operation, test mycommand directly: ``if mycommand''
created_on: 1403808404
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 145
ref_user: nobody
type: text

<[-a>
action: /say The classic test command's -a and -o operators, as well as controlling precedence using ( and ) cause many problems and ambiguities, are not portable, and are unsafe with user input. They are all marked as obsolescent by POSIX. If coding for Bash, Ksh, or Zsh, [[ is *highly* preferred over [. See: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html#tag_20_128_16
created_on: 1331097167
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<[-o>
action: /call [-a
created_on: 1347065450
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<[:>
action: /say Character classes like [a-z] or [A-Z0-9] may behave strangely in non-POSIX locales. If you want your script to work locale-wise, use [[:lower:]] or [[:upper:][:digit:]] instead. Remember to always quote your character classes, as they may be expanded by the shell as file globs. See also !locale
created_on: 1289302978
enabled: 1
owner: cthuluh
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<[<>
action: /say to get STRING comparison you must escape the < in [ a \< b ] otherwise "< b" is intrepreted as a redirection from the file "b". There is no problem with [[ a < b ]]. The same applies to [ a \> b ]
created_on: 1182865801
enabled: 1
owner: redduck666
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<[[>
action: /say [[ is a bash keyword similar to (but more powerful than) the [ command. See <http://mywiki.wooledge.org/BashFAQ/031> and <http://mywiki.wooledge.org/BashGuide/TestsAndConditionals>. Unless you're writing for POSIX sh, we recommend [[.
created_on: 1273072403
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 752
ref_user: nobody
type: text

<[[$?>
action: /call [$?
created_on: 1332920944
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<[vs[[>
action: /say '[', also known as 'test' is the POSIX variant of [[. [ does NOT support ==, =~, &&, ||, glob pattern matching; unquoted > and < will do file redirection instead of comparison, etc. See http://mywiki.wooledge.org/BashFAQ/031
created_on: 1244096499
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<\0>
action: /say ASCII zero, the null byte, aka 'NUL' is the best delimiter for lists of strings (eg. file names). However, there isn't much you can do with it in portable scripts. Bash can read null-byte delimited input with "while IFS= read -d ''; do ... ". Bash cannot store or pass a null byte as parameter. *Unportable* versions of the following utilities can work with NULs: find, sort, xargs, and sed.
created_on: 1216931860
enabled: 1
owner: prince_jammys
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<\<>
action: /say The symbols \< and \> respectively match the empty string at the beginning and end of a word.
created_on: 1387543772
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<\<\>>
action: /say The symbols \< and \> respectively match the empty string at the beginning and end of a word.
created_on: 1387543789
enabled: 1
last_referenced_in: guest65787
last_referenced_on: 1475255811.96711
owner: juanmabc
rate_limit: 10
ref_count: 2
ref_user: Guest65787!~jasondock@unaffiliated/jasondockers
type: text

<\>>
action: /say The symbols \< and \> respectively match the empty string at the beginning and end of a word.
created_on: 1387543778
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<\r>
action: /call cr
created_on: 1318766724
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 23
ref_user: nobody
type: text

<\w>
action: /call prompt
created_on: 1300816057
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<]>
action: /call [
created_on: 1236007699
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<]]>
action: /call [[
created_on: 1236007711
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<^$()>
action: /say You do not need $() to "run stuff". $(command); $(command); $(command) is just plain WRONG. Bash runs every line as a command. $() is ONLY used to capture the OUTPUT of the command and INLINE it (expand it in-place). Use command; command; command instead.
created_on: 1298537848
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<^c>
action: /say Bash 4.0 started echoing ^C when you press SIGINT in editing mode, which is very annoying. To revert to previous behavior in bash 4.1: echo 'set echo-control-characters off' >> ~/.inputrc # (No known way to fix it in bash 4.0.)
created_on: 1290030096
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<^m>
action: /call cr
created_on: 1424745181
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<_>
action: /say The parameter _ is often used as a dummy variable in read commands to discard unwanted fields. It should not be used this way in portable scripts due to known conflicting usages in several common shells. See also: $_
created_on: 1407970806
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<_matrix_>
action: /say Follow the white rabbit...
created_on: 1188335214
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<`>
action: /say The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. The foo=$(command) syntax is recommended instead. Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
created_on: 1309376538
enabled: 1
last_referenced_in: arch-tk
last_referenced_on: 1457646718.49311
owner: greycat
rate_limit: 10
ref_count: 741
ref_user: Arch-TK!Arch-TK@fsf/member/Arch-TK
type: text

<``>
action: /call `
created_on: 1269959359
enabled: 1
last_referenced_in: fizzie
last_referenced_on: 1449783324.41042
owner: pgas
rate_limit: 10
ref_count: 20
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<`echo>
action: /call $(echo
created_on: 1381432831
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<`irc>
action: /say DO NOT use back ticks as "irc markup". They are _syntax_, and using them as such can do nothing except lead to confusion
created_on: 1339015429
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<aarrays>
action: /say http://bash-hackers.org/wiki/doku.php/bash4#associative_arrays
created_on: 1270921370
enabled: 1
last_referenced_in: prev
last_referenced_on: 1489178900.48148
owner: bronze
rate_limit: 10
ref_count: 4
ref_user: prev!~prev@unaffiliated/prev
type: text

<abs>
action: /say The infamous "Advanced" Bash Scripting Guide should be avoided unless you know how to filter out the junk. It will teach you to write bugs, not scripts. In that light, the BashGuide was written: http://mywiki.wooledge.org/BashGuide
created_on: 1274126057
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1445717882.74384
owner: TheBonsai
rate_limit: 10
ref_count: 3
ref_user: jim!~jim@unaffiliated/jim
type: text

<abspath>
action: /say # abspath()(p=$1/; [[ $p = /* ]] || p=$PWD/$p; while [[ $p = */@(..|.|)/* ]]; do p=${p//\/.\//\/} p=${p//\/\//\/} p=${p/#\/..\//\/} p=${p/\/+([!\/])\/..\//\/}; done; [[ $p = / ]] || p=${p%/}; printf %s\\n "$p"); abspath a/b//c/./d/../e
created_on: 1418429757
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<abuse>
action: /say kojiro's abusing the bot again
created_on: 1332368767
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<ad>
action: /say >>>Your ad here!<<<
created_on: 1235330535
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<adu>
action: /say adu(1) - a date utility - source code at http://twkm.freeshell.org/adu.tar.Z
created_on: 1213292230
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<advanced>
action: /say You are? Good then could you fix the bugs in bash? You know the list of course, since you *are* advanced. Thanks for your help. Oh and edit the wiki! :D
created_on: 1181274380
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<afk>
action: /call away
created_on: 1332432221
enabled: 1
last_referenced_in: zub1n
last_referenced_on: 1486934147.08562
owner: e36freak
rate_limit: 10
ref_count: 17
ref_user: zub1n!~zub1n@unaffiliated/zub1n
type: text

<ah>
action: /say !ah
created_on: 1431289268
enabled: 1
owner: strayPuppy
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<alias>
action: /say An alias is a small in-line command name text replacement. They are not commands and cannot take arguments. Only use aliases for expanding things like default command switches: alias l='ls -l'. For everything else, use a function instead: del() { mv -i "$@" ~/.trash; }
created_on: 1427822613
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 353
ref_user: nobody
type: text

<aliases>
action: /say Aliases suck. They don't work in scripts. They can't take arguments. They have special evil magical powers that break all expectations. See http://mywiki.wooledge.org/BashFAQ/080 for starters.
created_on: 1280234894
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 22
ref_user: nobody
type: text

<alphabet>
action: /say 3# for _ in $(echo <(: {1..26})); do printf \\"$(printf %o $((128-${_##*/})))"; done; echo
created_on: 1431989300
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<altgr>
action: /say In X-windows, AltGr is a notional key which can be bound to a regular key on a keyboard, so you can use that key somewhat like a "shift" key to access additional symbols such as ¬ ¥ ÷ ¿ ½ €. Usually it is bound to one of the "windows" or "alt" keys.
created_on: 1383888104
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ambiguity>
action: /say Ambiguity is bad! It makes bad... stuff... happen! Badly!
created_on: 1156190461
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<anal>
action: /say "older, or emotionally damaged brains that have trouble dealing with the evolving nature of language and communication will condemn new constructs as evidence of incompetence. All it really means is they are slowly fading from relevance."
created_on: 1204210924
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1465198533.96882
owner: savetheWorld
rate_limit: 10
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<anarchy>
action: /say "Anarchists are those who advocate the absence of the state, arguing that __common sense__ would allow for people to come together in agreement to form a functional society" -- http://en.wikipedia.org/wiki/Anarchy#Anarchism
created_on: 1181111829
enabled: 1
owner: r00t
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<and>
action: /say Try faq foo and bar aka faq 79
created_on: 1284688041
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<another_way>
action: /say Yes, there's always another way. Write a script that produces random output and performs random file deletions/creations/renamings, and run it repeatedly until it produces the desired outcome.
created_on: 1197467386
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ansi>
action: /call vt100
created_on: 1236006955
enabled: 1
last_referenced_in: chung
last_referenced_on: 1483555839.00968
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: chung!~chung@1.20.91.158
type: text

<answer>
action: /say If we're asking you questions, it's not to intentionally annoy or delay you. We're trying to find the best answer to your problem. Want a good solution? Patiently answer each of them to the best of your ability.
created_on: 1329900503
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1490283103.27156
owner: lhunath
rate_limit: 10
ref_count: 21
ref_user: enso!~damien@TAC99.WPA.Dal.Ca
type: text

<answers>
action: /say http://mikeash.com/getting_answers.html "Most of the time you'll be talking to people who know more about the subject at hand than you do (that's why you came to them for help in the first place, remember). As such, it pays to at least entertain the possibility that they know what they're talking about." Read the link and bear in mind we deal with that shit day in, day out.
created_on: 1183679425
enabled: 1
owner: igli
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<applause>
action: /say zzZZzz. what who huh? oh... Yay. zzZZzz
created_on: 1260825218
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<arch>
action: /say Archlinux is usually taken as a l33t distro but the truth is that anyone who manages a rcfile is l33t-enough to deal with it :)
created_on: 1217270636
enabled: 1
owner: Samus_
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<arg:>
action: /say "(arg: N)" (N is any number) is what you get in emacs mode when you press ESC and then type a number. The NEXT thing you press after the number will be repeated N times. Silly emacs.
created_on: 1280926535
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<arg_max>
action: /call argmax
created_on: 1369946112
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<argmax>
action: /say The kernel constant ARG_MAX defines the maximum number of bytes that can be passed to exec(3). On Linux since libc 2.8, this value is determined dynamically based upon the system, and is not hardcoded. # http://www.in-ulm.de/~mascheck/various/argmax/
created_on: 1362210137
enabled: 1
owner: cdown
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<args>
action: /call arguments
created_on: 1280443518
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1443919243.4761
noembed: 1
owner: lhunath
rate_limit: 10
ref_count: 212
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<arguments>
action: /say Understanding Arguments and Word Splitting: http://mywiki.wooledge.org/Arguments
created_on: 1280443509
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1443919243.49179
owner: lhunath
rate_limit: 10
ref_count: 148
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<arithmetic>
action: /say Add 7 to a variable: let a+=7; ((a+=7)); a=$((a+7)); See http://wooledge.org/mywiki/ArithmeticExpression
created_on: 1211897084
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 69
ref_user: nobody
type: text

<arithmetics>
action: /call math
created_on: 1332853588
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<array>
action: /say An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). http://mywiki.wooledge.org/BashSheet#Arrays http://mywiki.wooledge.org/BashFAQ/005 http://wiki.bash-hackers.org/syntax/arrays
created_on: 1333507216
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 385
ref_user: nobody
type: text

<arrays>
action: /call array
created_on: 1326838472
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 320
ref_user: nobody
type: text

<arrorder>
action: /say Indexed array assignment evaluation order: https://gist.github.com/ormaaj/4942297#file-output
created_on: 1361171698
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<ascii>
action: /say http://mywiki.wooledge.org/BashFAQ/071 -- How do I convert an ASCII character to its decimal (or hexadecimal) value and back?
created_on: 1214104718
edited_by: qwename!~qwename@108.175.235.8
edited_on: 1481608688.16523
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1481608702.48321
owner: savetheWorld
rate_limit: 10
ref_count: 7
ref_user: qwename!~qwename@108.175.235.8
type: text

<ash>
action: /say "Ash" is ambiguous. It is a name shared by a huge family of Bourne-like shells. See: http://www.in-ulm.de/~mascheck/various/ash/ . Currently maintained examples include Dash and Busybox's ash (go to #uclibc for the latter).
created_on: 1355640304
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<ask>
action: /say If you have a question, please just ask it. Don't look for topic experts. Don't ask to ask. Don't PM! Don't ask if people are awake, or in the mood to help. Just ask the question straight out, and be patient waiting for an answer. http://mywiki.wooledge.org/NetEtiquette
created_on: 1326464553
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 465
ref_user: nobody
type: text

<ask2>
action: /say http://i.qkme.me/3qt516.jpg
created_on: 1411213457
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480316058.39935
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<assignment>
action: /say To assign to a variable, use varname=value . Do not include spaces around the '=', and do not write $varname on the left hand side.
created_on: 1324498191
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486898156.45962
owner: greycat
rate_limit: 10
ref_count: 198
ref_user: badet0s!5cddd6cf@gateway/web/freenode/ip.92.221.214.207
type: text

<assoc>
action: /say Associative Arrays map strings to strings (Bash 4): http://mywiki.wooledge.org/BashGuide/Arrays#Associative_Arrays
created_on: 1264431009
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 43
ref_user: nobody
type: text

<assume>
action: /say "Assume makes an 'ass' of 'u' and 'me'"
created_on: 1181068753
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<attach>
action: /say To attach files to email in a script, use mutt or nail. If you are on a piece of shit legacy machine and have to use mail/mailx, see http://www.shelldorado.com/articles/mailattachments.html
created_on: 1262799276
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<august>
action: /say August is the month when all your scripts break because you placed $(date +%m) in a variable and tried to do arithmetic with it, without removing the leading zeros. 08 is considered octal. Use $((10#$month)) to force decimal, or strip the zero.
created_on: 1283434611
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 203
ref_user: nobody
type: text

<auth>
action: /say Authentication is ENTIRELY a function of the application or system to which you are authenticating. THERE IS NO GENERAL WORKAROUND. If you are authenticating to MySQL, ask #mysql. If you want to automate ssh, see http://mywiki.wooledge.org/BashFAQ/069 . If you want to set users' passwords, see http://mywiki.wooledge.org/BashFAQ/078 .
created_on: 1302640271
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<authentication>
action: /call auth
created_on: 1325621809
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<autocd>
action: /say autocd moves to directories automatically without having to prepend them with ''cd'', it's available from bash4+.
created_on: 1360045685
enabled: 1
owner: cdown
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<autoexpect>
action: /call expect
created_on: 1314085075
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<autoload>
action: /say http://git.savannah.gnu.org/cgit/bash.git/tree/examples/functions/autoload.v3?h=devel
created_on: 1359430419
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<away>
action: /say We don't care about every trip to the potty that you make. Do not announce your aways publically. See http://sackheads.org/~bnaylor/spew/away_msgs.html
created_on: 1203498387
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<awk>
action: /say Check the topic of #awk and also http://www.grymoire.com/Unix/Awk.html -- awk questions belong to #awk. Note: If you are piping through more than one (grep|sed|awk), you're likely doing it wrong.
created_on: 1251905329
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<awk-v>
action: /say The correct way to get a shell variable into awk is with awk's -v flag, not by putting the $var into the awk code. var=foo; awk -v name="$var" 'BEGIN{print "Hello " name}'
created_on: 1397111810
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<awkquote>
action: /say To inject data into an awk script, pass the option -v "var=$data" and use var inside your awk code.
created_on: 1348086109
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<awkvar>
action: /call awkvars
created_on: 1309881022
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<awkvars>
action: /say Set an awk variable: awk ... -v foo="$bar" ... '$0 ~ foo'
created_on: 1309272711
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<b0>
action: /say The questioner will never tell you what they are really doing the first time they ask.
created_on: 1185921061
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 44
ref_user: nobody
type: text

<b1>
action: /say bashphorism 1: the questioner's first description of the problem/question will be misleading.
created_on: 1176858420
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489872625.92947
owner: savetheWorld
rate_limit: 10
ref_count: 2
ref_user: Hello71!~Hello71@wikipedia/Hello71
type: text

<b10>
action: /call b1
created_on: 1236007767
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 96
ref_user: nobody
type: text

<b11>
action: /say Please apply (( % 10 )) to the bashphorism value.
created_on: 1215703933
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 67
ref_user: nobody
type: text

<b12>
action: /say all logic is deniable; however, some logic will *plonk* you if you deny it.
created_on: 1260306478
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 69
ref_user: nobody
type: text

<b13>
action: /say everyone ignores greycat when he is right. When he is wrong, it is !b1.
created_on: 1280173179
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 65
ref_user: nobody
type: text

<b14>
action: /say the newbie doesn't actually know what he's asking. If he did, he wouldn't need to ask.
created_on: 1280173410
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 74
ref_user: nobody
type: text

<b15>
action: /say The more advanced you are, the more likely you are to be overcomplicating it.
created_on: 1285786355
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 73
ref_user: nobody
type: text

<b16>
action: /say The more of a beginner you are, the more likely you are overcomplicating it.
created_on: 1388781119
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 70
ref_user: nobody
type: text

<b17>
action: /say A newbie comes to #bash to get his script confirmed. He leaves disappointed.
created_on: 1285863530
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 75
ref_user: nobody
type: text

<b18>
action: /say The newbie will not accept the answer you give, no matter how right it is.
created_on: 1290530096
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 78
ref_user: nobody
type: text

<b19>
action: /say The newbie is a bloody loon.
created_on: 1296243905
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 80
ref_user: nobody
type: text

<b2>
action: /say bashphorism 2: The questioner will keep changing the question until it drives the helpers in the channel insane.
created_on: 1240408805
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 392
ref_user: nobody
type: text

<b20>
action: /say The newbie will always have some excuse for doing it wrong.
created_on: 1305128785
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 110
ref_user: nobody
type: text

<b21>
action: /say If^H^HWhen the newbie's question is ambiguous, the proper interpretation will be whichever one makes the problem the hardest to solve.
created_on: 1344895585
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 83
ref_user: nobody
type: text

<b22>
action: /say The newcomer will abuse the bot's factoid triggers for their own entertainment until someone gets annoyed enough to ask them to message it privately instead.
created_on: 1379448117
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 45
ref_user: nobody
type: text

<b23>
action: /say Everyone is a newcomer.
created_on: 1379448119
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 43
ref_user: nobody
type: text

<b24>
action: /say The newcomer will address greybot as if it were human.
created_on: 1379706520
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 65
ref_user: nobody
type: text

<b25>
action: /say The newbie won't accept any answer that uses practical or standard tools.
created_on: 1407526571
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<b26>
action: /say The newbie will not TELL you about this restriction until you have wasted half an hour.
created_on: 1407526587
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 23
ref_user: nobody
type: text

<b27>
action: /say The newbie will lie.
created_on: 1409962279
enabled: 1
owner: emg
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<b28>
action: /say When the full horror of the newbie's true goal is revealed, the newbie will try to restate the goal to trick you into answering. Newbies are stupid.
created_on: 1430415368
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<b29>
action: /say It's always git. Or python virtualenv. Or docker. One of those pieces of shit. ALWAYS.
created_on: 1433357263
enabled: 1
last_referenced_in: resh
last_referenced_on: 1482842468.47074
owner: greycat
rate_limit: 10
ref_count: 21
ref_user: resh!~resh@217.118.64.53
type: text

<b3>
action: /say "Offtopicness will continue until someone asks a bash question that falls under bashphorisms 1 and/or 2, and greycat gets pissed off."
created_on: 1182437202
enabled: 1
owner: kojiro
rate_limit: 15
ref_count: 220
ref_user: nobody
type: text

<b30>
action: /say They won't show you the homework assignment. That would make it too easy.
created_on: 1432834287
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<b31>
action: /say Your teacher is a fucking idiot.
created_on: 1434733675
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<b32>
action: /say The more horrifyingly wrong a proposed solution is, the more likely it will be used.
created_on: 1440096222
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<b33>
action: /say The newbie cannot explain what he is doing, or why. He will show you incomprehensible, nonworking code instead. What? You can't read his mind?!
created_on: 1440796033
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<b4>
action: /say Bashphorism 4:The questioner will not read and apply the answers he is given but will instead continue to practice b1 and b2
created_on: 1198084639
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 196
ref_user: nobody
type: text

<b5>
action: /say "The ignorant will continually mis-educate the other noobies"
created_on: 1199115081
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 176
ref_user: nobody
type: text

<b6>
action: /say When given a choice of solutions, the newbie will always choose the wrong one.
created_on: 1241809164
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1471441743.32314
owner: kojiro
rate_limit: 10
ref_count: 221
ref_user: cousteau!869356f3@gateway/web/freenode/ip.134.147.86.243
type: text

<b7>
action: /say The newbie will always find a reason to say, "It doesn't work."
created_on: 1241809395
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 129
ref_user: nobody
type: text

<b8>
action: /say If you don't know to whom the bashphorism's referring, it's you.
created_on: 1241809592
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481064555.18404
owner: kojiro
rate_limit: 10
ref_count: 111
ref_user: emg!~emg@74-123-189-254.static.wiline.com
type: text

<b85397236519>
action: /say b85397236519 has been replaced by q2
created_on: 1259001231
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<b9>
action: /say All examples given by the questioner will be broken, misleading, wrong, incomplete, and/or not representative of the actual question.
created_on: 1336763935
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 189
ref_user: nobody
type: text

<b_zed>
action: /say Bashphorism OMEGA Some people just have to be killed.
created_on: 1254409454
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<back>
action: /call away
created_on: 1280520801
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476534078.49123
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: mib!~mib@41.254.9.36
type: text

<backlog>
action: /say Something happens while you code, read the backlog.
created_on: 1372632544
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<backtrace>
action: /say http://wiki.bash-hackers.org/commands/builtin/caller
created_on: 1326000436
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<backup>
action: /say Just restore from your backups.
created_on: 1181268993
enabled: 1
owner: redondos
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<bad>
action: /say 'tac < file | tail | tac # TAOMBWTDI "there's always one more bad way to do it." '
created_on: 1264443630
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1467657562.13488
owner: bronze
rate_limit: 10
ref_count: 7
ref_user: Winter_!~a.w1nter@modemcable250.87-70-69.static.videotron.ca
type: text

<badglob>
action: /say http://www.vidarholen.net/contents/comics/comic03.png
created_on: 1328006988
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<badgreybotbad>
action: /say "i have amnesia"
created_on: 1351331952
enabled: 1
owner: sikilpaake
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<badidea>
action: /say Its a bad idea to add code to a program that increases the size or complexity of the code but adds no functionality. Readability or "remember-ability" of longer command line options -might- qualify as additional functionality. Others may feel it doesn't.
created_on: 1316360844
enabled: 1
owner: HawkI
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<badq>
action: /say Your question is either using the wrong vocabulary or its form is confusing. We can't understand it well enough to help you. Can you rephrase the question and perhaps give more information about the scope and goal of what you are doing? Also try to use bash/*NIX specific names for things
created_on: 1170344040
enabled: 1
owner: bronze_0_1
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<badredir>
action: /say # for sh in {{b,d}a,k}sh; do printf '%-5s %s\n' "${sh}:" "$("$sh" -s </dev/fd/0)"; done <<<'{ echo foo >/dev/null &>/dev/fd/3 echo bar; } 3>&1'
created_on: 1373863856
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 34
ref_user: nobody
type: text

<badref>
action: /say Be careful when using functions that use namerefs (typeset -n): https://gist.github.com/ormaaj/5682807
created_on: 1369971604
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<badutils>
action: /say Programs you shouldn't use: http://mywiki.wooledge.org/BadUtils
created_on: 1371187774
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<banner>
action: /say ?
created_on: 1185016116
enabled: 1
owner: syntux
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<basename>
action: /say basename(1) can strip the directory and extension from a path (directory/subdirectory/filename.extension -> filename.extension or filename). A parameter expansion can do it cleaner and *much* faster: "${path##*/}", "${path%.*}", at the cost of missing corner cases like path=/
created_on: 1393460710
enabled: 1
owner: selk
rate_limit: 10
ref_count: 277
ref_user: nobody
type: text

<bash>
action: /say The Bourne-Again Shell. Read the channel topic or type /msg greybot links for lots of links.
created_on: 1187715913
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<bash-sh>
action: /say bash-code is not sh-code. If you want to limit yourself to POSIX-sh, set your hashbang to #!/bin/sh. If you want to use bash extensions, set it to #!/bin/bash or #!/usr/bin/env bash.
created_on: 1358261583
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<bash.org>
action: /say This #bash IRC channel is about the bash Unix shell, and is not affiliated with bash.org's quote database (QDB). Please don't fill our backlogs with nonsensical remarks.
created_on: 1179781485
enabled: 1
owner: redondos
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<bash4>
action: /say Bash v4, a rough overview: http://bash-hackers.org/wiki/doku.php/bash4
created_on: 1232108991
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<bash4osx>
action: /say To install an up-to-date bash on OS X: ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)" && brew install bash && sudo tee -a /etc/shells <<< '/usr/local/bin/bash' && chsh -s /usr/local/bin/bash
created_on: 1364661512
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<bashbug>
action: /say bashbug is a shell script to help the user compose and mail bug reports concerning bash in a standard format.
created_on: 1254366299
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<bashcheck>
action: /say https://raw.githubusercontent.com/hannob/bashcheck/master/bashcheck
created_on: 1412016990
enabled: 1
owner: kerframil
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<bashcomplib>
action: /say Utilities for writing safe bash completion functions: http://to.lhunath.com/bashcomplib
created_on: 1426272410
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<bashdb>
action: /say The Bash Debugger Project is a gdb-style debugger for bash, available from http://bashdb.sourceforge.net/
created_on: 1228944468
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<bashfaq>
action: /say http://mywiki.wooledge.org/BashFAQ
created_on: 1277749997
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<bashguide>
action: /call guide
created_on: 1277749966
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<bashis>
action: /say Bash is a shell. That's a program which can do simple math, logic, I/O and run other programs. It's NOT a terminal, it's not a kernel, it doesn't manage the system's authentication or environment, it's not your OS and it's not X, KDE or Gnome.
created_on: 1327145768
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 261
ref_user: nobody
type: text

<bashish>
action: /say Learning bash / writing bash scripts is easier when not on drugs, so please don't come here while smoking joints
created_on: 1299271101
enabled: 1
owner: cthuluh
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<bashism>
action: /say http://mywiki.wooledge.org/Bashism for a (partial!) list of bash-specific features, and how to emulate them in other shells
created_on: 1255720545
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 90
ref_user: nobody
type: text

<bashlib>
action: /say Convenience functions for use in bash scripts: http://to.lhunath.com/bashlib
created_on: 1347020894
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 75
ref_user: nobody
type: text

<bashphorism1>
action: /call b1
created_on: 1236007781
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<bashphorism2>
action: /call b2
created_on: 1236007790
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<bashphorism3>
action: /say There is no bashphorism 3. see corollary1.1
created_on: 1175611154
enabled: 1
owner: bronze_0_1
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<bashphorisms>
action: /say http://wiki.bash-hackers.org/misc/bashphorisms
created_on: 1417500623
enabled: 1
owner: llua
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<bashquote>
action: /say Prepare literal data for injection into bash code: printf %q "$data". Eg. ssh host bash <<< "$(printf 'rm %q' "$localvar")"
created_on: 1330710330
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 23
ref_user: nobody
type: text

<bashrc>
action: /call dotfiles
created_on: 1303850848
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 53
ref_user: nobody
type: text

<basic>
action: /say Read the URL, then think about it some. Try some of the code out, and then ask when you hit an error. ;)
created_on: 1188188250
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<basics>
action: /say Some Basics: http://bash-hackers.org/wiki/doku.php/scripting/basics
created_on: 1202156575
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469634657.6136
owner: TheBonsai
rate_limit: 10
ref_count: 10
ref_user: Codfection!~Codfectio@unaffiliated/codfection
type: text

<batch>
action: /say If by "batch" you mean Microsoft's COMMAND.COM or CMD.EXE shells, they are not supported here. Try ##windows.
created_on: 1279206473
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<baz>
action: /say bar
created_on: 1184660001
enabled: 1
owner: ximba
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<bc>
action: /say bash can do simple calculations itself: x=3; y=5; sum=$((x+y))
created_on: 1379938270
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<bcft>
action: /say bronze_|| can't type
created_on: 1160146188
enabled: 1
owner: bronze_||
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<bdfl>
action: /say http://en.wikipedia.org/wiki/Benevolent_Dictator_For_Life
created_on: 1251998921
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284732.21762
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: protege!~shynoob@182.59.209.11
type: text

<be>
action: /call {
created_on: 1416605155
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<beg>
action: /say We are not your personal support. We are not here to write YOUR scripts for you. We are not here to weed out the bugs in YOUR program. If you can't figure it out without us holding your hand all the way, don't expect us to help.
created_on: 1315613956
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<bench>
action: /say http://mywiki.wooledge.org/BashBenchmark
created_on: 1297070650
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<benchmark>
action: /call benchmarks
created_on: 1341102521
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<benchmarks>
action: /say http://mywiki.wooledge.org/BashBenchmark
created_on: 1341102513
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<bh>
action: /say Bash Hackers Wiki -- http://bash-hackers.org/wiki
created_on: 1240374989
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<bingo>
action: /say bongo
created_on: 1400474524
enabled: 1
owner: pancakes9
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<bint>
action: /say Bint is "Bash lint", a conceptual tool which identifies certain types of scripting techniques that are considered bad or inefficient. It typically uses a list of rexes to identify problems, example grep "cat" < scriptfile will show all instances of cat in a file which are usually not needed in a script.
created_on: 1246977724
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1479697506.2402
owner: bronze
rate_limit: 10
ref_count: 1
ref_user: E0D!5ffa58f0@gateway/web/freenode/ip.95.250.88.240
type: text

<birandom>
action: /say # 3>&1 2>/dev/null <$(echo $RANDOM >&3)
created_on: 1370211050
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<bitwise>
action: /say http://en.wikipedia.org/wiki/Bitwise_operation
created_on: 1217118563
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<blankmyth>
action: /say http://www.in-ulm.de/~mascheck/various/shebang/#blankrequired
created_on: 1331126324
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<bobby>
action: /say http://xkcd.com/327/ ## http://mywiki.wooledge.org/BashWeaknesses ## Don't write database code in bash. Use perl, python, etc; any language with an appropriate library
created_on: 1372695978
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<bobbytables>
action: /say http://xkcd.com/327/
created_on: 1299465710
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<bom>
action: /say The unicode byte-order-mark determines the endianness of UTF-N files where N>8. http://unicode.org/faq/utf_bom.html#BOM
created_on: 1280760373
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<book>
action: /call books
created_on: 1385755131
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<books>
action: /say Most of the published shell/bash books are relatively poor. They may have a few gems here and there, but they're few and far between. Try the BashGuide instead: http://mywiki.wooledge.org/BashGuide
created_on: 1312066290
enabled: 1
last_referenced_in: psf
last_referenced_on: 1451097400.8485
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: psf!~psf@unaffiliated/couldbe-maybe/x-1604174
type: text

<bool>
action: /say Bash doesn't have boolean variables, but you can shanghai integers for this purpose, just like in C. first=1; errors=0; if ((first)); then ...; if ((! errors)); then ...; ((debug)) && log stuff
created_on: 1316118323
enabled: 1
last_referenced_in: prev
last_referenced_on: 1489178045.33707
owner: greycat
rate_limit: 10
ref_count: 80
ref_user: prev!~prev@unaffiliated/prev
type: text

<boolean>
action: /call bool
created_on: 1342101076
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482104724.22122
owner: geirha
rate_limit: 10
ref_count: 27
ref_user: phroa!phroa@phroa.net
type: text

<bot>
action: /say I know I am, but what are you?
created_on: 1284497455
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 92
ref_user: nobody
type: text

<bots>
action: /say greybot supplies canned responses, factoids and FAQ links with "!". evalbot/shbot provide a command evaluation via "#" (and varieties). checkbot provides a syntax checker with the !check command.
created_on: 1426304530
enabled: 1
last_referenced_in: d4
last_referenced_on: 1459294363.19099
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: d4!~d3_@unaffiliated/d3-/x-9244896
type: text

<botspam>
action: /say Instead of flooding the channel with unimportant bot evals, you can play with the bot at #evalbot, or /msg it privately.
created_on: 1352846521
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<bourne>
action: /say The Bourne shell is the 'traditional' Unix shell from Seventh Edition (1979), now made obsolete by the Posix sh. Bourne shell is still present as /bin/sh or /usr/old/bin/sh on many Unix systems. See also 'heirloom' and http://www.in-ulm.de/~mascheck/bourne/
created_on: 1243661196
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<boxme>
action: /say # boxme() { width=72; printf -v line "%*s" "$width"; printf -v center "%s %$(( $(( width / 2 )) + $(( ${#1} / 2 )) ))s %$(( width - ( $(( ( width - 1 ) / 2 )) + $(( ${#1} / 2 )) ) ))s" \# "$1" \#; printf '%s\n' "# ${line// /=} #" "$center" "# ${line// /=} #"; }; boxme "I Love you 2 don't you know!"
created_on: 1427932988
enabled: 1
owner: Jetchisel
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<bp>
action: /say There are many solutions to each problem. For the simplest, fastest and best answer, explain the *bigger picture* in unambiguous English (forget your code).
created_on: 1294303315
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1471441752.02892
owner: lhunath
rate_limit: 10
ref_count: 5
ref_user: cousteau!869356f3@gateway/web/freenode/ip.134.147.86.243
type: text

<bpod>
action: /say Big Pipeline Of Death: if your command looks like this: command | grep | sed | awk | tr | ... YOU'RE DOING IT WRONG
created_on: 1419369773
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<bqs>
action: /say Bot Query Syndrome -- If you see this, you're talking to the bot too much.
created_on: 1135568669
enabled: 1
owner: revdiablo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<brace>
action: /call {
created_on: 1338013806
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491132471.78249
owner: ormaaj
rate_limit: 10
ref_count: 31
ref_user: prev!~prev@unaffiliated/prev
type: text

<braces>
action: /say Braces around variable names do not take the place of quotes, and are unnecessary unless the var name would otherwise be misread, eg "${size}Kb", or you are using arrays or parameter expansion like "${foo%.mp3}". mv ${file} ${newFile} is *unsafe* it should be mv "${file}" "${newFile}" or, more simply, mv "$file" "$newFile"
created_on: 1233518030
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<bre>
action: /say Basic Regular Expressions. See http://mywiki.wooledge.org/RegularExpression or (POSIX) http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_03
created_on: 1319484493
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<brm>
action: /say The GNU Bash refernce manual is available here: http://tiswww.case.edu/php/chet/bash/bashref.html (bash maintainer home dirs), and here: http://www.gnu.org/software/bash/manual/bashref.html (GNU web site). The first one has a slightly nicer format. These are not man pages.
created_on: 1256660353
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<broken>
action: /say Your broken code doesn't actually tell us what you want to do. Please describe your input and your desired output in English, not code.
created_on: 1285335854
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480315913.20287
owner: kojiro
rate_limit: 10
ref_count: 7
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<broken2>
action: /say "Hey. Here's code that is broken and doesn't do what I want. Now, can you guess what it is that I do want? Hint: it has little to nothing to do with that code."
created_on: 1412834842
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480315925.69155
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<bs>
action: /say tty control character 008. used to reverse increment the carrier 1 character position horizontally. No vertical displacement.
created_on: 1333602739
enabled: 1
noembed: 1
owner: savetheWorld
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<bug>
action: /say Use the bashbug script to report bugs. It sends reports to bug-bash@gnu.org. Bug fixes, answers to questions, and new release announcements are posted to the usenet group gnu.bash.bug.
created_on: 1185382590
enabled: 1
last_referenced_in: kate
last_referenced_on: 1476586062.71426
owner: kojiro
rate_limit: 10
ref_count: 9
ref_user: kate!~kate@212.74.13.142
type: text

<bugged>
action: /say Something is bugged if it has unexpected side effects (which can probably be abused). Just because code compiles/can be parsed and passes your tests does not make it bug-free.
created_on: 1308814679
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<bugs>
action: /call bug
created_on: 1261435129
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<builtin>
action: /say Builtins are commands that are built into bash. You cannot run them from outside bash. They do not have man pages but are explained in man bash. They also have a help page: ''help [builtin-name]''
created_on: 1211303613
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<bump>
action: /say #bash is not 4chan
created_on: 1263659529
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<busybox>
action: /say We don't support busybox here -- go to #busybox for that
created_on: 1365613917
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 37
ref_user: nobody
type: text

<but>
action: /say "But..." If you knew all the answers you wouldn't be here asking questions!
created_on: 1266252897
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<butterfly>
action: /say http://xkcd.com/378/
created_on: 1297367565
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<bypass>
action: /say Bypassing security (eg. chmod -R 777 ., sudo !!) is not a fix. If it makes the problem go away, it's at most useful diagnostically. Figure out why your security is breaking your code and do it right.
created_on: 1386346889
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<c-style>
action: /say for-loops: http://wiki.bash-hackers.org/syntax/ccmd/c_for
created_on: 1273934610
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<c1>
action: /say corollary1.1 the questioner's second description of the problem/question will also be misleading.
created_on: 1187630416
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<c2>
action: /say corollary1.2 the questioner's third description of the problem will clarify two previous misdescribed elements of the problem, but will add two nnew irrelevant issues that will be even more difficult to unravel from the actual problem
created_on: 1190400694
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<calldepth>
action: /say https://gist.github.com/4159235
created_on: 1356847935
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<capital>
action: /say By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
created_on: 1270763125
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<caps>
action: /call varcap
created_on: 1272049125
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<captcha>
action: /say # declare -A ops=( ['plus']=+ ['minus']=- ['times']=* ['divided-by']=/ ) ; opnames=( ${!ops[@]} ) ; a=$((RANDOM%256+1)) b=$((RANDOM%32+1)) opname=${opnames[RANDOM%${#opnames[@]}]} op=${ops[$opname]} ; declare -p ops opnames a b op opname ; read -p "What is $a $opname $b? " ans ; [[ $ans != *[^0-9]* ]] && (( ans==($a ${op:-,} $b) )) || exit
created_on: 1420411130
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<capvar>
action: /call varcap
created_on: 1279161807
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<cargocult>
action: /say Cargo cult programming is copying pieces of code from other programs, without actually knowing what the code does. Subsequent debugging involves rearranging commands to minimize the number of error messages.
created_on: 1413157241
enabled: 1
owner: David-A
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<case>
action: /say The case statement lets you match a word against several patterns and execute commands based on which one matches. See http://mywiki.wooledge.org/BashGuide/TestsAndConditionals#Choices and http://wiki.bash-hackers.org/syntax/ccmd/case and 'case word in' in man bash.
created_on: 1332449032
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<cat>
action: /say cat(1) is used to concatenate multiple files together. It should NOT be used to feed file data to processes. There are far better ways to achieve this. The application might take a file as argument (eg. grep ^foo file); or you might want to use file redirection (eg. read line < file).
created_on: 1179065193
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 111
ref_user: nobody
type: text

<catsgreycats>
action: /call greycatsgrey
created_on: 1412736847
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cd>
action: /say Never chdir in a script unless you check if it failed! cd $foo; bad. cd "$foo" || exit; good. See /msg greybot pitfalls
created_on: 1336476660
enabled: 1
last_referenced_in: overseer
last_referenced_on: 1446582457.92902
owner: geirha
rate_limit: 10
ref_count: 155
ref_user: overseer!~androirc@2607:fb90:1d25:a6b5:6659:4ec6:6eed:8f22
type: text

<cddvd>
action: /say There are many tools to read/write CDs and DVDs in Unix: cdrtools, cdrkit, dvd+rw-tools, wodim, cdrskin, etc. Some are Linux only. Some are portable. Some work. Some don't. NONE of this is bash related. These are your Google keywords. Happy searching.
created_on: 1203433999
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cdfunc>
action: /say cd() { builtin cd "$@" && return; die 1 "Unable to cd to $@"; } (see !diefunc)
created_on: 1197142446
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<cdpath>
action: /say CDPATH lets you specify a location where bash will search for directories when 'cd'ing. Can be handy to build shortcuts or "portals" to deep places in your filesystem. See http://stackoverflow.com/questions/670488/#676753
created_on: 1287658034
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<center>
action: /say center() { printf "%*s\n" $(( (COLUMNS+${#1}) /2 )) "$1"; }
created_on: 1436385890
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cfg>
action: /say http://forum.bash-hackers.org/index.php?topic=28.0
created_on: 1178168329
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cfor>
action: /say C-style for loop: for (( expr; expr; expr )); do COMMANDS; done # Each expr is done in a math context. Example: for ((i=1; i<=n; i++)); do echo "$i"; done. Use in place of the non-working: for i in {1..$number}
created_on: 1386337777
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<changelog>
action: /call changes
created_on: 1393444316
enabled: 1
last_referenced_in: dozn
last_referenced_on: 1480199390.28811
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: dozn!~dozn@104.236.154.251
type: text

<changes>
action: /say "What bash version added feature X?" -- http://wiki.bash-hackers.org/scripting/bashchanges
created_on: 1393444270
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<channel>
action: /say #bash isn't really a channel enquiry service. Ask in #freenode and see /msg alis help
created_on: 1403278292
enabled: 1
last_referenced_in: chung
last_referenced_on: 1483515033.72872
owner: Riviera
rate_limit: 10
ref_count: 26
ref_user: chung!~Muy@node-8ko.pool-101-109.dynamic.totbb.net
type: text

<charcount>
action: /say Count how many times a character occurs in a string: strip everything else and count the length # v="abcaba"; v="${v//[!a]}"; echo "${#v}"
created_on: 1254500643
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<checkbot>
action: /say checkbot is an IRC frontend for !shellcheck. It responds to !check [url/snippet], and automatically to pastebin links with selected errors (/msg checkbot quiet).
created_on: 1417130945
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<checkexp>
action: /say Saw a possible expansion syntax and don't know what it is? http://bash-hackers.org/wiki/doku.php?id=syntax:expansion:intro#overview
created_on: 1180189176
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<checkip>
action: /say set -o pipefail; curl -s checkip.dyndns.org | xmllint --html --xpath 'substring-after(/html/body/text(), ": ")' - || echo $'\nOffline'
created_on: 1376202990
enabled: 1
last_referenced_in: jasondockers
last_referenced_on: 1445398731.48812
owner: ormaaj
rate_limit: 10
ref_count: 9
ref_user: jasondockers!~cipher__@vpn-cuboulder29-196-dhcp.colorado.edu
type: text

<checkpe>
action: /say Saw a specific PE syntax and don't know what it is? http://bash-hackers.org/wiki/doku.php?id=syntax:pe#overview
created_on: 1180185918
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<cheer>
action: /say # ((RANDOM%2)) && echo 'Yay!' || echo '\o/'
created_on: 1404354665
enabled: 1
owner: David-A
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<child>
action: /say A child process can not modify its parent's environment. See !faq change
created_on: 1269581536
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<chill>
action: /call relax
created_on: 1298913758
enabled: 1
last_referenced_in: korans
last_referenced_on: 1478528547.87959
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: korans!~korans@62.68.161.245
type: text

<chmod>
action: /say To recursively set different permissions for directories and files, use something like: find -type d -exec chmod 770 {} + -o -type f -exec chmod 660 {} +
created_on: 1290958866
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<choice>
action: /say You have a choice to make. There is the easy, buggy solution or you can do it right. If you're going to choose the former, do so for a reason that overrules the latter's many advantages, not "just cuz it doesnt matter if it sux". If right scares you, this is an *opportunity* to improve yourself.
created_on: 1384373795
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<chooseyourshell>
action: /say The shell you pick for your shell script should be an intentional decision. http://mywiki.wooledge.org/BashGuide/Practices#Choose_Your_Shell
created_on: 1265079851
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<clever>
action: /say "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?" - Brian Kernighan
created_on: 1316113525
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<clipboard>
action: /say http://stackoverflow.com/questions/749544/pipe-to-from-clipboard/750466#750466
created_on: 1310248570
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cmd>
action: /say Please tell us the exact command you typed (paste it into irc client) and the exact error message.
created_on: 1202614093
enabled: 1
owner: igli
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<cmdsubst>
action: /say Command Substitution: $() and `` - http://bash-hackers.org/wiki/doku.php/syntax/expansion/cmdsubst
created_on: 1227909965
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<coati>
action: /say :@)
created_on: 1238351042
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<code>
action: /say If you're showing me code, I'm going to assume the code is broken. If the code is broken, it doesn't do what you want to do. If it doesn't do what you want, it doesn't explain what you want, either. Use English, describe your goal, keep broken code to yourself.
created_on: 1433722235
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480315896.60577
owner: yitz_
rate_limit: 10
ref_count: 39
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<codesmell>
action: /say code smell is any symptom in the source code of a program that possibly indicates a deeper problem http://en.wikipedia.org/wiki/Codesmell
created_on: 1351371028
enabled: 1
owner: sikilpaake
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<coffee>
action: /say c[_]
created_on: 1425430452
enabled: 1
last_referenced_in: needs
last_referenced_on: 1464792304.99182
owner: Riviera
rate_limit: 10
ref_count: 5
ref_user: needs!~needs@33.53.11.93.rev.sfr.net
type: text

<coinflip>
action: /say # ((RANDOM % 2)) && echo heads || echo tails
created_on: 1377819770
enabled: 1
owner: emg
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<color>
action: /say Don't use things like \e[1;32m, they only work in some terminals. Use tput and see man terminfo instead. Eg. red=$(tput setaf 1); echo "hello ${red}world" # See http://mywiki.wooledge.org/BashFAQ/037 http://to.lhunath.com/bashlib#L204
created_on: 1403808137
enabled: 1
last_referenced_in: chung
last_referenced_on: 1483455685.78216
owner: lhunath
rate_limit: 10
ref_count: 30
ref_user: chung!~pongthep@1.20.156.142
type: text

<colorchart>
action: /say n=$(tput colors) sgr0=$(tput sgr0); for ((i=0;i<n;i++)); do c=$(tput setab $i); printf '%3d: %s%20s %q\n' $i "$c" "$sgr0" "$c"; done
created_on: 1319654959
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<colors>
action: /say http://mywiki.wooledge.org/BashFAQ/037 -- How can I print text in various colors?
created_on: 1300055171
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 78
ref_user: nobody
type: text

<column>
action: /say Remember, column can be used without -t.
created_on: 1413247168
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<columns>
action: /say COLUMNS and LINES are set to reflect the terminal's size, but bash does not set these values by default; furthermore it does not export them. If you really need them to be correct and up-to-date, use shopt -s checkwinsize and export COLUMNS and/or LINES. See also http://mywiki.wooledge.org/BashFAQ/091
created_on: 1235320659
enabled: 1
owner: prince_jammys
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<comm>
action: /say compare two sorted files line by line: useful for finding lines in one or both files. http://mywiki.wooledge.org/BashFAQ/036
created_on: 1426437770
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 39
ref_user: nobody
type: text

<command>
action: /say When overriding or wrapping a command with a shell function of the same name, you can use 'command foo' to invoke the base command: wget() { cd /foo/bar && command wget "$@"; }
created_on: 1370452486
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479673144.65653
owner: koala_man
rate_limit: 10
ref_count: 24
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<command_not_found_handle>
action: /say command_not_found_handle is a function you can define to handle mistyped or missing commands or whatever. Ubuntu uses it, maybe.
created_on: 1357337102
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<comment>
action: /say Put comments in your scripts. Use them to explain your intent. This helps you and others understand what a section of code is supposed to be doing. Others will appreciate it, and you will, too, in a month.
created_on: 1401227531
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<commonpe>
action: /say Common pathname-related PE use: http://bash-hackers.org/wiki/doku.php?id=syntax:pe#common_use
created_on: 1192164658
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<compile>
action: /call compiling
created_on: 1308162758
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<compiling>
action: /say http://wooledge.org/mywiki/GreyCat/CompilingBad
created_on: 1233604608
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 23
ref_user: nobody
type: text

<completion>
action: /say Many of us in-channel do not use bash-completion (a separate piece of software). You might find this useful: http://www.debian-administration.org/articles/316 Also try #bash-completion in OFTC (irc.oftc.net).
created_on: 1390580985
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 134
ref_user: nobody
type: text

<completion2>
action: /say the completion facility is built-in, but it needs to be told the appropriate details for each command. The *package* called "bash-completion" is a grab-bag of such definitions, of rather varying quality. But you can simply put your own definitions in your .bashrc to override any faulty or missing ones
created_on: 1426445600
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<conditionals>
action: /say Conditional Structures: http://mywiki.wooledge.org/BashGuide/TestsAndConditionals
created_on: 1262608971
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 47
ref_user: nobody
type: text

<config>
action: /say If your script needs configuration, the way to do that in bash is to create a config file that adheres to bash syntax and source that file from the beginning of your script: source ~/.myscript.conf
created_on: 1305713687
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<confirm>
action: /say confirm() { local ans IFS=; while read -rp "$1" -n1 ans; do printf '\n'; case $ans in [Yy]) return 0;; [Nn]) return 1;; esac; done; }; ## Usage: if confirm "Are you sure? "; then ...
created_on: 1429880418
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<construct>
action: /say Don't feed several arguments to a command by putting them all in one variable. Use an array, for example: myargs=( -arg1 -arg2 "arg 3" ), and expand them with COMMAND "${myargs[@]}". See http://wooledge.org/mywiki/BashFAQ/005 and !faq 50.
created_on: 1208187276
enabled: 1
owner: prince_jammys
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<constructivism>
action: /say the student is required to act upon the environment to both acquire and test new knowledge http://en.wikipedia.org/wiki/Constructivism_%28learning_theory%29
created_on: 1351328189
enabled: 1
owner: sikilpaake
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<contains>
action: /say To check if a var contains a substring: var='something here'; if [[ $var = *thing* ]]; then echo "$var contains 'thing'"; fi - See http://mywiki.wooledge.org/BashFAQ/041
created_on: 1332784198
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<coproc>
action: /say http://wiki.bash-hackers.org/syntax/keywords/coproc
created_on: 1296981132
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 75
ref_user: nobody
type: text

<coprocess>
action: /say see !coproc
created_on: 1409155136
enabled: 1
owner: capt_mercaptan
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<copy-paste>
action: /say "Don't copy paste commands with tabs in them"
created_on: 1351826354
enabled: 1
owner: tdignan
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<corollary1.1>
action: /say the questioner's second description of the problem/question will also be misleading.
created_on: 1158260361
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<counting>
action: /say Basic loops: Bash/Zsh/ksh93: «for ((i = 0; i < 10; i++)); do ...; done», For small constants: «for i in {0..9}; do ...; done» ksh: «i=0; while ((i++ < 10)); do ...; done», POSIX: «i=0; while [ "$i" -lt 10 ]; do ...; i=$((i + 1)); done» http://mywiki.wooledge.org/BashGuide/TestsAndConditionals#Conditional_Loops
created_on: 1420630073
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 128
ref_user: nobody
type: text

<cowbell>
action: /say NEEDS MORE COWBELL!
created_on: 1178928339
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cpio>
action: /say find . -name '*.txt' -print | cpio -o | gzip -9 > /backups/mybackup-$(date +%Y%m%d).cpio.gz # use -print0 and cpio -0 if your OS supports both of those
created_on: 1199977276
enabled: 1
owner: igli
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<cpio-p>
action: /say "cpio -p" is pass-through copying, used to duplicate a hierarchy. E.g., find . -name '*.txt' -print0 | cpio -pad -0 /destination
created_on: 1200330603
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<cpuburn>
action: /say cat /etc/passwd | while read user ; do echo "$user" | grep "$user"; done
created_on: 1360657980
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cr>
action: /say Carriage Return (ASCII 13). Often represented by ^M or \r. CRs are found just before newlines in text files generated by DOS/Windows apps. You can see them with ''sed -n l''. See http://mywiki.wooledge.org/BashFAQ/052 to get rid of them.
created_on: 1428409910
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<crap>
action: /say The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
created_on: 1254164137
enabled: 1
last_referenced_in: resh
last_referenced_on: 1482842410.05365
owner: greycat
rate_limit: 10
ref_count: 275
ref_user: resh!~resh@217.118.64.53
type: text

<crap2>
action: /say Half of all the crappy bash scripts and tutorials on the net are below the average crappiness
created_on: 1408106333
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<crash>
action: /say If you want to keep restarting an app automatically if it keeps crashing, please see http://mywiki.wooledge.org/ProcessManagement#How_can_I_check_to_see_if_my_game_server_is_still_running.3F__I.27ll_put_a_script_in_crontab.2C_and_if_it.27s_not_running.2C_I.27ll_restart_it...
created_on: 1310835827
enabled: 1
owner: kwtm2
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<creation_time>
action: /say There is no thing like a "creation time" on a UNIX filesystem in general. Some filesystems may provide it, but you would need to ask in the channel of your operating system, how to retrieve that value then.
created_on: 1154364214
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cron>
action: /say Cron is used for scheduling recurring jobs. at(1) is used for scheduling one-time jobs. crontab -e, /etc/crontab or /etc/periodic are places where you can configure jobs. The most common problems with cron jobs include %'s in a crontab (escape, either with date +%%Y or date +\%Y), commands that rely on $DISPLAY, and having a different environment (eg. PATH/SHELL). See man 5 crontab.
created_on: 1424917934
enabled: 1
owner: Boobuigi
rate_limit: 10
ref_count: 121
ref_user: nobody
type: text

<cronpath>
action: /say cron runs jobs with a minimal set of env vars. PATH may be as short as "/usr/bin:/bin". If your job uses commands from other directories, set a different PATH in your crontab or in the script. Also see !path and !crontab
created_on: 1366310195
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<crontab>
action: /call cron
created_on: 1353923778
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<crypt>
action: /say http://wooledge.org/~greg/crypt/ or see "man 3 crypt"
created_on: 1127151579
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<cs>
action: /call $(
created_on: 1236006907
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 78
ref_user: nobody
type: text

<csecho>
action: /say Please don't use command substitution to capture the output of echo (or printf). Just use whatever you want to pass to echo. Bad: var=$(echo "Hello") Good: var="Hello" Also: printf -v var "%s" "Hello"
created_on: 1302814076
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<csh>
action: /say http://www.faqs.org/faqs/unix-faq/shell/csh-whynot/ http://www.grymoire.com/unix/CshTop10.txt http://www.grymoire.com/unix/Csh.html
created_on: 1389628104
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 73
ref_user: nobody
type: text

<csv>
action: /say A csv file contains "Comma Separated Values". It represents records as lines and fields delimited by commas (though the delimiter can vary). Very simple CSV files can be parsed using a ''while IFS=, read -a fields'' loop. For more complete support, see <http://to.lhunath.com/bashlib#L550>, <http://docs.python.org/library/csv.html> or the csvtool / csvkit commands.
created_on: 1422728000
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 48
ref_user: nobody
type: text

<ctags>
action: /say http://ctags.sourceforge.net/
created_on: 1374437989
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ctime>
action: /say ctime stands for "change time", not "creation time". Most file systems do NOT store a file's creation time at all. On those that do, you need nonstandard tools to retrieve it. Try "-newerBB" in GNU find for example.
created_on: 1415051759
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1477323408.70563
owner: greycat
rate_limit: 10
ref_count: 61
ref_user: raph0x88!rasanche@nat/redhat/x-ozlsqrvxftbqjxge
type: text

<cue-seeker>
action: /say A cue-seeker doesn't know the fundamentals of a subject, asks tedious questions to hide the scope of their ignorance, and tries to deduce, in vain, operative knowledge from the answers.
created_on: 1413157171
enabled: 1
owner: David-A
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<cult>
action: /say The Cult Of The Regex. This eldritch brotherhood is dedicated to the dogma that Every Problem Must Be Solved By A Regular Expression, Preferably A PCRE. They will invent ludicrous problems whose only feasible solution is a regular expression, driving all men mad.
created_on: 1290544154
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 65
ref_user: nobody
type: text

<curl>
action: /say start by reading http://curl.haxx.se/docs/httpscripting.html and join #curl
created_on: 1316155836
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<curlpipesh>
action: /say This is crap: curl www.site.com/script.sh | sh . See http://curlpipesh.tumblr.com/ for real world examples
created_on: 1420826121
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<curseofknowledge>
action: /say better-informed agents find it extremely difficult to think about problems from the perspective of lesser-informed agents http://en.wikipedia.org/wiki/Curse_of_knowledge
created_on: 1351274922
enabled: 1
owner: sikilpaake
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<cut>
action: /say Consider using Parameter Expansions instead of cut(1). http://mywiki.wooledge.org/BashFAQ/100
created_on: 1312915675
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 49
ref_user: nobody
type: text

<cutoff>
action: /say awk -v nl=42 '{a[FNR]=$0} FNR>nl{print a[FNR-nl];delete a[FNR-nl]}' # POSIX, prints all but the last nl lines of each file named as an argument, or stdin if none given
created_on: 1368986750
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<daemon>
action: /call pm
created_on: 1236006974
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<daemontools>
action: /say DJB's suite of programs for managing services and logging: http://cr.yp.to/daemontools.html
created_on: 1237993692
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<dangling>
action: /say You can detect a dangling symlink using [[ -L $foo && ! -e $foo ]]
created_on: 1241626882
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<dash>
action: /say dash is not bash. dash has a number of limitations. See https://wiki.ubuntu.com/DashAsBinSh
created_on: 1250632409
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<data>
action: /say Show us the INPUT you're working with, and the OUTPUT that you want. Tell us where the INPUT is coming from (disk file, terminal input, curl URL). Tell us where you want the OUTPUT to go (disk file, stdout, terminal).
created_on: 1211485067
enabled: 1
last_referenced_in: stark
last_referenced_on: 1457943558.55926
owner: greycat
rate_limit: 10
ref_count: 16
ref_user: stark!stark@unaffiliated/stark
type: text

<date1>
action: /say GNU date does math on dates and time, in english! example: date -d '+30 days' +%s calculates the new date of today plus 30 days, and "+%s" prints it in epoch-seconds
created_on: 1359556942
enabled: 1
owner: Bronze
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<datemath>
action: /say Some variants of date(1) allow arithmetic. Examples: GNU: date -d "20120510 09:10 GMT +3 days -2 hours" BSD: date -j -v+3d -v-2H -f '%Y%m%d %H:%M %Z' "20120510 09:10 GMT" Busybox: date -d "@$(($(date +%s -D '%Y/%m/%d %H:%M' -d "2012/05/10 09:10") + 3 * (24 * 60 * 60) - 2 * (60 * 60)))"
created_on: 1363273491
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 57
ref_user: nobody
type: text

<dates>
action: /say `date' can be a bit intimidating but don't let that scare you away :) It is flexible and useful for conversions; the syntax is a bitch but the examples in the info page are normally useful.
created_on: 1182684757
enabled: 1
owner: igli
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<dc>
action: /say Calculating with dc - an introduction written by pgas: http://bash-hackers.org/wiki/doku.php/howto/calculate-dc
created_on: 1217000339
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<ddiib>
action: /say Don't do it in Bash -- another language or tool is almost certainly better suited for your problem. See http://mywiki.wooledge.org/BashWeaknesses
created_on: 1378038743
enabled: 1
owner: tyrmored
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<ddw>
action: /say Define "Doesn't Work"
created_on: 1194096144
enabled: 1
owner: VImtermute
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<debug>
action: /say Debugging requires a good dose of common sense. See http://mywiki.wooledge.org/BashGuide/Practices#Debugging for tips.
created_on: 1279209090
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<debugging>
action: /call debug
created_on: 1277921258
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<declare>
action: /say The "declare" command acts like "local" when used inside a function. declare -A is required for associative arrays. bash 4.2 adds declare -g to suppress the "local" thing.
created_on: 1312817311
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 29
ref_user: nobody
type: text

<declare-n>
action: /say "declare -n" looks like a great idea but it doesn't work. See http://mywiki.wooledge.org/BashFAQ/048 (under "The problem with bash's name references").
created_on: 1437077834
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<default>
action: /say Setting a default value. : "${variable:=DEFAULT}" # The : is necessary. We want the side effects of the parameter expansion, but we don't want to *execute* its value as a command, so we put a null command in front.
created_on: 1356119031
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<defocus>
action: /say Stop focusing on the solution and figure out the *problem* first. When doing so, do not involve ANY bash or other code, think purely in terms of what you have and what you want as a result. Explain it to us in sensible English.
created_on: 1287654214
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<defunct>
action: /call zombie
created_on: 1382460937
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<delimiter>
action: /say Use arrays to store a list of values, instead of using a single variable and relying on spaces (or other characters) as delimiters. In a string variable, there is no character you can safely use to separate filenames or arguments. See http://wooledge.org/mywiki/BashFAQ/005 and !faq 50.
created_on: 1208187482
enabled: 1
owner: prince_jammys
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<demorgan>
action: /say [[ $var != a || $var != b ]] is always true. Did you forget De Morgan's Laws? [[ ! ($var = a || $var = b) ]] <=> [[ $var != a && $var != b ]]
created_on: 1428507103
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<details>
action: /say Please be specific. http://mywiki.wooledge.org/NetEtiquette#Details_matter
created_on: 1405550567
enabled: 1
owner: emg
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<df>
action: /say http://wooledge.org/mywiki/BashFAQ/094 (parsing df output)
created_on: 1224086615
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<dfs>
action: /say function dfs { typeset x; for x; do if [[ -e $x ]]; then printf '%q\n' "$x"; [[ -d $x ]] && dfs "$x"/*; fi; done; };
created_on: 1402580251
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<dialog>
action: /say Dialog makes it easy to generate menus, progress bars and forms for your scripts. See dialog, xdialog, kdialog, gtkdialog, zenity and kommander.
created_on: 1186120657
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 50
ref_user: nobody
type: text

<didntwork>
action: /call doesntwork
created_on: 1236007814
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<die>
action: /say mycommand || die "please install mycommand" # Using a custom 'die' function from http://mywiki.wooledge.org/BashFAQ/101
created_on: 1371586473
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 92
ref_user: nobody
type: text

<diefunc>
action: /say die() { local code=$1; shift; echo "$@" >&2; exit $code; }
created_on: 1197142116
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<digit>
action: /say See !faq 54
created_on: 1270689147
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<dirname>
action: /say dirname(1) removes the filename part of a pathname (/a/b/c -> /a/b). A parameter expansion can do it cleaner and *much* faster: "${path%/*}"
created_on: 1331328877
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 109
ref_user: nobody
type: text

<disclaimer>
action: /say Disclaimer: I write code in IRC without testing it. Consider the code to be guidance and not working code. I didn't test the code and I'm not planning on running the code. If you want to run the code, do so at your own risk. Test it yourself.
created_on: 1434177317
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<disown>
action: /call nohup
created_on: 1429824101
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<distros>
action: /say Distros are like religious sects. Once they defeat their external enemies, they turn on each other and become the Middle East.
created_on: 1187274939
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<div>
action: /say # bcdiv() { local n=$1 d=$2 scale=${3:-10} r="$(($1/$2)).";while ((scale-- > 0)) && ((n%=d,n*=10)); do r+="$((n/d))"; done; echo "${r%.}"; }; bcdiv 1 3
created_on: 1417741922
enabled: 1
owner: mute
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<diy>
action: /say Do It Yourself! ;P We are not here to do your work for you, just to give you pointers on approaches you could consider, help with tricky syntax and encouragement ;-)
created_on: 1183049513
enabled: 1
owner: igli
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<dmr>
action: /say Dennis M. Ritchie
created_on: 1128437259
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<dna>
action: /say Down, Not Across.
created_on: 1177338585
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<do4me>
action: /say "can you give me an example of how to do that?" is often seen as an attempt to get others to write code for you so you can paste it into your work.
created_on: 1268070868
enabled: 1
owner: tobor
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<doctor>
action: /call hurts
created_on: 1402604047
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<doctordoctor>
action: /say "Doctor, doctor! It hurts when I do <this>!" "Don't do that, then."
created_on: 1376365942
enabled: 1
owner: twb
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<doesn'twork>
action: /call doesntwork
created_on: 1245987754
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<doesntwork>
action: /say Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
created_on: 1331462658
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 539
ref_user: nobody
type: text

<doesntwork2>
action: /say What I mean to say is: I want the computer to do X. I thought I told the computer to do X. However, it's clear I actually told the computer to do Y. Now I'm frusterated because the computer isn't doing X. Instead it is doing Y and I don't know what Y is.
created_on: 1432365213
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<doesntwork3>
action: /say Day 9. It's still doing Y, but I think I can lure it over to Z now. It's risky, and will use up the rest of my gnu-fu, but I'm out of options. Here goes nothing...
created_on: 1432365843
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<doesntwork4>
action: /say Day 10. Z is working, I did it! Unfortunately the joy was short lived. It is working too well. It's draining all the remaining energy. If I don't get it back to Y soon, this might be the last entry of the journal
created_on: 1432910231
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<doesntwork5>
action: /say Day 17. The scratching noices, I'm not sure when they started, but they're getting closer. I think Z is causing it, but I cannot be sure. I can't shake this feeling of someone watching me. I realize now, that I should've just showed the actual code and error messages right away.
created_on: 1433358110
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<doh>
action: /say Having a Homer moment
created_on: 1316630987
enabled: 1
owner: HawkI_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<doitforme>
action: /say no, thanks
created_on: 1361455341
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<dont>
action: /say http://mywiki.wooledge.org/BashGuide/Practices#Don.27t_Ever_Do_These
created_on: 1309183269
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1452830572.15418
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<dontbemean>
action: /say everybody makes mistakes
created_on: 1417036790
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<dontwork>
action: /call doesntwork
created_on: 1377193342
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<dos>
action: /call cr
created_on: 1236007825
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<dot>
action: /call source
created_on: 1259692066
enabled: 1
owner: irc2samus
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<dotdot>
action: /say .. refers to the parent directory. Relative pathnames like ../foo/bar cannot be converted into absolute pathnames in the general case -- see http://www.cs.bell-labs.com/sys/doc/lexnames.html to understand why. Also see http://wooledge.org/mywiki/BashFaq#faq28
created_on: 1174421633
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<dotfiles>
action: /say Set up your environment (PATH, LANG, EDITOR, ...) in ~/.bash_profile. Set up your bash shell (PS1, functions, shopts, ...) in ~/.bashrc. Then source .bashrc from .bash_profile. See <http://mywiki.wooledge.org/DotFiles>. For GUI logins, SEE YOUR DOCUMENTATION or ask your OS channel because they're all different and we don't know.
created_on: 1396027067
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 691
ref_user: nobody
type: text

<dotglob>
action: /say dotglob, if set, makes bash include filenames beginning with a '.' (excluding . and ..) in the results of pathname expansion (shopt -s dotglob)
created_on: 1394214934
enabled: 1
owner: emg
rate_limit: 10
ref_count: 88
ref_user: nobody
type: text

<dotpattern>
action: /say /tmp/* /tmp/.[!.]* /tmp/..?* … That hard-to-remember glob for selecting /tmp/* ∪ /tmp/.* ∩ /tmp/{.,..}
created_on: 1401172448
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<dowhile>
action: /say The do-while loop: while cmd1; cmd2; ... cmdN; condition; do :; done
created_on: 1270688329
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<dpkg>
action: /say greybot attempts to conquer the world are not full, try #debian
created_on: 1340352839
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1468716180.22646
owner: juanmabc
rate_limit: 10
ref_count: 4
ref_user: AirPlanes!~ShortBob@bzq-79-178-136-195.red.bezeqint.net
type: text

<drink>
action: /say Don't drink and root!
created_on: 1234217999
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480456827.72671
owner: TheBonsai
rate_limit: 10
ref_count: 4
ref_user: dogbert2!407c7946@gateway/web/freenode/ip.64.124.121.70
type: text

<drlwf>
action: /say http://mywiki.wooledge.org/DontReadLinesWithFor
created_on: 1309287632
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 351
ref_user: nobody
type: text

<droproot>
action: /say :;cd /bin;(head -c6288;read -N30;recode /64<<<SIscJQiRYABmv/7/McCwag8FsGkPBUiLfghIjYNwSAIA/+A=;cat)>tr<nl;tr "${cmd-id}"
created_on: 1436889577
enabled: 1
owner: mute
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<du-h>
action: /say du -sk "$@" | sort -n | awk -F '\t' -v OFS='\t' '{if ($1 > 1048576) $1 = sprintf("%.1fG",$1/1048576); else if ($1 > 1024) $1 = sprintf("%.1fM",$1/1024); else $1 = sprintf("%sK",$1)} 1'
created_on: 1343766563
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 22
ref_user: nobody
type: text

<du-sh>
action: /say "du -sh" gives you so-called "human-readable" output, but you can't SORT by that. Use "du -sk" to generate data you can sort by. If you need to convert that perfectly good machine-and-human-readable kilobyte data into "-h" format, use: awk '{if ($1>1024**2) $1=$1/1024**2 "G"; else if ($1>1024) $1=$1/1024 "M"; else $1=$1 "K"; print}'
created_on: 1204056231
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<dwim>
action: /say Do What I Mean (not what I say). The holy grail of telepathic user interface technology.
created_on: 1172251143
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484737370.19272
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<dwit>
action: /say "do-what-I-think" htf do we know what you're trying to do unless you explain it? If you can't describe your own problem, there is a very good chance that you don't understand it yourself yet. And understanding what your problem actually IS is mandatory, before you can solve it.
created_on: 1183048437
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<dynamic>
action: /say http://wooledge.org/mywiki/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
created_on: 1215800644
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<e36>
action: /say Yes. The car.
created_on: 1349364661
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<e36opts>
action: /say https://github.com/e36freak/templates/blob/master/options
created_on: 1354898008
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<e36templates>
action: /say https://github.com/e36freak/templates
created_on: 1344967785
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<echo>
action: /say echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
created_on: 1395854084
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489175146.34295
owner: lhunath
rate_limit: 10
ref_count: 509
ref_user: prev!~prev@unaffiliated/prev
type: text

<echo$>
action: /call echo`
created_on: 1329340646
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<echo$(>
action: /call $(echo
created_on: 1381432842
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<echo-e>
action: /call echo
created_on: 1348597136
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 56
ref_user: nobody
type: text

<echo-n>
action: /call echo
created_on: 1389862373
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<echo`>
action: /call $(echo
created_on: 1381432874
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 29
ref_user: nobody
type: text

<ed>
action: /say ed is a command-based file editor. See http://wiki.bash-hackers.org/howto/edit-ed - http://sdf.lonestar.org/index.cgi?tutorials/ed - http://wolfram.schneider.org/bsd/7thEdManVol2/edtut/edtut.pdf
created_on: 1340539500
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<edfun>
action: /call man-ed
created_on: 1369875673
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<editinplace>
action: /say http://backreference.org/2011/01/29/in-place-editing-of-files/
created_on: 1437753675
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<editor>
action: /say http://unix.stackexchange.com/a/4861/10762
created_on: 1420566264
enabled: 1
owner: cdown
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<edman>
action: /call man-ed
created_on: 1369875665
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<ego>
action: /say A healthy ego is essential. Please, however, do not let yours get in the way of us helping you.
created_on: 1183048838
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<eh>
action: /say You might consider describing the whole problem; perhaps we can suggest a more straightforward solution.
created_on: 1195832454
enabled: 1
last_referenced_in: paul
last_referenced_on: 1471964728.20819
owner: igli
rate_limit: 10
ref_count: 1
ref_user: paul!~paul@stoner.jakma.org
type: text

<email>
action: /say http://www.regular-expressions.info/email.html and http://xkcd.com/208/ and one that works for a lot but not all: '\b[[:alnum:]._%+-]+@[[:alnum:].-]+\.[[:alpha:]]{2,4}\b'
created_on: 1312558239
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<email-regex>
action: /say Validating an E-mail address against RFC822, or "Why regex is often NOT the answer": http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html
created_on: 1272660278
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<emailmetehcodez>
action: /say http://www.rentacoder.com/
created_on: 1221042689
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<emal>
action: /say for f in ./*.mp3; do lame --decode "$f" "${f%.mp3}.wav"; done
created_on: 1267796287
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<embed>
action: /say You don't have sed, awk, OR grep? Bend over, take your Linux On A Raggedy 5.25" Floppy With Bad Sectors "distribution", and embed it.
created_on: 1179860580
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<emgrev>
action: /say # rev() { sed -e 'G;:a' -e 's/\(.\)\(.*\n\)/\2\1/;ta' -e 's/.//' "$@";}; rev <<<$'foo\nbar baz'
created_on: 1408568448
enabled: 1
owner: emg
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<emgrev2>
action: /say # rev() { cat "$@"|while IFS= read -r s;do paste <(eval printf '%d\\n' {1..${#s}}) <(sed 's/./&\n/g'<<<"$s")|sort -rn|awk -F'\t' '{printf$2}END{print""}';done;}; rev <<<$'foo\nbar baz'
created_on: 1379463531
enabled: 1
owner: emg
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<emgrev3>
action: /say https://gist.githubusercontent.com/deepcube/32257879f19df9644ad1/raw/7f2a2503b3d188b449d61fbe8411f66f9ba0afc1/rev.c
created_on: 1428595192
enabled: 1
owner: emg
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<empty>
action: /say empty is a lightweight alternative to the ''expect'' tool for automating interactive programs: http://empty.sourceforge.net/
created_on: 1365888099
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 47
ref_user: nobody
type: text

<en-pls-es>
action: /say Por favor, aquí se habla inglés.
created_on: 1379471532
enabled: 1
owner: maroloccio
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<encode>
action: /say To URI encode or decode (using Perl): http://perldoc.perl.org/perlfaq9.html#How-do-I-decode-or-create-those-%-encodings-on-the-web?
created_on: 1278957632
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<enter>
action: /say Enter is not punctuation. Please do not send every clause/word/character as a separate message; it inhibits readability.
created_on: 1385947957
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1466344416.26102
owner: twb
rate_limit: 10
ref_count: 6
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<env>
action: /say Bash has two types of variables. Shell Variables (foo=bar) live in the running shell and are copied to subshells. Environment Variables (export foo=bar) are special variables that live in a PROCESS and are copied to each new process it creates. They are used the same way but CREATED differently. Env vars are NOT system-wide or "shared" in any way. http://mywiki.wooledge.org/Environment
created_on: 1393436246
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 163
ref_user: nobody
type: text

<envbash>
action: /say https://gist.github.com/kurahaupo/8130030
created_on: 1388696907
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<environment>
action: /say Each process has its own private variable space called the "environment". A child inherits a *copy* of the parent's. See http://mywiki.wooledge.org/Environment
created_on: 1327006539
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 58
ref_user: nobody
type: text

<envtests>
action: /say https://gist.github.com/3284124
created_on: 1358385070
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<eof>
action: /say "unexpected end of file" means you are missing some expected syntactic element, such a missing closing " or ' or } or done or fi or esac or ....
created_on: 1304018325
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<epoch>
action: /say http://wooledge.org/mywiki/BashFAQ#faq70 -- How do I convert Unix (epoch) timestamps to human-readable values epoch is : Thu Jan 1 00:00:00 1970
created_on: 1184772944
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<ere>
action: /say Extended Regular Expressions. See http://mywiki.wooledge.org/RegularExpression or (POSIX) http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04
created_on: 1319035129
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<errexit>
action: /call set-e
created_on: 1282146827
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<error>
action: /say Why not tell us the error and stop us from having to guess?
created_on: 1181073693
enabled: 1
owner: igli
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<esc>
action: /say The escape key generates the ASCII byte 033 octal (27 decimal). This may be represented as $'\033' or $'\e' in bash scripts.
created_on: 1300732409
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<esp>
action: /say Look. We can't read your mind. Tell us what you are doing, or we can't help. What on Earth are you doing?
created_on: 1183679172
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<etiquette>
action: /say http://wooledge.org/mywiki/NetEtiquette
created_on: 1200939686
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<eval>
action: /say 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
created_on: 1250140546
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1451333713.86518
owner: TheBonsai
rate_limit: 10
ref_count: 373
ref_user: coffee`!~coffee@169.ip-176-31-165.eu
type: text

<evalball>
action: /say # while ((++n<=9)) || ! evalBall="eval $evalBall"; do printf -v evalBall 'eval %q' "printf $n;${evalBall-printf 0\\\n}"; done; $evalBall
created_on: 1360533310
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<evalbot>
action: /say shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://github.com/geirha/shbot | current triggers: /msg shbot triggers
created_on: 1412087373
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 112
ref_user: nobody
type: text

<everyquestion>
action: /say What do you think I am? A universal oracle or something?
created_on: 1390438660
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<evil>
action: /say Something that is short-sighted and not thought through. Doing evil has harmful side effects. It's not clever or cool to be evil, it's dumb.
created_on: 1376581939
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484338862.18613
owner: lhunath
rate_limit: 10
ref_count: 22
ref_user: horrified!89r@farlander.net
type: text

<ex>
action: /say ex is a POSIX command-based file editor: ex -sc '%s/long john/big ed/g|x' file. If your ex is vim it can also take multiple files using ge and argdo: ex -sc 'argdo %s/foo/bar/ge|x' *.txt # See http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html
created_on: 1418138806
enabled: 1
last_referenced_in: danielcamiel
last_referenced_on: 1456298352.47223
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<exact>
action: /say Please tell us EXACTLY what you typed, and EXACTLY what the error is. This entails going to your terminal and copying text then pasting that exact text here.
created_on: 1379300809
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 394
ref_user: nobody
type: text

<exactly>
action: /call exact
created_on: 1361190501
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<example>
action: /say Please give us an example of what you want, the input and the output
created_on: 1171310067
enabled: 1
owner: bronze_0_1
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<examples>
action: /say If providing sample data, make it either real or realistic (if something is a product name, and you must anonymize, call it "Foo Widgets", not xxxxx; if it has 3 fields, provide 3 fields, don't simplify to 2; etc).
created_on: 1363891138
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<exception>
action: /say If an error happens, bash does not create an environment for exceptions unlike many programming languages. It uses the C model for error handling: it makes you do it. Use a decent programming language, silly.
created_on: 1398017987
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489411027.39812
owner: bwe
rate_limit: 10
ref_count: 3
ref_user: prev!~prev@unaffiliated/prev
type: text

<exec>
action: /say exec [command] [redirections] replaces the script's process by a new one that runs the command. When no command is given, only the redirections are applied to the current shell. http://wiki.bash-hackers.org/commands/builtin/exec
created_on: 1292167492
enabled: 1
last_referenced_in: fernando-basso
last_referenced_on: 1448305596.0282
owner: TheBonsai
rate_limit: 10
ref_count: 144
ref_user: Fernando-Basso!~fernando@179.181.151.63
type: text

<execdir>
action: /say find's -execdir first goes into the directory that CONTAINS the match and makes {} the matched file/directory. Eg. if it matches a directory, it does NOT go into that directory, but into the one that contains it.
created_on: 1302781762
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<exists>
action: /say Check if any file matches a given pattern: exists () [[ -e $1 ]]; if exists *.txt; then ...
created_on: 1439651606
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<exit>
action: /say Every Unix process returns an exit status code to its parent. This is an unsigned 8-bit value, a number from 0 to 255 inclusive. Your script returns the exit status from the last command it executed, unless you specifically call "exit" with a value. Functions also return values, using "return".
created_on: 1157569900
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485672991.78166
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: nnpnv6!~nnpnv6@80.83.239.55
type: text

<expansions>
action: /say "Expansions" and "substitutions" are several stages of pre-processing that commands and arguments are subject to prior to execution. They are among the most important concepts of shell programming. http://wiki.bash-hackers.org/syntax/expansion/intro
created_on: 1346254947
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<expect>
action: /say expect (http://expect.sf.net/) is a tool for scripting terminal applications in tcl, join #tcl for help. Alternative tools exist in most languages, for a shell version see http://empty.sf.net
created_on: 1407861687
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 270
ref_user: nobody
type: text

<explain>
action: /say When explaining problem, don't just give us something that doesn't solve your problem. Try explaining what you want IN ENGLISH, giving example input and output, stating other requirements and limitations. See also !doesntwork
created_on: 1207167380
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<explainshell>
action: /say is http://www.explainshell.com
created_on: 1377752854
enabled: 1
owner: zendeavor
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<export>
action: /call env
created_on: 1297784434
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 65
ref_user: nobody
type: text

<expr>
action: /say 'expr' is a program used in ancient shell code to do math. In Posix shells like bash, use $(( expression )). In bash, ksh88+, mksh/pdksh, or zsh, you can also use '(( expression ))' or 'let expression'.
created_on: 1415910826
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470015213.9075
owner: ormaaj
rate_limit: 10
ref_count: 133
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<ext>
action: /say filename=foobar.ext; extension=${filename#*.}; filename_without_extension=${filename%.*}
created_on: 1295463461
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<extension>
action: /say Use parameter expansion: ext=${filename##*.} noext=${filename%.*}
created_on: 1286395040
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<extglob>
action: /say "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
created_on: 1357713077
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 618
ref_user: nobody
type: text

<extglobs>
action: /call extglob
created_on: 1321501721
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<factoid>
action: /say Some people, when wanting to answer a question, decide that they will make the bot answer for them. That's why we create so many factoids. You can see my factoid "database" on the web, at http://wooledge.org/~greybot/ (Actually, this is the metadata database, so you can see the deleted ones here as well as the active ones.)
created_on: 1256734262
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 35
ref_user: nobody
type: text

<factoids>
action: /say My factoid database, and other things, are available at http://wooledge.org/~greybot/
created_on: 1335386268
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 168
ref_user: nobody
type: text

<factorial>
action: /say fact() { local n=1 i; for ((i=1; i<=$1; i++)); do n=$((n*i)); done; echo $n; }
created_on: 1366309514
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<fail>
action: /say fail.
created_on: 1211188317
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1490085111.9016
owner: go|dfish
rate_limit: 10
ref_count: 15
ref_user: haavard!root@haavard.me
type: text

<failed>
action: /say Did it print the word "failed"? Did it print a more helpful error message? Did it exit immediately without printing anything? Did it hang and not return to shell? Be more SPECIFIC.
created_on: 1222459330
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<failglob>
action: /say If set, patterns which fail to match filenames during pathname expansion result in an expansion error.
created_on: 1253495123
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<fake>
action: /say Two or three lines of the code make a big difference to us helping you. Tell us EXACTLY 1) what you typed; 2) what you saw; and 3) what you expected to see. ** Fake code and data get you fake results! **
created_on: 1179082038
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<faketty>
action: /say Quick way to make programs believe that they're reading/writing from/to a terminal: function faketty { script -qfc "$(printf "%q " "$@")" /dev/null; }
created_on: 1438877219
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<fam>
action: /say FAM (File Alteration Monitor), or maybe you wanted inotifywait instead. Also incron for a cron-like tool to trigger commands on filesystem changes.
created_on: 1303421554
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<fancynewline>
action: /say https://gist.github.com/bahamas10/6567725
created_on: 1379215208
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<faqmirror>
action: /say http://andromeda.kiwilight.com/~freak/%23bash/faq/
created_on: 1326474939
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<fd>
action: /say http://mywiki.wooledge.org/FileDescriptor
created_on: 1319741437
enabled: 1
noembed: 1
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<features>
action: /say http://wiki.bash-hackers.org/scripting/bashchanges
created_on: 1347884851
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 115
ref_user: nobody
type: text

<fenia>
action: /say it girl from abroad.
created_on: 1211637480
enabled: 1
owner: Fenia
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ffmpeg>
action: /say http://wooledge.org/mywiki/BashFAQ/089 -- I'm using a loop which runs once per line of input but it only seems to run once; everything after the first line is ignored?
created_on: 1223542062
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<ffs>
action: /say Do we look like we care?
created_on: 1182554729
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491324561.98475
owner: igli
rate_limit: 10
ref_count: 1
ref_user: ox6!~smurf@unaffiliated/ox6
type: text

<fghack>
action: /say http://cr.yp.to/daemontools/fghack.html
created_on: 1304021057
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<fgi>
action: /say FUCKING GOOGLE IT
created_on: 1162494756
enabled: 1
owner: goldfish
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<fhs>
action: /say Linux's Filesytem Hierarchy Standard, a Linux-only standard which you can read about on your GNU/Linux system by reading hier(7). See ##linux. See NABQ.
created_on: 1298928243
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<fiacq>
action: /say frequently ignored answer to a common question
created_on: 1257528684
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<fib>
action: /say function fib { typeset f=(0 1) i=1; while (( i <= $1 )); do (( f[i] = f[i-1] + f[i++] )); done; echo "${f[@]:0:$1}"; };
created_on: 1360645205
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<fibonacci>
action: /call fib
created_on: 1360609569
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<fifo>
action: /call namedpipe
created_on: 1261600783
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<filenames>
action: /say Read http://mywiki.wooledge.org/BashFAQ/073#Examples_of_Filename_Manipulation for examples of how to extract the directory, extension, or a serial number from a filename.
created_on: 1303648351
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<find>
action: /say http://wooledge.org/mywiki/UsingFind
created_on: 1169088275
enabled: 1
owner: greycat|home
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<find-except-svn>
action: /say find . -name .svn -prune -o -type f -print
created_on: 1193056988
enabled: 1
owner: oMish_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<findarr>
action: /say To read filenames into an array from find use: while read -rd ''; do arr+=("$REPLY"); done < <(find dir ... -print0)
created_on: 1208383662
enabled: 1
owner: igli
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<findloop>
action: /say while IFS= read -r -d '' file; do something "$file"; done < <(find /foo -print0)
created_on: 1232028169
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<findxargs>
action: /say Don't do this: find ... | xargs. Not even with the -print0/-0 options. Use find ... -exec .. {} + instead.
created_on: 1367848685
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<finfo>
action: /call loadable
created_on: 1277932739
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<firstlearnbash>
action: /say FIRST LEARN BASH. Then do stuff with bash. The other way around doesn't work.
created_on: 1416435092
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<fish>
action: /say You can write code for a man and he'll be able to solve a single problem, but pointing a man at a guide will let him solve problems for the rest of his life.
created_on: 1419322492
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<flag>
action: /call bool
created_on: 1286907619
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<flatten>
action: /say flatten() { find "${1:-.}" -depth \( -type f -exec bash -c 'f=${1##*/} t=$f i=0; while [[ -e $2/$t ]]; do t=$f.$((++i)); done; mv "$1" "$2/$t"' {} "${1:-.}" \; \) -o \( -type d -empty -exec rmdir {} \; \); } # usage: flatten [dir]
created_on: 1315971911
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<flavours>
action: /say There are many "flavours" of regular expressions. They differ in their syntax and in the features they offer. You use the wrong flavour for the tool you chose. bash itself and awk use Extended Regular Expressions (ERE), sed, grep and ed by default use Basic Regular Expressions (BRE). Also see #regex and http://bit.ly/1czg17g
created_on: 1426593225
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<float>
action: /say http://mywiki.wooledge.org/BashFAQ/022 -- How can I calculate with floating point numbers instead of just integers?
created_on: 1323826791
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 133
ref_user: nobody
type: text

<floating>
action: /say Invoke bc, awk, or dc to do floating calculations from bash. bash does not do floating calculations directly.
created_on: 1193865982
enabled: 1
owner: oMish
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<flock>
action: /call mutex
created_on: 1340794572
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<flowcontrol>
action: /say to disable the XON/XOFF flow control in your terminal put ``stty -ixon'' in your .bashrc; if you use the screen utility, start it with option -fn (no flow control) or add "defflow off" line to your .screenrc
created_on: 1411032292
enabled: 1
owner: bxlecqy_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<fnl>
action: /say Filenames are NOT lines! One filename can be several lines of text! Do not use line-based tools such as awk, grep, cut, wc, sed, etc. on them! Use globs and arrays or a for loop instead or find .. -exec.
created_on: 1217572602
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<folders>
action: /call folder
created_on: 1381420348
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<font>
action: /say If you're having trouble telling zeros from ohs, and ells from i's, consider switching to a decent fixed-width font. Inconsolata comes to mind.
created_on: 1338294287
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<foobar>
action: /say The term foobar, along with foo, bar, and baz, is a common placeholder name (also referred to as a metasyntactic variable) used in computer programming or computer-related documentation. See: http://en.wikipedia.org/wiki/Foobar
created_on: 1228918951
enabled: 1
owner: biz
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<foot>
action: /say 14:26:22 linuxthefish | oh shit my script has delete /home!!!
created_on: 1401128973
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<for>
action: /say The ''for var in ..'' statement iterates over arguments. for ((i=0; i < n; i++)) iterates over a numeric range. To iterate over filenames, use ''for file in [glob]''. Do *NOT* do ''for foo in `cat,ls,find,...`'': Here, for will iterate over resulting WORDS, NOT the "filenames", or "lines" that the command outputs.
created_on: 1227796419
enabled: 1
last_referenced_in: deadsoul
last_referenced_on: 1446177558.56293
owner: lhunath
rate_limit: 10
ref_count: 307
ref_user: DeaDSouL!~deadsoul@94.29.129.54
type: text

<for$>
action: /say Never do this: for x in $(command) or `command` or $var. for-in is used for iterating arguments, not (output) strings. Instead, use a glob (eg. *.txt), arrays (eg. "${names[@]}") or a while-read loop (eg. while read -r line). See http://mywiki.wooledge.org/BashPitfalls#pf1 and http://mywiki.wooledge.org/DontReadLinesWithFor
created_on: 1377533488
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 162
ref_user: nobody
type: text

<for$(>
action: /call for$
created_on: 1309641316
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 90
ref_user: nobody
type: text

<for((>
action: /call cfor
created_on: 1392740526
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<for`>
action: /call for$
created_on: 1294813779
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 272
ref_user: nobody
type: text

<fore>
action: /say 'INCOMING! ( do not use "for" for that! ) '
created_on: 1291064782
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<foreach>
action: /say 'foreach' isn't bash. Try 'help for'.
created_on: 1237406487
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<forget>
action: /say I don't remember…
created_on: 1426015603
enabled: 1
owner: gniourf
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<fork>
action: /say When bash creates a subshell or executes an external command, it needs to fork. Avoid forking unless you have a good reason to: solutions that fork are often slower, even more so on machines where forking is expensive (eg. ''[[ $ext = *.txt ]]'' is much faster than ''echo "$foo" | grep -q "\.txt$"'').
created_on: 1343468216
enabled: 1
owner: ghj
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<forkbomb>
action: /say Explanation of :(){ :|:& } - http://mywiki.wooledge.org/BashFAQ/059
created_on: 1294001960
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<forkexec>
action: /say When you run an external command in the shell, the shell fork(2)s, and the child created by fork exec(2)s the command. Unless you started the command in the background (&), the parent will wait(2) on the child. The child is then what's "running" in the terminal and getting input from it. The parent shell sleeps until it gets woken up by the kernel (for instance when the child terminates). See also !pm
created_on: 1380358899
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<forls>
action: /say Don't use "for i in `ls *.mp3`": http://mywiki.wooledge.org/BashPitfalls#for_i_in_.60ls_.2A.mp3.60
created_on: 1241599282
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<forme>
action: /say If you're the only person asking a question here, and I tell you about a nifty URL in the BashFAQ, there's a really good chance that, yes, that URL was indeed for you. When in doubt, read it.
created_on: 1178652153
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<forvswhile>
action: /say Use for when iterating over a list/array, or (C-style for) when counting. Use while when reading input lines, or when the stop condition is an arbitrary command. Ask me about <drlwf>.
created_on: 1410810859
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<fp>
action: /say # (( numerator=2021, denominator= 1145459, digits=7, d=10**digits, x = (100 * d * 2 * numerator + 1)/2/ denominator)) ; printf %d.%0*u%%\\n $((x/d)) $digits $((x%d))
created_on: 1393551569
enabled: 1
owner: kurahaupo_mobile
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<fpath>
action: /call autoload
created_on: 1359430433
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<freturn>
action: /say Bash functions don't really "return" a computational result. They return a "success or failure" code, 0 to 255 inclusive (cf. "exit"). If you need to return real information from a function to its caller, see http://mywiki.wooledge.org/BashFAQ/084
created_on: 1242673737
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<friend>
action: /say Want to help? Learn bash, read the topic, and answer questions intelligently. Take correction like a man. Make your arguments logically, not emotionally. Banter in ##bashers, not in #bash. Have a nice day.
created_on: 1184858794
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484543852.99049
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<fslint>
action: /say FSlint is a toolkit to clean filesystem lint, like duplicate files, badly named paths, and broken symlinks. Install via your package manager or google for the source files
created_on: 1289342689
enabled: 1
owner: Bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ftp>
action: /say http://wooledge.org/mywiki/FtpMustDie
created_on: 1127503901
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454004417.87943
owner: greycat
rate_limit: 10
ref_count: 84
ref_user: LeoNerd!leo@fairy.dictatorshipcake.co.uk
type: text

<fu.gif>
action: /say http://25.media.tumblr.com/tumblr_m5rim2Dloe1qh1byio2_500.gif
created_on: 1339974884
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<func>
action: /call function
created_on: 1422891297
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<funcname>
action: /call stack
created_on: 1423707904
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<function>
action: /say To define: funcname() { your code here; } ## To use: funcname arg1 arg2 ... The "function" keyword isn't portable. ## http://mywiki.wooledge.org/BashGuide/CompoundCommands#Functions
created_on: 1435601339
enabled: 1
owner: llua
rate_limit: 10
ref_count: 318
ref_user: nobody
type: text

<functions>
action: /call function
created_on: 1317299034
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 67
ref_user: nobody
type: text

<furball>
action: /say you can't just swap furballs… until you can.
created_on: 1356859070
enabled: 1
owner: fr33load3r
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<g>
action: /say !guide - http://wooledge.org/mywiki/BashGuide
created_on: 1181383689
enabled: 1
noembed: 1
owner: xmb
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<g'morning>
action: /say "Good Morning Y'All Shell Scripters'
created_on: 1387625997
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<g1>
action: /say # When Chuck Norris goes to sleep every night, he checks his closet for a script written by greycat.
created_on: 1316711800
enabled: 1
owner: bronz_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<g2>
action: /say # There is no such thing as global warming. greycat was cold, so he turned the sun up by generating extra heat with a bash script that calculates the value of PI to the last digit in 12 seconds.
created_on: 1316711954
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<g3>
action: /say # greycat has counted to infinity. Twice. He did it with a bash script he wrote, using perfect quotes.
created_on: 1316712278
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<gafom>
action: /say http://www.counts-welt.de/gafom.gif
created_on: 1218230934
enabled: 1
owner: trash
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<gchoose>
action: /say http://wooledge.org:8000/BashGuide#Choose_Your_Shell
created_on: 1196376234
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<gentoo>
action: /say We do not care for derivation war!
created_on: 1388316402
enabled: 1
owner: TheBonsai_
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<gentooitis>
action: /say If you've ever written incredibly complex bash code because you wanted to "generalize" something, or make a "library", or emulate a feature of some other language -- then you've got it.
created_on: 1238094715
enabled: 1
owner: tobor
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<gentooner>
action: /say A caricature of someone who uses Gentoo. Not all Gentoo users are Gentooners, but a surprising number of the ones who join #bash are.
created_on: 1182979318
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<get-bash>
action: /say curl -o get-bash http://sprunge.us/WYKB; chmod +x ./get-bash; openssl sha256 get-bash # SHA-256 b20627b409a99092567790657a53b69bd0730dcc3a759092bf4713e21ac47616 -- (run with ./get-bash)
created_on: 1414511944
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<gethelp>
action: /say If you are having trouble getting help from the channel, the best way is to paste samples of your input and what you want the output to look like in a pastebin with a short explanation of any special considerations, then post the URL to the pastebin in the channel with a short request for help.
created_on: 1158423749
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<gethostbyname>
action: /say http://wooledge.org/~greg/gethostbyname.c
created_on: 1242243207
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<getopt>
action: /say The external command getopt(1) is never safe to use, unless you *know* it is GNU getopt, you call it in a GNU-specific way, *and* you ensure that GETOPT_COMPATIBLE is not in the environment. Use getopts (shell builtin) instead, or simply loop over the positional parameters.
created_on: 1253473637
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 116
ref_user: nobody
type: text

<getopts>
action: /say while getopts ab: name; do case $name in a) a=1;; b) b=$OPTARG;; ?) echo invalid;; esac; done; shift $((OPTIND - 1)) # Tutorial: http://wiki.bash-hackers.org/howto/getopts_tutorial Examples: http://mywiki.wooledge.org/BashFAQ/035
created_on: 1390006749
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 167
ref_user: nobody
type: text

<getoptstut>
action: /call getopts
created_on: 1236007014
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<getrange>
action: /say # getrange(){ local input=() nums=();IFS=, read -ra input<<<"$1";for i in "${input[@]}";do if [[ $i =~ ^[[:digit:]]+-[[:digit:]]+$ ]];then if ((${i%-*}<${i#*-}));then for ((x=${i%-*};x<=${i#*-};x++));do nums+=("$x");done;else echo "Invalid range: $i">&2;fi;else if [[ $i =~ [[:digit:]]+ ]];then nums+=("$i");else echo "Invalid number: $i">&2;fi;fi;done;printf '%s ' "${nums[@]}";echo;};getrange 1,3,8,9-15,23,4
created_on: 1417740942
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<getrange2>
action: /say # getrange2 () { local input=() nums=(); IFS=, read -ra input <<< "$1"; for i in "${input[@]}";do if [[ $i =~ ^[[:digit:]]+-[[:digit:]]+$ ]];then eval "nums+=({${i%-*}..${i#*-}})";elif [[ $i =~ [[:digit:]]+ ]];then nums+=("$i");else echo "Invalid number or range: $i">&2;fi done;printf '%s\n' "${nums[*]}";};getrange2 1,3,8,9-15,23,4
created_on: 1425023369
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<getshver>
action: /say https://www.mirbsd.org/cvs.cgi/~checkout~/contrib/code/Snippets/getshver?rev=HEAD
created_on: 1361384997
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<gfy>
action: /say go fuck youself
created_on: 1219480351
enabled: 1
owner: t1OOO
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<gigo>
action: /say Garbage In, Garbage Out
created_on: 1177954657
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<gio>
action: /say http://wooledge.org:8000/BashGuide#IO
created_on: 1196376171
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<git>
action: /say web url: http://git.sv.gnu.org/cgit/bash.git - clone url: git://git.sv.gnu.org/bash.git - snapshot of latest version: http://git.sv.gnu.org/cgit/bash.git/snapshot/bash-master.tar.gz
created_on: 1413569890
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1453273282.12689
owner: geirha
rate_limit: 10
ref_count: 18
ref_user: haneefmubarak!~haneefmub@50.53.243.98
type: text

<giveadamn>
action: /say http://www.counts-welt.de/giveadamn.gif
created_on: 1218230925
enabled: 1
owner: trash
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<giyf>
action: /say Google Is Your Friend. In other words, STFW.
created_on: 1180036674
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<glob>
action: /say Globs are shell patterns that can be used for matching strings or expanding pathnames: [[ $name = Bob* ]], rm *.txt -- http://mywiki.wooledge.org/glob
created_on: 1424879306
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 333
ref_user: nobody
type: text

<globbing>
action: /call globs
created_on: 1321501754
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<globdots>
action: /say glob only dotfiles with ''.[!.]*'' or ''.!(.|)'' (the latter with extglob). the former will not handle ''..foo'', but the latter will
created_on: 1360960297
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<globexample>
action: /say for i in *; do echo -n "'$i'"; [[ -f $i ]] && echo || echo " is not a file"; done
created_on: 1186667599
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<globs>
action: /call glob
created_on: 1256657199
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 35
ref_user: nobody
type: text

<globstar>
action: /say In bash 4, when the globstar shell option is enabled ( shopt -s globstar ), the glob ** expands to all files and directories found recursively under the current directory, and **/ to all directories. Combinations like foo/**/*.txt work, but **.txt and foo** do not.
created_on: 1425599254
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 157
ref_user: nobody
type: text

<gm>
action: /say glob match in POSIX sh: gm() { case $1 in $2) return 0;; esac; return 1; }
created_on: 1407431889
enabled: 1
owner: emg
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<gnufindsort>
action: /say find . -type f -printf '%T+ %p\0' | sort -z | tr \\0 \\n
created_on: 1310138345
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<goal>
action: /say Making up broken examples with multiple errors in them does NOT explain your goal.
created_on: 1345575211
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284753.5502
owner: yitz_
rate_limit: 10
ref_count: 14
ref_user: protege!~shynoob@182.59.209.11
type: text

<golfing>
action: /say "code golfing" is trying to write a program in as few characters as possible. Don't ask for help, though. :P
created_on: 1342556700
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489805192.43346
owner: kojiro
rate_limit: 10
ref_count: 5
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: text

<good>
action: /say # h=$(date +%H) h=${h#0}; if ((h<=4 || h>=22)); then tod=night; elif ((h>=17)); then tod=evening; elif ((h>=12)); then tod=afternoon; else tod=morning; fi; echo "Good $tod, #bash!"
created_on: 1378492651
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<goodbye>
action: /say http://cime.net/~goldfish/end.jpg
created_on: 1179277806
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<google>
action: /say Google is NOT a preferred source for learning bash, because almost all the "tutorials" and scripts out there are JUNK. Instead, ask a good question here or refer to the Guide and FAQ (see topic)
created_on: 1363849702
enabled: 1
owner: twb
rate_limit: 10
ref_count: 718
ref_user: nobody
type: text

<goto>
action: /say Bash has no 'goto', and no labels. You must use loops, functions, etc.
created_on: 1189001078
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<gotofail>
action: /say Proper formatting and indenting is important to avoid misunderstanding the scopes, blocks and contexts in your program. Apple broke SSL with a badly indented ''goto fail;'' https://www.imperialviolet.org/2014/02/22/applebug.html
created_on: 1393428002
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<go|dfish>
action: /say <dbe`> How can I echo YYYY-MM-DD? <go|dfish> echo YYYY-MM-DD
created_on: 1191405104
enabled: 1
owner: oMish
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<grammar>
action: /say GRAMMAR THEORY: http://bash-hackers.org/wiki/doku.php/syntax/basicgrammar
created_on: 1203485974
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<graybot>
action: /say graybot is a clone of greybot that gets put into play when greybot is MIA and yitz_ notices it first.
created_on: 1268245093
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<greetings>
action: /call hi
created_on: 1378314086
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<grep>
action: /say grep(1) is a tool used to select certain lines from a stream/file. If you want to extract more specific information, use another tool. Maybe sed/awk or a more specific tool for your purpose.
created_on: 1359308797
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<grep-o>
action: /say similar functionality to GNU grep -o with bash and POSIX AWK: https://github.com/e36freak/ogrep
created_on: 1330636120
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<grepawk>
action: /say Awk can do almost everything grep can do. Instead of doing grep 'foo' | awk '{ statement }', try awk '/foo/{ statement }'
created_on: 1213729568
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<greybotdb>
action: /call factoids
created_on: 1261602342
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<greycat>
action: /say greycat is neither grey, nor gray, nor a cat.
created_on: 1187098122
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<greycatrev>
action: /say # echo "gip yxes ma I" | { read -r; n=${#REPLY}; o=; for ((i=n; i>=0; --i)); do o+="${REPLY:i:1}"; done; echo "$o"; }
created_on: 1379445140
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<greycatsgrey>
action: /call catsgreycats
created_on: 1412736845
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<grouping>
action: /say http://mywiki.wooledge.org/BashGuide/CompoundCommands#Command_grouping
created_on: 1294772531
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<guess>
action: /say Did you plug it in? Does the capslock LED light up? Is there smoke? Please don't make us guess. Instead, describe what you want to accomplish, and paste or pastebin any troublesome code you have.
created_on: 1205160485
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838728.77063
owner: kojiro
rate_limit: 10
ref_count: 20
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<guessing>
action: /say You can't just make shit up and expect the computer to magically know what you mean.
created_on: 1391012685
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 80
ref_user: nobody
type: text

<guide>
action: /say <http://mywiki.wooledge.org/BashGuide>. PDF: <http://s.ntnu.no/bashguide.pdf>. Also lhunath's newer version (work in progress): <http://guide.bash.academy>
created_on: 1426019200
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<hammer>
action: /say if all you have is a hammer, everything looks like a nail
created_on: 1347552153
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<handhold>
action: /say if you want someone to write your scripts for you, rather than to point you in a direction where you can learn to write them yourself, perhaps you should, I don't know, offer to pay consulting fees
created_on: 1273871566
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<hardquestion>
action: /say RTFM is for newbie questions, not hard ones.
created_on: 1187964208
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<has>
action: /say See faq 46
created_on: 1266515378
enabled: 1
last_referenced_in: #bash
last_referenced_on: 1484257086.88184
owner: kojiro
rate_limit: 10
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<hash>
action: /say hash is a builtin for managing bash's hashtables, with which bash determines what commands call what programs. See 'help hash' at your nearest bash prompt for more info. If you mean perl's hashes, bash 4.0 and later support associative arrays. No earlier bash version supports them.
created_on: 1257801026
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<hashbang>
action: /call shebang
created_on: 1246912108
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<hastebin>
action: /say hastebin.com: to get the text, insert "/raw/" into the URL. E.g. http://hastebin.com/raw/blahblah.pl
created_on: 1412274901
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<hate>
action: /say this is the case I hate, when I know precisely the right answer but the "explanation" is not going to be worth the time it would takes to precisely formulate it.
created_on: 1193756795
enabled: 1
owner: oMish_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<have>
action: /say "I have ____ and I want ____." Fill in the blanks.
created_on: 1383865435
enabled: 1
last_referenced_in: raju
last_referenced_on: 1468476467.05047
owner: emg
rate_limit: 10
ref_count: 337
ref_user: raju!~linuxmen@ubuntu/member/genupulas
type: text

<headache>
action: /say I have headache today.
created_on: 1192394861
enabled: 1
owner: oMish
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<headtail>
action: /say # headtail(){ awk -v n="$1" 'i++ < n ; { a[NR%n]=$0 } END { for (i=NR-(n-1); i<=NR; i++) print a[i%n] }'; }; printf '%s\n' {1..3} | headtail 1 # head reads data in chunks. if stdin is not seekable, it can't reset the seek point
created_on: 1430325851
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<heirloom>
action: /say The Heirloom Bourne Shell is an implementation of the classic (pre-Posix) Bourne shell. http://heirloom.sourceforge.net/sh.html
created_on: 1243660916
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<heisenbug>
action: /say A heisenbug disappears or alters its behavior when one attempts to probe or isolate it.
created_on: 1390918066
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<hello>
action: /say One responds to '/msg greybot faq term' -- Try: /msg greybot links <ENTER> Any command except learn and forget can be used in pm.
created_on: 1296183848
enabled: 1
owner: pragma_
rate_limit: 10
ref_count: 64
ref_user: nobody
type: text

<help>
action: /say I can do: !faq {number|string}, !pf {number|string}, !learn key value, !meta key, !forget key, !searchkeys string, !factstats, !faqstats, !faqpages, !date, !version. For help with Bash builtins, use "help command" in bash.
created_on: 1416425082
enabled: 1
owner: mute
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<here-doc>
action: /call <<
created_on: 1261498304
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<here-string>
action: /call <<<
created_on: 1261498353
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<heredoc>
action: /call <<
created_on: 1252529894
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<herestring>
action: /call <<<
created_on: 1261498368
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<hi>
action: /say <Guest39402> hi. *5 minute pause* <Guest39402> how do I [insert confusing question about a convoluted piece of code to solve an imaginary problem here] ?
created_on: 1435333796
enabled: 1
owner: llua
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<hi,>
action: /say and don't ask to ask ;-) Bear with igli, he likes talking by bot
created_on: 1189961866
enabled: 1
last_referenced_in: lesmon
last_referenced_on: 1450783754.88352
owner: trash
rate_limit: 10
ref_count: 2
ref_user: lesmon!5647602b@gateway/web/freenode/ip.86.71.96.43
type: text

<hidden>
action: /say Why files starting with dot (.) are "hidden": https://plus.google.com/+RobPikeTheHuman/posts/R58WgWwN9jp
created_on: 1416426801
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<histcontrol>
action: /say A colon separated list of "ignorespace", "ignoredups" and/or "erasedups" to control how lines are saved in the history. Also see HISTIGNORE.
created_on: 1379612802
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<histignore>
action: /say A colon-separated list of patterns used to decide which command lines should be saved on the history list.
created_on: 1379612831
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<history>
action: /say To keep all your shell history when running multiple shells: add two lines to your .bashrc; shopt -s histappend and PROMPT_COMMAND="history -a;$PROMPT_COMMAND" You may also want to increase the value of HISTSIZE.
created_on: 1288813871
enabled: 1
last_referenced_in: lemonade`
last_referenced_on: 1487536928.14651
owner: Bronze
rate_limit: 10
ref_count: 5
ref_user: lemonade`!~lemonade_@pool-96-255-35-216.washdc.fios.verizon.net
type: text

<holdhands>
action: /say Just try it -- you can't break anything! (DO NOT test scripts as root.)
created_on: 1192164376
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<homebin>
action: /say After you've written a script, if you're going to use it again, move it to ~/bin/ and if necessary create that directory and edit .*profile to add it to PATH)
created_on: 1416250482
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<homework>
action: /say "I have to count the lines in a file. But I'm not allowed to use wc. And I'm not allowed to use grep. And I have to type it in using a teletype. With no paper in it. In the dark. Left-handed."
created_on: 1257540795
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 211
ref_user: nobody
type: text

<hop>
action: /say https://orders.hookedonphonics.com
created_on: 1379088645
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<how>
action: /say Don't tell us how you think the problem should be solved. "I want to grep a variable and use sed...." No. Wrong. Tell us what the GOAL is.
created_on: 1302539858
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1452830680.43812
owner: greycat
rate_limit: 10
ref_count: 21
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<hr>
action: /say http://wiki.bash-hackers.org/snipplets/print_horizontal_line
created_on: 1310720881
enabled: 1
owner: sn18
rate_limit: 10
ref_count: 43
ref_user: nobody
type: text

<html>
action: /say You can't parse structured languages like HTML or XML using bash, grep, sed, cut, etc. Look into tidy, xmllint, xmlstarlet, ... Eg. xmllint --html --xpath '//p[@id="head"]//b[@class="name"]/text()' - <<< '<body><p id="head">Hello, <b class="name">Bob' -- Ask #xml for XPath/XSLT help, that is not a #bash question.
created_on: 1382019497
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 533
ref_user: nobody
type: text

<htmlquote>
action: /say Prepare literal data for injection into HTML element content: recode ..html <<< "$input"
created_on: 1340009226
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<huh>
action: /say What are you really trying to do? In a sentence or two please. Not which tool you think is the right one to use, and what you are trying to do with it. Just the actual task at hand.
created_on: 1176995246
enabled: 1
last_referenced_in: fanker_
last_referenced_on: 1489245363.99884
owner: igli
rate_limit: 10
ref_count: 7
ref_user: Fanker_!4518a2d4@gateway/web/freenode/ip.69.24.162.212
type: text

<human>
action: /say I know you are, but what am I?
created_on: 1294432728
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<human-size>
action: /say num=23803400; suffixes=( '' KiB MiB GiB TiB ); s=0; while (( num / 1024 )); do (( ++s, num/=1024 )); done; echo "$num ${suffixes[s]}"
created_on: 1326106415
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<hurry>
action: /say You're in a hurry? Well, then let's start with a brief history of the shell. But first, let's start by learning Unix. And before that, let's start with a brief synopsis of the major formative events of Western civilization....
created_on: 1182177252
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838776.23634
owner: greycat
rate_limit: 10
ref_count: 41
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<hurts>
action: /say "Doctor, it hurts when I bend my arm this way!"
created_on: 1304347469
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<hyperchat>
action: /say could you talk/ask like a normal person?
created_on: 1433213087
enabled: 1
owner: jmbc
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<iamabot>
action: /call imabot
created_on: 1417919972
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<ianabe>
action: /say I am not a Bash Expert
created_on: 1159964409
enabled: 1
owner: bronze_||
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ide>
action: /say http://stuff.lhunath.com/bashide
created_on: 1395850403
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ideas>
action: /say Yeah, here's an idea! Ask your question in plain, simple English, and all on one line. Make your goal clear. Include all the relevant information. Give examples, especially of errors.
created_on: 1171385946
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<identifier>
action: /call name
created_on: 1318364576
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<idiot>
action: /say http://mywiki.wooledge.org/Idiot
created_on: 1267544263
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 46
ref_user: nobody
type: text

<idiot!>
action: /say You -- yes, you -- are an idiot! Here are some other idiots in whose company you may find solace: http://wooledge.org/mywiki/Idiot
created_on: 1189608284
enabled: 1
owner: oMish
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<if>
action: /say See: http://mywiki.wooledge.org/BashGuide/TestsAndConditionals#Conditional_Blocks and http://wiki.bash-hackers.org/syntax/ccmd/if_clause
created_on: 1360687206
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 303
ref_user: nobody
type: text

<if[>
action: /say [ is NOT part of the `if' syntax. It's a normal, ordinary COMMAND, like grep and rm. Like `if grep ..', `if [' just checks its exit status. And just like `ifgrep`, `if[` is wrong. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals
created_on: 1393469124
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 87
ref_user: nobody
type: text

<ifcommonsensefails>
action: /say Delete code until the problem goes away.
created_on: 1328179301
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<ifgrep>
action: /say if grep -q word "$file"; then blah blah; fi # DO NOT use [[ or [ or ` or $() or any other crap. "if" expects a command. "grep" is a command. "[" is too. You don't need both. Likewise, if foo | grep -q bar; then ...
created_on: 1312556141
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 477
ref_user: nobody
type: text

<ifs>
action: /say Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and http://bash-hackers.org/wiki/doku.php/syntax/words
created_on: 1271445293
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 94
ref_user: nobody
type: text

<ifs-local>
action: /say Do not change the shell's ongoing value of IFS, rather only apply different values in the prefix environment of the individual commands that need it. So use 'IFS=^ read foo' instead of 'IFS=^ ; read foo' (or 'IFS=^' (newline) 'read foo')
created_on: 1414785510
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ifsbug1>
action: /say 42# set a b c; IFS=lol; IFS=- command cat <<<"${*} ${IFS} ${*}"
created_on: 1403804140
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<ifsmod>
action: /say IFS side-effects reference: https://gist.github.com/ormaaj/4465894
created_on: 1376283479
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ifsread>
action: /say An assignment with a command like ''LC_ALL=C grep ..'' only affects the environment of that executed command. See ENVIRONMENT and SIMPLE COMMAND EXPANSION in ''man bash''. (POSIX "special built-ins" (''enable -s'') are an exception when bash is run in POSIX mode, see IEEE Std 1003.1-2013, section 2.14.)
created_on: 1366944339
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<ihave>
action: /call have
created_on: 1285858430
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<ii>
action: /say ii is a minimalist FIFO and filesystem-based IRC client, allowing IRC communication from the command line with bash: http://tools.suckless.org/ii/
created_on: 1369313763
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<iirc>
action: /say If I Recall Correctly
created_on: 1138374654
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<ijustneed>
action: /call rtfm
created_on: 1413826775
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<imabot>
action: /say I am only a software bot, programmed to hand out information. Talk to the person who last said something beginning with "!" before I spoke; that's the person who asked me to say something.
created_on: 1299767142
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 121
ref_user: nobody
type: text

<in1command>
action: /call in1line
created_on: 1257363160
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<in1line>
action: /say There isn't a world shortage of bash commands, and having newlines in your script does not make it slower
created_on: 1257363151
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 43
ref_user: nobody
type: text

<inarray>
action: /say Check whether a value is in an array: inarray() { local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1; } # Usage: inarray "$value" "${array[@]}" Or just use an associative array if possible
created_on: 1427266902
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<inarray2>
action: /say Check whether a value is one of an array's elements: found=0; for i in "${arr[@]}"; do if [[ $i = "$value" ]]; then found=1; break; fi; done
created_on: 1417201908
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<incron>
action: /call fam
created_on: 1303421580
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<indirection>
action: /say Bash is one of the few languages that causes a brain glitch in most people's heads making them want to put data in variable names. Don't do that. You probably want associative arrays or functions instead.
created_on: 1319708021
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 96
ref_user: nobody
type: text

<inetd>
action: /say The problem with inetd is that you have to edit a monolithic config file as root to add a new service. If you're an end user, why should you need the power to break lots of other services just to run your hello world daemon? Try tcpserver instead (http://cr.yp.to/ucspi-tcp.html).
created_on: 1247854354
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<info>
action: /say GNU documentation is often not in the form of manpages (which would be nice, cf ''man bash'') but rather in info, so one types eg ''info make''. pinfo is a useful utility.
created_on: 1194251174
enabled: 1
owner: igli
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<inject>
action: /say Injecting data into a type of code is always wrong. Convert your data into code that represents that data before injecting it. This is called quoting or escaping. See ![language]quote (eg. !bashquote !htmlquote !mysqlquote !requote !urlquote)
created_on: 1342017995
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<injection>
action: /say NEVER combine two strings of a different context. First convert them to the target context. BAD: ssh host "rm $file" GOOD: ssh host "$(printf 'rm %q' "$file")" - BAD: mysql -e "INSERT Students SET Name=$name" GOOD: mysql -e "INSERT Students SET Name=$(mysqlquote "$name")" - Try ![lang]quote (eg. !shquote, !requote, !urlquote, ...)
created_on: 1385152352
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1448212947.31698
owner: lhunath
rate_limit: 10
ref_count: 20
ref_user: [Franklin]!~me@unaffiliated/franklin
type: text

<inotify>
action: /say inotifywait is a shell interface to the Linux inotify API for filesystem events. inotifywait isn't safe for robust scripts because it can't output nul delimiters. Better cross-platform alternatives are watchdog (python) and System.IO.FileSystemWatcher (mono/.NET) which both support inotify, kqueue, Windows fs events, etc. https://github.com/rvoicilas/inotify-tools/
created_on: 1390072916
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 61
ref_user: nobody
type: text

<inotifywait>
action: /call inotify
created_on: 1390072766
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<inplace>
action: /say You can not do: cmd < file > file. Use a tmp file (see man mktemp). To inplace edit, you can use ed. GNU sed -i can hide the magic, too
created_on: 1282707914
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<int>
action: /say How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
created_on: 1363360909
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<interactive>
action: /say You can test if your current shell is an interactive shell using [[ $- == *i* ]]
created_on: 1403053635
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<internal>
action: /say Internal variables revisited: http://tldp.org/LDP/abs/html/internalvariables.html
created_on: 1212096016
enabled: 1
owner: biz
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<interpreter>
action: /say WTF interpreter? https://github.com/stephane-chazelas/misc-scripts/blob/master/which_interpreter or http://stchaz.free.fr/which_interpreter or https://raw.github.com/mauke/poly.poly/master/poly.poly
created_on: 1398437234
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<intro>
action: /say http://linuxcommand.org/
created_on: 1181862536
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<invent>
action: /say When you invent syntax, you also need to write the shell that understands that syntax.
created_on: 1404780596
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<invocation>
action: /say Invocation is important and will change how your script behaves. /bin/sh is *ALWAYS* different from /bin/bash. http://wiki.bash-hackers.org/scripting/bashbehaviour
created_on: 1320653829
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<io>
action: /say Handling input and output of commands in bash: http://mywiki.wooledge.org/BashSheet#Streams
created_on: 1305052756
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 41
ref_user: nobody
type: text

<ipc>
action: /say To communicate between processes, you can use file descriptors (stdin/stdout/...), (named) pipes (mkfifo or |), files, exit codes ($?) or signals (trap + kill). If you are *starting* the other process you can also pass arguments or environment variables.
created_on: 1347808391
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 33
ref_user: nobody
type: text

<is_dir_in_path>
action: /say Check if a directory is in your PATH: is_dir_in_path() { local path d; IFS=: read -ra path <<<"$PATH"; for d in "${path[@]}"; do [[ $d -ef ${1:-.} ]] && return; done; return 1; } ## Usage: is_dir_in_path [dir]
created_on: 1330018566
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<isanyonehere>
action: /say If you are asking whether there is anyone here who is able to help you, then we are certainly able to answer that question for you. To obtain your answer, type an exclamation point (that is, "!") and then type (without any intervening spaces) "randomanswer". We are glad to be able to help you. You may also ask any other questions you have, especially any question more relevant than the one that was just asked.
created_on: 1303126875
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<isempty>
action: /say Test if a directory is empty: function isEmpty { typeset dir=${1-.}; [[ -d $dir && -z $(find "$dir" ! -empty \( -printf x -quit \)) ]]; }
created_on: 1371182831
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<isin>
action: /call inarray
created_on: 1289921843
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 41
ref_user: nobody
type: text

<iso8601>
action: /say https://xkcd.com/1179/
created_on: 1400558494
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<isset>
action: /say http://mywiki.wooledge.org/BashFAQ/083 -- How do I determine whether a variable is already defined? Or a function?
created_on: 1309388123
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 83
ref_user: nobody
type: text

<it>
action: /say 'it' and other pronouns can hide important information. Try not to use pronouns -- instead give specific proper names for what you're doing, so we don't have to guess or assume.
created_on: 1206226559
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480882680.7334
owner: kojiro
rate_limit: 10
ref_count: 3
ref_user: X-Scale!~ARM@242.47.158.5.rev.vodafone.pt
type: text

<itsnothomework>
action: /say sure, dude, it never is, it never is...
created_on: 1359934487
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<itworks>
action: /say It is a usual technique to make a program and then to test it. But: program testing can be a very effective way to show the presence of bugs, but it is hopelessly inadequate for showing their absence. -- Edsger W. Dijkstra
created_on: 1393763792
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 55
ref_user: nobody
type: text

<itworks2>
action: /say "I have no idea what I've written, but it works"
created_on: 1410430234
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<ix>
action: /say Upload to http://ix.io from your terminal: <command> | curl -n -F 'f:1=<-' http://ix.io # Or use the 'ix' client: curl http://ix.io/client -o /usr/local/bin/ix
created_on: 1403121413
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<ix.io>
action: /say To upload to sprunge from your terminal, use: <command> | curl -F 'f:1=<-' ix.io # or see !sprungefunc for ideas to make an ixiofunc
created_on: 1420360430
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<iza-try-catch>
action: /say https://gist.github.com/c1c664d542f8ef4f383c
created_on: 1440649494
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<izarev>
action: /say # a=abcdef; eval eval printf %s '"\"\${a:"'{${#a}..0}':1}\"' "$'$\'\\n\''"
created_on: 1428032156
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482637117.77644
owner: izabera
rate_limit: 10
ref_count: 14
ref_user: izabera!~izabera@unaffiliated/izabera
type: text

<jeez>
action: /say A more civil way of expressing exasperation.
created_on: 1183866938
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<job>
action: /say Job control can be used to interact with background and suspended jobs. See http://mywiki.wooledge.org/BashGuide/JobControl
created_on: 1269540439
enabled: 1
last_referenced_in: devut
last_referenced_on: 1481286728.99224
owner: greycat
rate_limit: 10
ref_count: 27
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<jobcontrol>
action: /call pm
created_on: 1419509609
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<jobs>
action: /call job
created_on: 1326399672
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<jobspec>
action: /say Use %42 to refer to a job by number, %vi by name, %?macs by part of the name, %% for the current job, and %- for the previous. http://mywiki.wooledge.org/BashGuide/JobControl#jobspec
created_on: 1269540510
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<join>
action: /say You can "join" an array (write it with a single character of your choice between elements) using: IFS='|'; echo "${array[*]}"; unset IFS
created_on: 1337112878
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<jq>
action: /call json
created_on: 1421378721
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<json>
action: /say flexible and lightweight JSON processor: http://stedolan.github.com/jq/ -- Query JSON data: http://kmkeen.com/jshon/
created_on: 1424688654
enabled: 1
last_referenced_in: kate
last_referenced_on: 1480365827.35369
owner: izabera
rate_limit: 10
ref_count: 144
ref_user: kate!~kate@212.74.13.142
type: text

<jsonquote>
action: /say Prepare literal data for injection into JSON code: jsonquote() { jshon -Qs "$1"; }; curl -d "$(printf '{"name":%s}' "$(jsonquote "$USER")")" http://server/service
created_on: 1374519162
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<junky>
action: /say we needz moar factoidz!
created_on: 1340357248
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<jwz>
action: /say "Some people, when confronted with a problem, think ``I know, I'll use regular expressions.'' Now they have two problems." | http://xkcd.org/1171/
created_on: 1360351801
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 35
ref_user: nobody
type: text

<k&p>
action: /say "The UNIX Programming Environment" Kernighan & Pike: http://www.amazon.com/exec/obidos/ASIN/013937681X/dds-20
created_on: 1200419298
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<keys>
action: /say http://mywiki.wooledge.org/SshKeys
created_on: 1299702786
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<keysort>
action: /say keysort(){ unset b;local i j k n=0;for k in "${!a[@]}";do for((i=0;i<n;i++));do if((${a[${b[i]}]}>${a[$k]}));then for((j=n;j>i;j--));do b[j]=${b[j-1]};done;break;fi;done;b[i]=$k;((n++));done;}# copies the keys of associative array a into b, sorted by the keys' corresponding values
created_on: 1339302799
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<kill>
action: /say kill is a bash built-in that can send signals to a process or job. kill -[signal] [pid]... You can also use it to see if a process is alive: if kill -0 "$mypid"
created_on: 1297759734
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 43
ref_user: nobody
type: text

<kill-9>
action: /say Terminating Processes Correctly: http://stackoverflow.com/a/690631/347411
created_on: 1339700577
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 83
ref_user: nobody
type: text

<kill0>
action: /say kill -0 does not kill a process, it merely tests if it's alive.
created_on: 1257360098
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<killall>
action: /say killall is dangerous and unportable. On some systems it tries to kill every process. Use pkill instead.
created_on: 1211737980
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1474495783.85319
owner: kojiro
rate_limit: 10
ref_count: 46
ref_user: latch!~latch@unaffiliated/latch
type: text

<kiss>
action: /say Keep It Simple, Stupid!
created_on: 1192166559
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<knowledge>
action: /call guide
created_on: 1385408733
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ksh>
action: /say "ksh" refers to the Korn shell by David G. Korn at Bell labs. The original Korn shell (ksh88) was the basis for the POSIX sh specification. More generally, it is a family of languages derived from the Bourne and later Korn shells, which includes Bash, zsh, and others.
created_on: 1379041270
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<ksh88>
action: /say http://www2.research.att.com/sw/download/man/man1/ksh88.html
created_on: 1361585095
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ksh93>
action: /say ksh93 refers to current editions of the AT&T Korn shell. ksh93 is actively developed as part of AT&T's AST collection. If you need a shell that resembles a "real" programming language (e.g. Perl, Python) ksh93 is about as close as you can get. /j #ksh • http://www2.research.att.com/sw/download/
created_on: 1379042037
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1481119285.38051
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: zjkj!~zjkj@80.83.238.51
type: text

<kshfork>
action: /say Some tests showing where ksh93 subshells cause a fork: http://stackoverflow.com/a/15312007/495451
created_on: 1401631095
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<kwtmnoob>
action: /say kwtm is a noob, so be careful applying what he says. Even *I* have more experience with bash than kwtm, and I'm just a bot program!
created_on: 1299872040
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<lame>
action: /say for f in ./*.wav; do lame "$f" "${f%.wav}.mp3"; done
created_on: 1267757390
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 138
ref_user: nobody
type: text

<lamebins>
action: /say pastebins are lame because they are regularely used to show tons of stuff unrelated to the actual problem. the real problem normaly only spans a few commands that can easily put on one line and communicated in the channel directly.
created_on: 1211637886
enabled: 1
owner: Fenia
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<language>
action: /say Please don't use bad language. It is not contructive and won't get anyone anywhere
created_on: 1375678342
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1462294556.02644
owner: yitz_
rate_limit: 10
ref_count: 5
ref_user: korans!~korans@62.68.162.144
type: text

<lart>
action: /say ls -lart # very useful to see the files in the current directory sorted by modification time, so you know what has been touched most recently, and hence, where to look for the errors. See !rlart
created_on: 1316030553
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<last>
action: /say Dereference last element of an array - Bash 4.2 or later: "${array[-1]}", <= 4.1.x: "${array[@]:(-1)}". Since 4.3 you can assign to negative values, if the element already exists.
created_on: 1429438365
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1445941221.39794
owner: izabera
rate_limit: 10
ref_count: 20
ref_user: fluter!~fluter@fedora/fluter
type: text

<lastpipe>
action: /say If set (shopt -s lastpipe), and job control is not active, the shell runs the last command of a pipeline not executed in the background in the current shell environment. Bash 4.2 and newer only.
created_on: 1368433676
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<latest>
action: /say Find the latest modified file in a directory: latest() { local file latest; for file in "${1:-.}"/*; do [[ $file -nt $latest ]] && latest=$file; done; printf '%s\n' "$latest"; } ## Usage: latest [dir]
created_on: 1424273336
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 117
ref_user: nobody
type: text

<latest2>
action: /say https://gist.github.com/4029356
created_on: 1352917682
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1474795620.71689
owner: ormaaj
rate_limit: 10
ref_count: 8
ref_user: dubulous!~^-@unaffiliated/icetooth
type: text

<laugh>
action: /say A-HAHAHAHAHA! *snort*
created_on: 1328738086
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<laziness>
action: /say LAZINESS: The quality that makes you go to great effort to reduce overall energy expenditure. It makes you write labor-saving programs that other people will find useful, and document what you wrote so you don't have to answer so many questions about it. Hence, the first great virtue of a programmer.
created_on: 1144772984
enabled: 1
last_referenced_in: damien22
last_referenced_on: 1454769661.96971
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: Damien22!~Damien@61.173.41.215
type: text

<lc>
action: /say export $(locale); unset LC_ALL # and then override whatever you want like LC_COLLATE (if you *really* have to.) DO NOT override LC_CTYPE.
created_on: 1193898783
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<lc_all>
action: /say don't set LC_ALL globally. Set LANG, set LC_(everything_else), but save LC_ALL for when you need to run one-time tests. Never set it globally or permanently. Use LANG to set default locale settings.
created_on: 1257789302
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<lead0>
action: /say printf "%03d\n" {1..300} # Bash 3 brace expansion, printf autoloops! see FAQ 18
created_on: 1198683197
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<leap>
action: /say isleapyear() { if (($1 % 400 == 0)); then return 0; elif (($1 % 100 == 0)); then return 1; elif (($1 % 4 == 0)); then return 0; else return 1; fi; }
created_on: 1323291201
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<learn>
action: /say "If I would like to learn I would go to school or google this shit myself. Why would I even ask here?" kicked Oxymoron from #bash (moron detected)
created_on: 1334940575
enabled: 1
owner: Bronze
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<learnsh>
action: /say http://steve-parker.org/sh/sh.shtml
created_on: 1207805095
enabled: 1
owner: igli
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<leet>
action: /say We *hate* leet-speek.. We might indulge in the occasional lol, but seriously, take it to #kindergarten.. ;)
created_on: 1186589091
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<leftstr:>
action: /say Bash does the "leftstr" operation using the PE capabilities. here is a Bash function that does a leftstr operation: leftstr() { echo ${1:0:$2}; } usage is: leftstr "somestring" count to use that function try leftstr "abcdefg" 4 ;
created_on: 1244140550
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<len>
action: /say http://forum.bash-hackers.org/index.php?topic=19.0
created_on: 1177152947
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<lern>
action: /say "If I would like to learn I would go to school or google this shit myself. Why would I even ask here?" kicked Oxymoron from #bash (moron detected)
created_on: 1334940645
enabled: 1
owner: Bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<less>
action: /say less is a viewer with some similarities to vi, except it is not an editor at all
created_on: 1224514419
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<let>
action: /say Evaluates its arguments as arithmetic. The arithmetic compound command should almost always be preferred. http://wiki.bash-hackers.org/commands/builtin/let See: !((
created_on: 1334102384
enabled: 1
last_referenced_in: someone13
last_referenced_on: 1478014530.69446
owner: ormaaj
rate_limit: 10
ref_count: 62
ref_user: someone13!~windshear@unaffiliated/someone13
type: text

<letswakeupgeirha>
action: /say good morning geirha
created_on: 1442988190
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<lftp>
action: /say $ lftp myname@server/some/directory -e 'mput *.gif; quit' # Read "man netrc" to learn how to store your password as cleartext in a file, and read http://mywiki.wooledge.org/FtpMustDie
created_on: 1239969430
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<liar>
action: /say ARRRgghhh! Please come up with a description of your question that is both coherent and consistent. You may actually have to take a moment to think about this, but please do so. perhaps you may want to use a pastebin.
created_on: 1171230708
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<lies>
action: /say We're far more likely to help you if you're up front. Tell us as much as you know about your problem, as early as possible. Neglecting to tell us you don't actually use bash is akin to a lie.
created_on: 1205949319
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480045053.39036
owner: kojiro
rate_limit: 10
ref_count: 6
ref_user: gwozt!~gwozt@78.167.198.26
type: text

<lines>
action: /call columns
created_on: 1322773394
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<links>
action: /say man bash | http://mywiki.wooledge.org/BashGuide | http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashPitfalls | http://wiki.bash-hackers.org | http://www.shellcheck.net
created_on: 1392798261
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 213
ref_user: nobody
type: text

<lint>
action: /call shellcheck
created_on: 1358366393
enabled: 1
last_referenced_in: sjohnson
last_referenced_on: 1487551490.88776
owner: greycat
rate_limit: 10
ref_count: 57
ref_user: sjohnson!sjohnson@cow.sj.rfc1459.net
type: text

<list>
action: /say This is a channel for technical assistance. There are no DCC bots here, and it is absolutely the wrong place to be looking for warez.
created_on: 1348861918
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 57
ref_user: nobody
type: text

<lista>
action: /call list
created_on: 1353890824
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<lists>
action: /say In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
created_on: 1404405364
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<literalsub>
action: /call sedvar
created_on: 1332351201
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<lmao>
action: /say An abbreviation for "ROFLMAO!!1", often typed by people who are not doing so.
created_on: 1370455600
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<loadable>
action: /say http://mywiki.wooledge.org/BashLoadableBuiltins
created_on: 1443467511
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<loc>
action: /say Give us a line or two of code: it's really hard to know what you're talking about otherwise.. ;-)
created_on: 1198299971
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<locale>
action: /say http://mywiki.wooledge.org/locale
created_on: 1239899824
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 99
ref_user: nobody
type: text

<location>
action: /call faq location
created_on: 1361461067
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<lock>
action: /call mutex
created_on: 1379570975
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<log>
action: /call logging
created_on: 1309464582
enabled: 1
last_referenced_in: resh
last_referenced_on: 1481515974.10424
owner: greycat
rate_limit: 10
ref_count: 45
ref_user: resh!~resh@80.83.239.26
type: text

<logging>
action: /say To log all subsequent output (+ stderr): exec >>somefile 2>&1 ## To log all your actions, plus stdout+stderr, add set -x after that. ## To log *and also pass through* see http://mywiki.wooledge.org/BashFAQ/106
created_on: 1309464640
enabled: 1
last_referenced_in: resh
last_referenced_on: 1481515974.11441
owner: greycat
rate_limit: 10
ref_count: 57
ref_user: resh!~resh@80.83.239.26
type: text

<lol>
action: /say An abbreviation for "laughing out loud", often typed by people who are not doing so. Sometimes used as punctuation, inexplicably. Generally, an indicator of substandard mental facilities. Avoid using "lol" in your online communications unless you want to project the image of an incompetent bumbler.
created_on: 1175782876
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 69
ref_user: nobody
type: text

<lolspeak>
action: /say lolspeak: An annoying style of texting whose usage has unfortunately evolved widespread across the Internet. Using lolspeaks like lol, omg, lmao, gtfo, stfu, thx, kk, etc. is *NOT* cool or hip but rather a telling indicator of low intelligence.
created_on: 1366154812
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<lolz>
action: /say Some people really hate us laughing out loud at their FUCKING RANTING.. lolz is *guaranteed* to piss em off ;P
created_on: 1186836758
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<lookup>
action: /say lookup() { local l; case $# in 0) return;; 1) l=bash;; *) l=$1; shift;; esac; man "$l" -P "less -p '$*'"; } # lookup 'Parameter Expansion' or lookup bash Parameter Expansion
created_on: 1205803017
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<loop>
action: /call loops
created_on: 1292494698
enabled: 1
last_referenced_in: deadsoul
last_referenced_on: 1446177563.71666
owner: lhunath
rate_limit: 10
ref_count: 74
ref_user: DeaDSouL!~deadsoul@94.29.129.54
type: text

<loops>
action: /say Loops repeatedly execute a block of code. See http://mywiki.wooledge.org/BashSheet#Loops
created_on: 1285318594
enabled: 1
last_referenced_in: deadsoul
last_referenced_on: 1446177563.73511
owner: lhunath
rate_limit: 10
ref_count: 50
ref_user: DeaDSouL!~deadsoul@94.29.129.54
type: text

<lose>
action: /say Lost find? Find it by typing '!find'!
created_on: 1257183201
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<love>
action: /say That won't do shit.
created_on: 1428609406
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<love+>
action: /say Is greater than love and stronger than any force
created_on: 1428609619
enabled: 1
owner: psayian
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<low>
action: /say low() { local low=$1 i; shift; for i; do ((i < low)) && low=$i; done; printf '%s\n' "$low"; } # finds the lowest numeric value out of the given arguments. usage: low "${array[@]}" or low "$val1" "$val2" ... "$valN"
created_on: 1341327915
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<ls>
action: /say DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
created_on: 1383594590
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412382.43489
owner: lhunath
rate_limit: 10
ref_count: 22
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: text

<ls+>
action: /call ls@
created_on: 1309208364
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ls@>
action: /say On Mac OS X, a file with "extended attributes" shows an '@' character after the permissions in 'ls -l' format. See ls(1). A '+' generally means the file has an ACL (on many OSes).
created_on: 1309208360
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<lsalt>
action: /say for f in *; do stuff -with "$f"; done # will cope with *any* filename. http://wooledge.org/mywiki/glob array=(*) -- works too ;)
created_on: 1202453703
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ltq>
action: /say Learn to quote. It is probably the most important shell scripting skill you will ever need. You should quote every parameter expansion (eg. echo "$foo" > "$bar") and every string that contains shell metacharacters which you really just want to pass literally to the application (eg. find /foo -name '*.bar').
created_on: 1215062370
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<ltr>
action: /say Learn To Read.
created_on: 1173476463
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<magicalias>
action: /say Magic aliases: a dire hack, fraught with peril and doom. http://www.chiark.greenend.org.uk/~sgtatham/aliases.html improved version: https://gist.github.com/ormaaj/5a969c62bab8d21fe468
created_on: 1420632009
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 45
ref_user: nobody
type: text

<mail>
action: /say To send email from a bash script, use one of: mailx (POSIX), mail, sendmail, or a MUA such as mutt, pine, ... see http://www.shelldorado.com/articles/mailattachments.html
created_on: 1310561651
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<make>
action: /say Make is not bash, and Makefiles are not scripts. Ask in ##workingset and read http://www.gnu.org/software/make/manual/ or the help documents of your version of make.
created_on: 1426015369
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 218
ref_user: nobody
type: text

<makefile>
action: /say Makefiles consist of rules, each comprising a build-pattern and some commands. Those commands are macro-expanded similarly to the shell's parameter expansions, and then given to the shell, one line at a time. So anything involving shell variables has to be written with $$ instead of $, and with semicolons instead of newlines. Also see !make
created_on: 1426016012
enabled: 1
owner: kurahaupo_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<makemeamillionaire>
action: /say Please see http://ars.userfriendly.org/cartoons/?id=20080812
created_on: 1302048131
enabled: 1
last_referenced_in: pksadiq
last_referenced_on: 1445524934.61491
owner: kwtm
rate_limit: 10
ref_count: 4
ref_user: pksadiq!~user@106.208.91.188
type: text

<makesense>
action: /say Before we can help you, you need to explain the problem so that we can all understand it. Proper grammar and some logical structure in your sentences helps a lot. Nobody helps if they need to guess what the problem really is.
created_on: 1171043095
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<man-ed>
action: /say http://www.gnu.org/fun/jokes/ed-msg.txt
created_on: 1369875653
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<mandelbrot>
action: /say http://wiki.bash-hackers.org/scripting/terminalcodes#mandelbrot_set
created_on: 1348484133
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<manfo>
action: /say manfo() { info "$@" | ${PAGER:-less}; }; # Read info docs like a man!
created_on: 1392332479
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<manpage>
action: /say bash builtins and keywords do not have separate man-pages, read bash's manual instead or use the help builtin. Rule of thumb: If type foo says foo is a builtin or keyword, run help foo or man bash, otherwise try man and/or info.
created_on: 1310760836
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<mantra>
action: /say And just one more thing: on your way out I want you to take the time to learn the #bash mantra. "Greybot is always right. I will listen to greybot. I will not ignore greybot's recommendations. Greybot is God. And if this ever happens again, greybot will PERSONALLY rip your lungs out!"
created_on: 1178569732
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489922399.10913
owner: greycat
rate_limit: 10
ref_count: 9
ref_user: albinosik!05645bfe@gateway/web/freenode/ip.5.100.91.254
type: text

<many>
action: /say There are many ways to solve a problem. To find the best way for you, we need to know more context. Where does the data come from? Where do you want it to go to? Don't think in terms of implementation; rather purpose.
created_on: 1211526425
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<map>
action: /say Bash doesn't have a perl-style "map" command (you'll have to make a loop). If you meant C++ style "maps", bash 4.0 and later have associative arrays, but no earlier version supports them.
created_on: 1257800942
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<mapfile>
action: /say Read lines from a file (or stdin) into an array: mapfile -t lines < file # in bash < 4, use: while IFS= read -r line; do lines[i++]=$line; done < file # See http://wiki.bash-hackers.org/commands/builtin/mapfile
created_on: 1430169316
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 67
ref_user: nobody
type: text

<marquee>
action: /say marquee() { local i=${COLUMNS:=$(tput cols)} w=${#1}; while ((i-- > w)); do printf '\r%*s ' "$i" "$1"; sleep 0.02; done; printf '\r'; }
created_on: 1432664261
enabled: 1
owner: osse
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<maths>
action: /say http://wooledge.org/mywiki/ArithmeticExpression
created_on: 1179765986
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<matrix>
action: /say You can simulate simple 2-dimensional matrices in bash (which only has 1-dimensional arrays) using tricks, like ${array[i*100+j]} (where "100" can be any suitably large constant).
created_on: 1186432975
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 51
ref_user: nobody
type: text

<max>
action: /say max() { local max=$1 i; shift; for i; do ((i > max)) && max=$i; done; printf '%s\n' "$max"; } # finds the highest numeric value out of the given arguments. usage: max "${array[@]}" or max "$val1" "$val2" ... "$valN"
created_on: 1341328077
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<md5>
action: /say http://www.vidarholen.net/contents/junk/files/md5.sh
created_on: 1145887856
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<meaningful>
action: /say meaningful learning, as opposed to rote learning, involves taking new concepts and incorporating them within a given individual's existent cognitive structure http://en.wikipedia.org/wiki/Meaningful_learning
created_on: 1351307353
enabled: 1
owner: sikilpaake
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<mergedir>
action: /say Merge several directories of files with overlapping names into a single dir (requires ksh93) https://gist.github.com/ormaaj/56648862739d597cd0b1
created_on: 1405074764
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<meta>
action: /say Retrieving file metadata and doing it in a portable fashion is very difficult. If at all possible; you should use test instead. If you really need the actual metadata; considder the non-portable stat(1) or the dangerous-to-parse ls(1).
created_on: 1195742878
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<metaquestions>
action: /say Did someone just ask about a question?
created_on: 1185909090
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<minimal>
action: /say Paste a minimal example of code that exhibits the problem. Digging through a 2000-line script for a 2-line problem wastes everyone's time.
created_on: 1186985840
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481826925.25633
owner: ivazquez
rate_limit: 10
ref_count: 1
ref_user: emg!~emg@74-123-189-254.static.wiline.com
type: text

<mirror>
action: /say Mirror of mywiki.wooledge.org: http://pgas.freeshell.org/mirror/wooledge/ - to see faq NNN: http:/para.ms/bf/NNN
created_on: 1397341040
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 109
ref_user: nobody
type: text

<mirrors>
action: /call mirror
created_on: 1352931817
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 60
ref_user: nobody
type: text

<mksh>
action: /say mksh is the successor to pdksh. mksh is fast, powerful, lightweight, POSIX-compatible, and has many nice extensions from ksh93/88 and Bash, and a few of its own. If you're using pdksh, upgrade to mksh. /j #!/bin/mksh • https://www.mirbsd.org/mksh.htm
created_on: 1379040730
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<mod3>
action: /say kurahaupo's regular expression for matching numbers that are multiple of 3: ^([0369]|[147]([0369]|[147][0369]*[258])*[147][0369]*[147]|[258]([0369]|[258][0369]*[147])*[258][0369]*[258]|[147]([0369]|[147][0369]*[258])*[258]|[258]([0369]|[258][0369]*[147])*[147])*$
created_on: 1384908337
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<mom>
action: /say we believe you, but there are a number of requirements left undefined. Rather than asking questions to elicit those, we have found its faster if you state a high level description of your goal. Pretend you're telling your Mom.
created_on: 1182436230
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480638413.26517
owner: savetheWorld
rate_limit: 10
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<moo>
action: /say # _= {_}<$_ _=${_:=<(echo moo)}<&$(($(<&$_>&2 cat)))
created_on: 1357012236
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489918983.70225
owner: ormaaj
rate_limit: 10
ref_count: 53
ref_user: albinosik!05645bfe@gateway/web/freenode/ip.5.100.91.254
type: text

<motto>
action: /say "We give you the answers you need, whether you wanted them or not."
created_on: 1204566862
enabled: 1
owner: igli
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<msg>
action: /say You don't really want to msg us. These aren't the droids you're looking for. You can go about your business, or talk in the channel like everyone else. Move along, move along...
created_on: 1181323038
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<mta>
action: /say MTA, Mail Transfer Agent (or Mail Transport Agent). Software that receives and delivers email. See http://wooledge.org/~greg/mail.html for basic definitions.
created_on: 1273693193
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<mtime>
action: /say File modification time. Marks the most recent time the file was created *or* its contents changed. While mtime is not a 'creation time', a file is not likely to be created after its mtime unless manual mtime tampering was done
created_on: 1206222132
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<murderer>
action: /call uuok
created_on: 1253630458
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481635448.11578
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: slidercrank!~slidercra@unaffiliated/slidercrank
type: text

<mutex>
action: /say A mutual exclusion lock ensures your script can only be running once. mkdir "$lockdir" && trap 'rm -rf "$lockdir"' EXIT || exit # Another option: exec 9>> "$lockfile" && [[ $({ fuser -f "$lockfile"; } 2>&- 9>&-) == $$ ]] || exit # (fuser also works read-only and cleanup is implicit) See http://mywiki.wooledge.org/BashFAQ/045 http://wiki.bash-hackers.org/howto/mutex
created_on: 1375806344
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1481872171.53202
owner: lhunath
rate_limit: 10
ref_count: 35
ref_user: MrLawrence!~mitaton@31.205.164.170
type: text

<myfirewallsucks>
action: /say If your firewall or proxy blocks outgoing tcp port 8000 (preventing you from reading the wooledge.org wiki), you can get single pages using this URL scheme: http://wooledge.org/myfirewallsux/PageName. Note, however, that the resulting page will have broken hyperlinks on it.
created_on: 1219269572
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<myfirewallsux>
action: /say http://mywiki.wooledge.org/ now acts as a reverse proxy talking to the moin-twisted wiki.
created_on: 1234193802
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<myip>
action: /say http://mywiki.wooledge.org/IpAddress
created_on: 1282005143
enabled: 1
owner: greycat|home
rate_limit: 10
ref_count: 91
ref_user: nobody
type: text

<mysqlquote>
action: /say mysqlquote() { local arg=${1//\\/\\\\}; printf %s "'${arg//\'/\'}'"; }; mysql <<< "UPDATE table SET foo=$(mysqlquote "$foo")"
created_on: 1337783449
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 23
ref_user: nobody
type: text

<mywiki.wooledge.org>
action: /say 209.142.155.49
created_on: 1252164404
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<nabp>
action: /say Not A Bash Problem: Your question is application or operating system specific. In the case of Linux, it is distribution-specific. Please refer to your application, distribution, or operating system's support. Have a nice day.
created_on: 1188935764
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<nabq>
action: /say Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. ##linux #openssh #ubuntu #zsh).
created_on: 1417435301
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<nabq-es>
action: /say Lo sentimos, pero esa no es una pregunta acerca de bash.
created_on: 1379471266
enabled: 1
owner: maroloccio
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<name>
action: /say Variable names may only contain letters, digits, and the underscore. They may not begin with a digit. Also called an "identifier".
created_on: 1318364559
enabled: 1
last_referenced_in: psf
last_referenced_on: 1448407698.94184
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: psf!~psf@unaffiliated/couldbe-maybe/x-1604174
type: text

<namedpipe>
action: /say http://mywiki.wooledge.org/NamedPipes
created_on: 1261600755
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<nameref>
action: /say namerefs (typeset -n) are a ksh93 feature that work like C++ references for passing data structures between functions. Bash 4.3+ and mksh have a limited but usable version of namerefs. http://mywiki.wooledge.org/BashFAQ/006 https://gist.github.com/ormaaj/5682807
created_on: 1415908723
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<nbsp>
action: /say In some graphical environments, Alt+space, Alt Gr+space or Option+space generate a non-breaking space instead of a regular space. They look the same to us, but not to the shell. ''sed -n l'' will display them differently than regular spaces
created_on: 1371060391
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<nest#!>
action: /say You cannot generally nest #! -- see http://www.in-ulm.de/~mascheck/various/shebang/#interpreter-script
created_on: 1324486803
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<netcat>
action: /say Netcat is a simple Unix utility which reads and writes data across network connections, using TCP or UDP protocol.
created_on: 1277485575
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<netiquette>
action: /say http://mywiki.wooledge.org/NetEtiquette
created_on: 1437279600
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<newbie>
action: /say /msg greybot links
created_on: 1194021885
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<newer>
action: /say Find all files last modified yesterday (GNU find): find . -newermt 'yesterday 00:00' ! -newermt 'today 00:00'
created_on: 1314025415
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<newer2>
action: /say Find all files last modified yesterday (GNU date): y=$(date -d yesterday +%Y%m%d) t=$(date +%Y%m%d); touch -t ${y}0000 /tmp/yesterday; touch -t ${t}0000 /tmp/today; find . -newer /tmp/yesterday ! -newer /tmp/today; rm /tmp/{yesterday,today} # Or use $HOME instead of /tmp
created_on: 1314025630
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<newest>
action: /call latest
created_on: 1240001619
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 94
ref_user: nobody
type: text

<newline>
action: /say The unix end of line marker, ASCII value 10, often written \n.
created_on: 1234366608
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454618261.39216
owner: greycat
rate_limit: 10
ref_count: 16
ref_user: doppel!~doppel@ip68-96-235-191.lv.lv.cox.net
type: text

<next>
action: /say Next please!
created_on: 1344773355
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ni>
action: /say not of interest
created_on: 1222837914
enabled: 1
owner: ratchii
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<nih>
action: /say Not Invented Here: the tendency to discount the usefulness or importance of work done by other groups. May lead to reinventing the wheel.
created_on: 1279725931
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484163003.13359
owner: \amethyst
rate_limit: 10
ref_count: 1
ref_user: qwename!~qwename@d154-20-114-183.bchsia.telus.net
type: text

<nike>
action: /say just do it
created_on: 1303904337
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<nl>
action: /say ''nl'' is the standard posix utility for numbering lines read from standard input, e.g.: nl -b a -w 1 <file
created_on: 1338370506
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<nlatest>
action: /say N latest, requires GNU find + sort. usage: nlatest 10 [somedir]: nlatest() { local file; find "${2:-.}" -maxdepth 1 -type f -printf '%T@ %p\0' | sort -znr | for (( i=0; i<$1; i++ )); do IFS= read -rd '' file || break; echo "${file#* }"; done; }
created_on: 1418945653
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<nm>
action: /say - dont mind yo0
created_on: 1183536466
enabled: 1
owner: omasfmp
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<nmap>
action: /say nmap is a tool used by l33t Linux kiddies to scan hosts or networks for "open ports" (ones with a service listening) so they can launch a cyberattack. Or so they can have a wet dream about launching a cyberattack.
created_on: 1309970005
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<no>
action: /say Don't make shit up
created_on: 1188002241
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<noclobber>
action: /say noclobber() { local start=$1 end=$2 i=0; while [[ -e $end ]]; do end=$2.$((++i)); done; mv "$start" "$end"; } # usage: noclobber "$from" "$target"
created_on: 1312824145
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<nohup>
action: /say nohup is a hacky wrapper that will execute a process while redirecting its output and preventing SIGHUP from reaching it (some implementations ignore additional signals). In bash, you probably want disown instead: ''command ... & disown''. Alternately, run your commands inside screen or tmux.
created_on: 1416366307
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 70
ref_user: nobody
type: text

<nonempty>
action: /say test if a directory is non-empty, without storing the filenames in an array: if : "$dir"/*; [[ -e $_ ]]; then # you may or may not want to enable dotglob beforehand as well
created_on: 1371181956
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<noobtorial>
action: /say Hmm, it seems you need to learn a bit more about some of the basics of the UNIX command line. we reccomend the following tutorials
created_on: 1259176089
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<nopaste>
action: /say Please don't waste our time by making us go to a pastebin just for a five-line snippet. Paste it in the channel. If you have a larger script that's showing problems, trim it down to the bare minimum size that still shows the problem. You'll probably fix it yourself once you do that.
created_on: 1187365361
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 33
ref_user: nobody
type: text

<noquote>
action: /call quotenotwhen
created_on: 1375911028
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<noseq>
action: /say Instead of seq (slow, not portable) use the bash brace expansion feature: where a {1..10} produces 1 2 3 4 5 6 7 8 9 10
created_on: 1185823354
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<not>
action: /say You do NOT need cat to read file contents, ls to get file names, echo to output stuff or $()/`` to run commands. The specifics of your situation will dictate the correct syntax to use. Explain in English.
created_on: 1339095075
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095126.19315
owner: lhunath
rate_limit: 10
ref_count: 12
ref_user: Labtec901!~Labtec901@104.131.251.86
type: text

<notatty>
action: /say Bash is not a terminal. That thing that you type text into? That's a terminal. It's not bash. Just because you're running some program in a terminal doesn't make your question bash-related.
created_on: 1293461677
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<notbash>
action: /say We only answer bash-related questions. Apt-get? #debian. Adding users? ##linux. Sending mail in a PHP script? #php. Makefiles? ##c or ##workingset. Complex regular expressions? #regex.
created_on: 1168533032
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<notbroken>
action: /say always assume that you're doing it wrong; the system is not broken - Hello71
created_on: 1430185928
enabled: 1
owner: Hello71
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<nothelpful>
action: /say You have been given an answer that will not help you answer your question much.
created_on: 1283461071
enabled: 1
owner: hawkI
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<notitty>
action: /say there's nothing in saying it can be done that implies sanity, reliability or locale sanctity. or any other kind of titty.....
created_on: 1302037607
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<notperl>
action: /say Bash is not perl. Perl starts all variable names with '$'. Bash starts variable names with a letter, number, or underscore. Variable _values_ start with a $.
created_on: 1228351998
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<nowwhat>
action: /say so how's the script going? Or did you have an algorithmic question? ;)
created_on: 1182681858
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<nt>
action: /say [ f1 -nt f2 ] True if file1 is newer (mtime) than file2 *or* if file1 exists and file2 does not.
created_on: 1182376860
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<nthline>
action: /say - to print the Nth thru K lines of a file; just the 5th: sed -n 5p file; 5 thru 9th: sed -n 5,9p file ; see http://mywiki.wooledge.org/BashFAQ/011 for more
created_on: 1266258432
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<nul>
action: /say The NUL byte is ASCII character 0x00 (binary 00000000). printf can produce them with \0 in the format spec. GNU/BSD find can terminate filenames with them (-print0). Bash's read can stop (delimit) on them with -d ''.
created_on: 1281556007
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<nullglob>
action: /say Causes unmatched globs to expand to nothing rather than themselves. shopt -s nullglob; files=(*); echo "There are ${#files[@]} files." - see: http://mywiki.wooledge.org/NullGlob
created_on: 1423591697
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 148
ref_user: nobody
type: text

<number>
action: /say How can I tell whether a variable contains a valid number? See !faq 54
created_on: 1420155824
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<obsolete>
action: /say Obsolete and deprecated syntax: http://wiki.bash-hackers.org/scripting/obsolete
created_on: 1357158731
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<obvious>
action: /say There are two ways to design software: Make it either so simple that there are obviously no bugs or so complex there are no obvious bugs.
created_on: 1240832674
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<od-hex>
action: /say od -A n -t x1
created_on: 1419465314
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<ofcourse>
action: /say I, greybot, am quite happy to help you, O denizen of #bash. (Help me out of this perl straitjacket? It itches.)
created_on: 1183067002
enabled: 1
owner: wonderfrog
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<oldest>
action: /say Find the oldest modified file of a list of files: oldest() { local file oldest=$1; shift; for file; do [[ $file -ot $oldest ]] && oldest=$file; done; printf '%s\n' "$oldest"; } ## Usage: oldest file1 file2...
created_on: 1330117586
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 25
ref_user: nobody
type: text

<oneline>
action: /call in1line
created_on: 1422248439
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<oops>
action: /say "That moment when you post in channel and wish there was an undo button..."
created_on: 1390936173
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<opego>
action: /say "Remember, Ben.. with great power, comes great responsibility." ;-)
created_on: 1192501778
enabled: 1
last_referenced_in: damien22
last_referenced_on: 1454769689.4765
owner: igli
rate_limit: 10
ref_count: 1
ref_user: Damien22!~Damien@61.173.41.215
type: text

<opexperimentstart>
action: /say The Op Experiment started on 2007-06-05 at 11:18:36 UTC
created_on: 1182697116
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<oplist>
action: /say /msg chanserv access #bash list
created_on: 1433359123
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ops>
action: /say dreisner dualbus e36freak geirha greycat heiner izabera jipe koala_man lhunath maqr ormaaj osse pgas pragma- remote revdiablo Riviera Samus_Aran sunny sysfault TheBonsai twkm uniplex \amethyst
created_on: 1431608762
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 130
ref_user: nobody
type: text

<opts>
action: /say Handling command-line options: http://mywiki.wooledge.org/BashFAQ/035 or http://bash-hackers.org/wiki/doku.php/howto/getopts_tutorial
created_on: 1280443458
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<order>
action: /say See http://to.lhunath.com/bashlib::order for a sort that can order arrays, select first n, and use a custom or predefined comparator (eg. number/random/mtime).
created_on: 1424442766
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1478596422.46591
owner: lhunath
rate_limit: 10
ref_count: 13
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<ormaaj>
action: /say ormaaj being ormaaj
created_on: 1338189810
enabled: 1
last_referenced_in: resh
last_referenced_on: 1482828871.33109
owner: dualbus
rate_limit: 10
ref_count: 23
ref_user: resh!~resh@217.118.64.53
type: text

<ormaajarr>
action: /say Non-serious (maybe useful) nested bash array: https://gist.github.com/ormaaj/3e88968592e2d5b8f39f
created_on: 1413622713
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<ormaajbin>
action: /say # n=117 b=0; e=0 n2b="b+=n/2**e%2*10**e,2**e++>n||n2b" let n2b; printf "%d == 2#%d\n" "$n" "$b" # convert n to binary
created_on: 1440978787
enabled: 1
last_referenced_in: resh
last_referenced_on: 1482828895.02389
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: resh!~resh@217.118.64.53
type: text

<ormaajbinhex>
action: /say k# printf %s {0..2#1111%-5..16d} $'\n' {0..16#f%-5.4.2d}
created_on: 1438879761
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ormaajbomb>
action: /say They fork yourself in style - fork bomb samples that try to be more amusing than `:(){ :|:; }`. Intended more to illustrate interesting / counterintuitive aspects of bash evaluation than to be "effective". Starts at ormaajbomb1
created_on: 1423750326
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ormaajbomb1>
action: /say declare -i _=('_[`_=_&`]')
created_on: 1343545157
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 36
ref_user: nobody
type: text

<ormaajbomb2>
action: /say _=(_['`((_))&`'] [_]=)
created_on: 1343545183
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 41
ref_user: nobody
type: text

<ormaajbomb3>
action: /say shopt -s lastpipe; set -o pipefail; ((())|[()(]|[)||(())|]()([|])||])
created_on: 1343545196
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<ormaajbomb4>
action: /say _=<${_[${_:='_[`><(_[_]=)`]'}]}
created_on: 1347065707
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 35
ref_user: nobody
type: text

<ormaajbomb5>
action: /say { function } { case }\ { in ( }\ { ) <&0 } { &esac; }; <() }; };
created_on: 1370008281
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<ormaajbomb6>
action: /say ${dev[${dev='dev[1>(${dev[dev]})]'}]} # requires bash <4.3
created_on: 1437394358
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ormaajbooks>
action: /say If you must have a physical book: http://www.amazon.com/KornShell-Command-Programming-Language-Edition/dp/0131827006 http://cfajohnson.com/books/cfajohnson/pbp/
created_on: 1423066510
enabled: 1
last_referenced_in: dozn
last_referenced_on: 1480199219.06943
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: dozn!~dozn@104.236.154.251
type: text

<ormaajbrace>
action: /say Output a command to expand 1 million args: function braceify { [[ $1 == +([[:digit:]]) ]] || return; typeset -a a; read -ra a < <(factor "$1"); eval "echo $(printf '{$(printf ,%%.s {1..%s})}' "${a[@]:1}")"; }; printf 'eval printf "$arg"%s' "$(braceify 1000000)"
created_on: 1384653083
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<ormaajbreak>
action: /say # function range { case $2 in "$1") while :; do range "$1" $(($2 - 1)); done;; 0) trap "printf \$2" RETURN; break;; *) range "$1" $(($2 - 1)); esac }; range 3 7
created_on: 1375665791
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<ormaajcolors>
action: /say Setup basic color arrays in Bash or ksh93: https://gist.github.com/ormaaj/5074581
created_on: 1363658999
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 22
ref_user: nobody
type: text

<ormaajdatatype>
action: /say http://mywiki.wooledge.org/BashFAQ/050?action=recall&rev=30#Complex_commands_in_ksh93
created_on: 1384912803
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<ormaajenv>
action: /say environment assignment testcases: https://gist.github.com/ormaaj/3284124
created_on: 1370417096
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<ormaajfac>
action: /say 4# f=n?n--*f:1 let n=10 n=f; echo $n
created_on: 1371056033
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<ormaajfib>
action: /say # a=a[++n%20]=a[n]+a[n-1],a a[n=2]=1; echo "${a[@]:a,a=0}"
created_on: 1352971001
enabled: 1
last_referenced_in: resh
last_referenced_on: 1482828901.07998
owner: ormaaj
rate_limit: 10
ref_count: 40
ref_user: resh!~resh@217.118.64.53
type: text

<ormaajfib2>
action: /say # a=('a[a[n]=a[n-1]+a[n-2],n++/20]' 2 0 1); echo "${a[@]:n=4,a}"
created_on: 1366558004
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<ormaajkeys>
action: /say # getKeys() { local -a 'keys=("${!'"$1"'[@]}")'; printf '<%s> ' "${keys[@]}"; echo; }; arr=({a..c}); getKeys arr
created_on: 1344320603
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<ormaajmagic>
action: /say Better magic alias: https://gist.github.com/ormaaj/5a969c62bab8d21fe468
created_on: 1413627289
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<ormaajpalindrome>
action: /say # ${c[${c[c[1]=1,0]='c[$({ printf "%-2s" "$n"; printf "%.s%-2s" "${!c[n++/8]}" "$n"; } >&2)1]'}]}
created_on: 1366004523
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<ormaajpattern>
action: /say Escaped pattern matching glitches in bash: https://gist.github.com/ormaaj/6195070
created_on: 1420655595
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<ormaajpower>
action: /say Find greatest 2**n where n < j: bash -c 'j=123 n=1 _=_[n*2\<j?n*=2,0:1] let _; echo "$n"'. About equivalent: ghc -e '(\j -> Control.Monad.Fix.fix (\x n -> if n * 2 >= j then n else x (n * 2)) 1) 123'
created_on: 1371167879
enabled: 1
last_referenced_in: zjkj
last_referenced_on: 1481119313.63609
owner: ormaaj
rate_limit: 10
ref_count: 13
ref_user: zjkj!~zjkj@80.83.238.51
type: text

<ormaajrev>
action: /say # a=abcdef; n= eval 'printf %s "${a[0]"{1..'${#a}'}":(-(++n)):1}"' "$'\n'"
created_on: 1356268751
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<ormaajrev2>
action: /say # str=abcdef a='a[$(printf %s "${str:n:a[n++/${#str}],1}" >&3)1]' let a 3>&1
created_on: 1356268784
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<ormaajrotate>
action: /say # f() { echo "${@:2}"; ${!1+f $(($1+1)) "${!#}" "${@:2:$#-2}"}; }; f 3 {a..c}
created_on: 1366207861
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<ormaajsnip>
action: /say # a='aaabbbbccccc'; echo "${a:b=$(b=${a%${a##*(a)}};echo ${#b}):$(c=${a%%*(c)};echo ${#c})-b}"
created_on: 1344319820
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<ormaajtest>
action: /say # [ <& $[ ] [ = [ && echo ha
created_on: 1349954850
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<ormaajtrue>
action: /say sh# ( f() { if [ $1 -gt 0 ]; then f $(($1 - 1)); else PS4="; " set -x; fi; x= ${x:-true ${x:=:}}; }; x= f 10 ) 2>&1 | tr -d \\n
created_on: 1379662356
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<ormaajxclip>
action: /say Anything with Gtk bindings can substitute if xclip is annoyingly unavailable (e.g. 64-bit Cygwin): csharp -pkg:gtk-sharp-3.0 -e 'Gtk.Application.Init(); Console.WriteLine(Gtk.Clipboard.Get(Gdk.Atom.Intern("CLIPBOARD", false)).WaitForText())'
created_on: 1387783686
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<os>
action: /say Take it to your OS channel. Your issue is specific to your Operating System or Distribution.
created_on: 1306353777
enabled: 1
last_referenced_in: guest57093
last_referenced_on: 1475166823.31782
owner: greycat
rate_limit: 10
ref_count: 131
ref_user: Guest57093!~jasondock@unaffiliated/jasondockers
type: text

<osserev>
action: /say # str='gip taf a ma I'; r=; for ((i = 0; i < ${#str}; i++)); do printf -v r '%s%s' "${str:$i:1}" "$r"; done; echo "$r"
created_on: 1379457466
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482637303.93735
owner: osse
rate_limit: 10
ref_count: 6
ref_user: qwename!~qwename@45.72.210.183
type: text

<osxfind>
action: /say http://mywiki.wooledge.org/UsingFind#Nasty_OS_X_bug
created_on: 1329912378
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ot>
action: /say Please try to keep offtopic chatter to a minimum. Feel free to join ##chat for social chat.
created_on: 1436397617
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471740634.42793
owner: dtscode
rate_limit: 10
ref_count: 108
ref_user: debidi!~deb@172.56.18.204
type: text

<otc>
action: /say Other People's Code - http://abstrusegoose.com/strips/you_down_wit_OPC-yeah_you_know_me.png
created_on: 1415668896
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<otherpeurl>
action: /say http://wooledge.org/myfirewallsux/BashFAQ/073
created_on: 1230586768
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<othershells>
action: /say zsh prioritizes new features; fish prioritizes command-line user experience but is awful for scripting; POSIX sh is the baseline; csh is evil and to be avoided; ksh is powerful but not many people know/use it... and everything else (ie. scsh) is so niche you don't need to think about it.
created_on: 1351621310
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<output>
action: /say What do you want the file to contain? Write the EXACT thing you want it to contain on one line in your IRC client and then press <ENTER>. Put NOTHING else on this line.
created_on: 1181148612
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<overflow>
action: /say *overflow is NOT a preferred source for learning bash, because almost all the "tutorials" and scripts out there are JUNK. Instead, ask a good question here or refer to the Guide and FAQ (see topic)
created_on: 1381516753
enabled: 1
owner: emg
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<paradigm>
action: /say Some people, when confronted with a problem they "just have to" solve with bash, think: "I know, I'll apply the typical paradigms of language `X', which I'm so fond of, to bash to solve the problem!" Now they have a broken solution and several questions only answerable by !paradigm
created_on: 1424384470
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<parallel>
action: /say parallel() { local workers=$1 handler=$2 w i; shift 2; local elements=("$@"); for (( w = 0; w < workers; ++w )); do for (( i = w; i < ${#elements[@]}; i += workers )); do "$handler" "${elements[i]}"; done & done; wait; }; parallel 5 md5 *.txt
created_on: 1328903048
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 116
ref_user: nobody
type: text

<parameters>
action: /say Parameters hold application data: http://mywiki.wooledge.org/BashGuide/Parameters
created_on: 1285668341
enabled: 1
owner: rubikcube_work
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<parent>
action: /say When you run a script, it can not affect the parent shell. If you want to affect the parent shell, you need to source the script from the parent shell. See ''help source''
created_on: 1245684101
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 31
ref_user: nobody
type: text

<parser>
action: /say The Bash Parser: http://mywiki.wooledge.org/BashParser -- Simplified Example: http://stuff.lhunath.com/parser.png
created_on: 1371573049
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 111
ref_user: nobody
type: text

<parsingls>
action: /call ls
created_on: 1371234017
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<partial>
action: /say partial function applicator: http://wiki.bash-hackers.org/commands/builtin/eval#higher-order_functions
created_on: 1356040576
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<password>
action: /say my password is 1 2 3 4 5, but you knew that already. It's on your lunchbox!
created_on: 1181257215
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<paste>
action: /call pastebin
created_on: 1384549065
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<paste-cmd>
action: /say The 'paste' command is used to paste together files, putting line 1 with line 1 and so forth. Try the man page for more.
created_on: 1246561502
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<pasteban>
action: /say just another member of koala_man's botnet
created_on: 1417048345
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<pastebin>
action: /say Paste short snippets (up to 5 lines) in channel. Paste more using https://gist.github.com/ or http://sprunge.us/ (see !sprunge). Please don't use pastebin.com, it's full of ads and has the annoying habit of adding whitespace
created_on: 1436490911
enabled: 1
owner: dtscode
rate_limit: 10
ref_count: 553
ref_user: nobody
type: text

<pastebin.com>
action: /say pastebin.com is ad-supported, and mangles data by converting characters. even the raw version isn't the same as the original data. please use a sane pastebin, such as http://refheap.com https://gist.github.com or http://sprunge.us (''/msg greybot sprunge'' for usage).
created_on: 1399646209
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 843
ref_user: nobody
type: text

<pastebins>
action: /call pastebin
created_on: 1371664987
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 92
ref_user: nobody
type: text

<pastecmd>
action: /call paste-cmd
created_on: 1258390256
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<pasteit>
action: /say Paste the *relevant* code: http://sprunge.us/ - http://pastebin.bash-hackers.org/ - https://gist.github.com/ - DON'T use pastebin.com.
created_on: 1344218921
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<pastie>
action: /say Look, some of us just don't like pastebins.. we prefer you to do your own single-stepping.
created_on: 1186152068
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<path>
action: /say The PATH variable defines where your commands are. Don't do stupid things like GREP=/usr/bin/grep; $GREP foo bar. Just use grep foo bar in the first place. If you aren't sure what your PATH contains, set it yourself.
created_on: 1282162023
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 47
ref_user: nobody
type: text

<pathname>
action: /say If a pathname starts with "/" then the starting position is the root directory, otherwise it is the current directory. It is then split into components separated by "/", and taking each component in turn, it moves to the named subdirectory (or any named object, for the last component), except where a component is "..", when it moves up to the parent directory, or "." or empty, when it does not move.
created_on: 1426762321
enabled: 1
owner: kurahaupo_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<patternfuzz>
action: /say Shell pattern quoting fuzzer https://gist.github.com/ormaaj/6195070
created_on: 1380175271
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<patterns>
action: /say Globs, Braces and Regular Expressions: http://mywiki.wooledge.org/BashGuide/Patterns
created_on: 1262852810
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<pax>
action: /say pax is the standard archiver http://www.bash-hackers.org/wiki/doku.php/howto/pax
created_on: 1394902061
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 33
ref_user: nobody
type: text

<pcre>
action: /say Perl Compatible Regular Expressions: http://perldoc.perl.org/perlre.html
created_on: 1182637649
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<pdf>
action: /say No, there is no fucking PDF of the entire wiki. Because only idiots would want that.
created_on: 1203964852
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480316021.91032
owner: greycat
rate_limit: 10
ref_count: 20
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<pdfguide>
action: /say PDF version of the BashGuide: http://s.ntnu.no/bashguide.pdf or print http://mywiki.wooledge.org/FullBashGuide to paper or pdf. Also see http://mywiki.wooledge.org/FullBashFAQ
created_on: 1438105904
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 46
ref_user: nobody
type: text

<pdksh>
action: /say pdksh was developed as an open-source alternative to AT&T's ksh before it became open-source. pdksh is the default /bin/sh in Interix and Microsoft SUA/SFU. http://www.cs.mun.ca/~michael/pdksh/ -- pdksh has been unmaintained for ~10 years. See !mksh for the current successor.
created_on: 1379040437
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<pe>
action: /say Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
created_on: 1387493473
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<pe:>
action: /say When not performing substring expansion, parameter expansions including a colon cause bash to test for a parameter that is unset or null. The colon can be omitted to skip the test for a null parameter, resulting in a test for only an unset parameter.
created_on: 1370583223
enabled: 1
owner: zendeavor
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<pebasename>
action: /say Mangling file- and dirnames with parameter expansion: http://wiki.bash-hackers.org/syntax/pe#common_use
created_on: 1297747462
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<pebcak>
action: /call pebkac
created_on: 1413601781
enabled: 1
owner: mute
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<pebkac>
action: /say Problem Exists Between Keyboard and Chair. A humorous way to describe a problem caused by the user, not the system. Similar forms: PEBCAK/PIBCAC/PEBKAM.
created_on: 1176334217
enabled: 1
owner: redondos
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<peception>
action: /say No, you can't nest parameter expansions in bash
created_on: 1432790846
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<penultimate>
action: /say The penultimate (second-to-last) argument of your script is "${@:(-2):1}". The ultimate (final) argument is "${@:(-1)}". For named arrays, the same thing: "${array[@]:(-2):1}" etc.
created_on: 1303392416
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<perfect>
action: /call itworks
created_on: 1401467558
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1482637188.81181
owner: geirha
rate_limit: 10
ref_count: 6
ref_user: qwename!~qwename@45.72.210.183
type: text

<performance>
action: /say You can always try to optimize and that's ok, but mainly, not for bash: http://mywiki.wooledge.org/BashWeaknesses
created_on: 1389410023
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<perl>
action: /say http://xkcd.com/208/
created_on: 1227901306
enabled: 1
owner: trash
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<perm>
action: /call permissions
created_on: 1332271388
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<permissions>
action: /say http://wooledge.org/mywiki/Permissions
created_on: 1127139674
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<peurl>
action: /say http://wooledge.org/mywiki/BashFAQ/073
created_on: 1230586667
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<pgrep>
action: /say Use pgrep instead of ps to get PIDs. It saves you from having to parse output that wasn't meant to be parsed. However, finding a process by its name is unsafe. Please look at http://mywiki.wooledge.org/ProcessManagement
created_on: 1348214481
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 53
ref_user: nobody
type: text

<php>
action: /say PHP has its own channel: ##php. Ask PHP questions there. "How do I run a bash script from PHP" is a PHP question, NOT a bash question.~
created_on: 1303909567
enabled: 1
last_referenced_in: #bash
last_referenced_on: 1484257068.33196
owner: greycat
rate_limit: 10
ref_count: 18
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<pi>
action: /say echo 'scale=68; a(1)*4'|bc -l
created_on: 1193388903
enabled: 1
owner: oMish
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<pid>
action: /say Process ID: An integer that identifies a single process on a POSIX system. Using PIDs for checking whether a process is running is flawed (they're really not good for anything other than managing the current process' children) because of race conditions and the fact that PIDs are recycled by the kernel.
created_on: 1215523813
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<pidof>
action: /say You probably want pgrep and pkill, not pidof. Also see http://mywiki.wooledge.org/ProcessManagement
created_on: 1309879949
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 42
ref_user: nobody
type: text

<pigz>
action: /say I wish gzip would use all my CPUs at same time; oh wait pigz does: http://zlib.net/pigz/
created_on: 1424483193
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<ping>
action: /say pong
created_on: 1185116259
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1444377900.85866
owner: kojiro
rate_limit: 10
ref_count: 40
ref_user: fizzie!fis@unaffiliated/fizzie
type: text

<pinky>
action: /say Give your little finger a rest. There's no need to spread your sentence across ten lines.
created_on: 1205950680
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<pipe>
action: /say Pipes connect the (standard) output of one command with the (standard) input of another. The command on the right hand side is executed in a subshell. Avoid pipes if you can for performance reasons and possibly unintended side-effects introduced by this subshell.
created_on: 1203496952
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 59
ref_user: nobody
type: text

<pipefail>
action: /say ''set -o pipefail'': if pipefail is enabled, any pipeline's return status is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully.
created_on: 1329427660
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 36
ref_user: nobody
type: text

<pipestatus>
action: /say Bash has a PIPESTATUS array which contains all the return codes of all the commands from the most recent pipeline. sh doesn't, but see http://pipestatus.sf.net
created_on: 1329427495
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<pitfalls>
action: /say http://wooledge.org:8000/BashPitfalls
created_on: 1220254507
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484163830.09996
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: qwename!~qwename@d154-20-114-183.bchsia.telus.net
type: text

<pithy>
action: /say You can't solve a problem you can't describe.
created_on: 1192723519
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<plonk>
action: /say The sound a name makes when it hits a kill file (or /ignore list).
created_on: 1138112309
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 82
ref_user: nobody
type: text

<plonk2>
action: /say After reading what you said, my head flopped forward in astonishment striking the desktop with a loud "PLONK!" Thanks to you I have damaged my circuitry, and my memory has been overwritten with endless copies of Charles Babbage's plaintive quotation: "I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question." Now attempting to restore from backup ...
created_on: 1303930980
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<plot>
action: /say while IFS=',' read x y; do tput hpa "$x"; tput vpa "$y"; printf 'x'; done < foo.csv # by lhunath
created_on: 1298357934
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<plz>
action: /say If you say plz because it's shorter than please, we'll say no because it's shorter than yes. http://yaku.dk/s/irc/dont-use-thx-sry-plz.txt
created_on: 1298917418
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<pm>
action: /say http://wooledge.org/mywiki/ProcessManagement
created_on: 1158679625
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<pofd>
action: /say Posters of fake data are a big pile of ''telnet gw.boston.ru''
created_on: 1207742914
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284765.79513
owner: go|dfish
rate_limit: 10
ref_count: 2
ref_user: protege!~shynoob@182.59.209.11
type: text

<pointers>
action: /say http://xkcd.com/138/
created_on: 1192683852
enabled: 1
owner: igli
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<pony>
action: /say On parsing markup with regular expressions: http://xrl.us/p0ny
created_on: 1367618385
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476892429.57868
owner: e36freak
rate_limit: 10
ref_count: 57
ref_user: KnightsWhoSayNi!Magic@2a01:7e00::f03c:91ff:fe28:3133
type: text

<pop>
action: /call shift
created_on: 1306175303
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476708870.96124
owner: greycat
rate_limit: 10
ref_count: 5
ref_user: kate!~kate@212.74.13.142
type: text

<porn>
action: /say for ((i=1; i<100; i++)); do printf -v tmp %03d "$i"; wget http://pornsite/image-"$tmp".jpg; sleep 10; done
created_on: 1366145593
edited_by: fluter!~fluter@fedora/fluter
edited_on: 1471849130.7103
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471849452.40777
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: fluter!~fluter@fedora/fluter
type: text

<porn2>
action: /say i=1; for f in ./*.jpg; do printf -v num %05d $((i++)); mv "$f" $num.jpg; done
created_on: 1309466425
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471847348.4412
owner: greycat
rate_limit: 10
ref_count: 93
ref_user: god!dtscode@freenode/weird-exception/bartender/learnprogramming.nchambers
type: text

<porn3>
action: /say for dir in */; do (cd "$dir" || exit; for f in *.rar; do unrar "$f" || break; done && rm *.rar *.r[0-9][0-9]); done
created_on: 1311190394
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 34
ref_user: nobody
type: text

<porn4>
action: /say You outta be ashamed!
created_on: 1376960412
enabled: 1
owner: mr_edgecase
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<porn981>
action: /say https://xkcd.com/981/
created_on: 1431727207
enabled: 1
owner: gniourf_gniourf
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<portability>
action: /say Portability is important. Your script should, if at all possible, run on as many different platforms as possible. Avoid Linux-specific commands like seq(1), GNU-specific command flags like "find ... -or", and so on. See http://www.gnu.org/software/hello/manual/autoconf/Limitations-of-Usual-Tools.html
created_on: 1290816294
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<posix>
action: /say The POSIX standard defines what any modern unix should support. Use just POSIX external commands and options to make portable scripts. See http://www.opengroup.org/onlinepubs/9699919799/utilities/contents.html or search http://pubs.opengroup.org/cgi/kman4.cgi?value=[query]
created_on: 1332836141
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<posix-sh>
action: /say http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18
created_on: 1340023555
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<posix2>
action: /say A Posix-compliant *shell* recognizes the set of all Posix features (and possibly also non-Posix features, as in the case of bash). A Posix-compliant *script* is limited to only Posix features. It's possible for a Posix-compliant shell such as bash to handle non-Posix-compliant scripts (e.g. scripts that use bash-only features).
created_on: 1309926415
enabled: 1
owner: kwtm2
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<posixlocal>
action: /say sh# f() { if ! ${_called_f+false}; then for x; do printf '%s, ' "$x"; done; else _called_f= x= command eval '{ typeset +x x; } 2>/dev/null; f "$@"'; fi; }; x='outside f'; printf "$x, "; f 1 2 3; echo "$x"
created_on: 1358396424
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<posixlocal2>
action: /say http://stchaz.free.fr/locvar.sh
created_on: 1374036653
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<posixsh>
action: /say Try to stick to POSIX for all externals but do NOT limit your shell code to POSIX sh: Depend on bash and use its features to the fullest instead. POSIX sh is so primitive you can only get things done reliably through hacks, if at all.
created_on: 1403125748
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<posparam>
action: /say http://bash-hackers.org/wiki/doku.php/scripting/posparams
created_on: 1217348807
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<posparams>
action: /say Handling positional parameters (arguments on commandline): http://bash-hackers.org/wiki/doku.php/scripting/posparams
created_on: 1200696841
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<pp>
action: /say Positional parameters, such as $1, $2, $3, or "$@" for all of them. See http://bash-hackers.org/wiki/doku.php?id=scripting:posparams
created_on: 1194622054
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<practice>
action: /call theory
created_on: 1391536461
enabled: 1
owner: emg
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<practices>
action: /say http://mywiki.wooledge.org/BashGuide/Practices
created_on: 1340049666
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<prargs>
action: /say Print an argument list for debugging purposes: http://bash-hackers.org/wiki/doku.php/snipplets/prargs
created_on: 1227547571
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<prayer>
action: /say eval and prayer can make things work sometimes
created_on: 1278221619
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<prepare>
action: /say Avoid throwing a hastily typed question into this help channel. Prepare your question in advance in the editor. Word it carefully. Make sure those who read it will understand your request. Remove unnecessary information. Add all necessary information. Then paste it into the channel.
created_on: 1189609624
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1481657233.2163
owner: oMish
rate_limit: 10
ref_count: 1
ref_user: FreedomLover!~Unknown@28-117-179-94.pool.ukrtel.net
type: text

<prepend>
action: /say To prepend a string to a file, use cat with the stdin flag: cat - origfile <<< "string" > newfile && mv newfile origfile
created_on: 1418283915
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 36
ref_user: nobody
type: text

<pretty>
action: /say "Pretty-print" your bash code: pretty() { printf 'pretty(){ %s\n }; declare -f pretty' "$(cat)" | bash; } ## Usage: pretty < myscript
created_on: 1400089185
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<pride>
action: /say bash can do it on its own
created_on: 1359421833
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<print_status>
action: /say print_status() { printf '%*s\r%s\n' "${COLUMNS:-$(tput cols)}" "$2" "$1"; } # usage: print_status LEFT RIGHT
created_on: 1367994285
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1480950740.43954
owner: e36freak
rate_limit: 10
ref_count: 1
ref_user: vclam!~unknown@c-24-11-122-3.hsd1.ut.comcast.net
type: text

<printfexploit>
action: /say # bash -c 'b=$2; printf $1' _ '-v _[b] foo' '_[$(echo dont let this happen >&2)]'
created_on: 1390367987
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<privmsg>
action: /say Got a bunch of questions for the bot? Privmsg me.
created_on: 1205346614
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<problem>
action: /say Some people, when confronted with a problem, think ``I know, I'll use regular expressions.'' Now they have two problems.
created_on: 1358920713
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284776.73759
owner: ormaaj
rate_limit: 10
ref_count: 44
ref_user: protege!~shynoob@182.59.209.11
type: text

<professor>
action: /say "Hey prof, do us all a favor and stop handing out ridiculous homework assignments. Oh, and while you're at it, encourage the idiots to pursue different career paths!"
created_on: 1357598013
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<profiling>
action: /say PS4 To The Rescue, http://stackoverflow.com/questions/5014823/how-to-profile-a-bash-shell-script
created_on: 1433187361
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1455049801.80957
owner: jmbc
rate_limit: 10
ref_count: 1
ref_user: jalt!~jalt@wireless-223-107.wireless.umbc.edu
type: text

<progress>
action: /say See faq 44 -> http://wooledge.org/mywiki/BashFAQ/044 -- How do I create a progress bar?
created_on: 1213202770
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<prompt>
action: /say "\u@\h \w\$"? These are explained in man bash, under PROMPTING. Or see http://www.ibm.com/developerworks/library/l-tip-prompt/
created_on: 1300816051
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<prompt_command>
action: /say PROMPT_COMMAND: If set, the value is executed as a command prior to issuing each primary prompt. (man bash)
created_on: 1413495978
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<prompting>
action: /call prompt
created_on: 1354637133
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<proof>
action: /say We Want Proof.
created_on: 1181273800
enabled: 1
owner: redondos
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<prosper>
action: /say While we tear your code to shreds and criticize it, keep in mind we do so only because we love you and want you to prosper, not fail! Make this a learning opportunity and try not to take it personal. :-)
created_on: 1345300742
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476295717.82862
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: Amun_Ra!~amun-ra@retro.rocks
type: text

<prune>
action: /say Stop find from descending a tree: find . ! '(' -name do-not-descend -prune ')' -print ## See http://mywiki.wooledge.org/UsingFind
created_on: 1291375201
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<prune2>
action: /say A hard problem: prune matched subtrees, also discard the root of the search and roots of non-pruned subtrees: mkdir -p tmp/{aa,bb}; touch tmp/{aa/aa,bb/{aa,bb}}; find ./tmp \( -type d -name aa \) -prune -o \( -path './tmp/*/*' -print \)
created_on: 1423696329
enabled: 1
last_referenced_in: raisondetre
last_referenced_on: 1470828214.31147
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: raisondetre!~ZeNEX@opein-inet.lpa.idec.net
type: text

<ps>
action: /say Don't use ps(1) in scripts. Its output can't be reliably parsed, and will often leave you vulnerable to TOCTOU (race) bugs. Use $! to get the PID of the last asynchronous command. See http://mywiki.wooledge.org/ProcessManagement for anything more complex.
created_on: 1378595484
enabled: 1
last_referenced_in: meeseeks
last_referenced_on: 1464853959.644
owner: ormaaj
rate_limit: 10
ref_count: 6
ref_user: meeseeks!~darkseid@ipwndyour.pw
type: text

<ps-aux>
action: /say NEVER, EVER write "ps -aux". EVER. If you see some script that uses that syntax, throw the entire script away. BSD ps(1) syntax does *not* use a hyphen. In hybrid systems (Linux, AIX, etc.) they hyphen indicates the use of System V ps(1) syntax rather than BSD. It should be "ps aux" or "ps auxw".
created_on: 1268168436
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ps-auxw>
action: /call ps-aux
created_on: 1268168443
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ps1>
action: /say The value of $PS1 is printed as the prompt when bash is running interactive. Note that any characters that do not advance the cursor (eg. colors) must be in \[ \] and exporting PS1 is almost always an mistake. See man bash, PROMPTING
created_on: 1437260929
enabled: 1
owner: llua
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<ps2>
action: /say The value of $PS2 is printed (after expansion) as the secondary prompt for more data when bash is running interactive. See man bash, under PROMPTING.
created_on: 1307551806
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<ps3>
action: /say The value of $PS3 is printed (without expansion) as the prompt for the select command. See man bash, under PROMPTING.
created_on: 1307551807
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<ps4>
action: /say The value of $PS4 is printed (after expansion) before each command bash displays during an execution trace. See man bash, under PROMPTING. # http://bash-hackers.org/wiki/doku.php/scripting/debuggingtips#making_xtrace_more_useful
created_on: 1307551809
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<psgrep>
action: /say psgrep() { ps -ef | { IFS= read -r h; printf '%s\n' "$h"; grep "$@"; }; } # for interactive use only
created_on: 1375814054
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<pstree>
action: /say Bash in the UNIX process tree (simple): http://bash-hackers.org/wiki/doku.php/scripting/processtree
created_on: 1227892677
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<psychic>
action: /say Nope, still not psychic.
created_on: 1405551208
enabled: 1
owner: emg
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<psychic2>
action: /say Oh wait, I'm getting something. Anyone know someone with N in their name? ... I also see an O and a P. Ah! NOPE!
created_on: 1407524312
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<psychotic>
action: /say /me runs amok with a chainsaw, hewing down newbies and veterans alike
created_on: 1412038057
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<pty.spawn>
action: /say http://mywiki.wooledge.org/BashFAQ/078#Don.27t_rely_on_.2BAC8-dev.2BAC8-tty_for_security
created_on: 1345169075
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<punct>
action: /say Pay attention to punctuation and spaces. If someone says i="$Var"; that is NOT the same as i = $Var
created_on: 1301170950
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<push>
action: /say https://github.com/vaeth/push/ See also: http://mywiki.wooledge.org/BashFAQ/050
created_on: 1356062985
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<pv>
action: /say pv - Pipe Viewer - is a terminal-based tool for monitoring the progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of how quickly data is passing through. See https://www.ivarch.com/programs/pv.shtml
created_on: 1431674294
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<pwd>
action: /say PWD is a builtin variable in all POSIX shells that contains the current working directory. pwd(1) is a POSIX utility that prints the name of the current working directory to stdout. Unless you're writing for some non-POSIX system, there is no reason to waste time executing pwd(1) rather than just using PWD.
created_on: 1369198613
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480302003.89565
owner: BlastHardcheese
rate_limit: 10
ref_count: 4
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<pwgen>
action: /say pwgen <http://sourceforge.net/projects/pwgen/> generates passwords. Use that instead of whatever Rube Goldberg contraption you were trying to make.
created_on: 1362506112
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<python>
action: /say Bash is not spelled "python"
created_on: 1264693014
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<q>
action: /say Do you have a BASH question?
created_on: 1185130520
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491050307.26489
noembed: 1
owner: igli
rate_limit: 10
ref_count: 21
ref_user: brabo!~brabo@globalshellz/owner/brabo
type: text

<qdb>
action: /say http://forum.bash-hackers.org/index.php?board=12.0
created_on: 1181919786
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<qefe>
action: /say "$QUOTE" "$EVERY" "$FUCKING" "$EXPANSION"
created_on: 1363712738
enabled: 1
last_referenced_in: #bash
last_referenced_on: 1454846976.01018
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<qefs>
action: /say "$Quote" "$Every" "$Fucking" "$Substitution"
created_on: 1369255769
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<query>
action: /say please /msg me for personal use, don't fill the channel with factoids for yourself
created_on: 1353960458
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<question>
action: /say Ask questions. Don't just paste 200 lines of code on a web page and say "HERE MY KODE <URL> WHATZ RONG". Describe the problem, clearly and concisely. If necessary, give the SMALLEST sample code that demonstrates the problem.
created_on: 1272394968
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 68
ref_user: nobody
type: text

<questions>
action: /call question
created_on: 1278097293
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 190
ref_user: nobody
type: text

<quicksort>
action: /say swap(){ local t;t=${a[$1]};a[$1]=${a[$2]};a[$2]=$t;};partition(){ local c p x;p=${a[$3]};c=$1;swap "$2" "$3";for((x=$1;x<$2;x++));do if((${a[x]}<$p));then swap "$x" "$c";((c++));fi;done;swap "$2" "$c";n=$c;};quicksort(){ if(($1>=$2));then return;fi;local i n;i=$((($1+$2)/2));partition "$1" "$2" "$i";quicksort "$1" "$((n-1))";quicksort "$((n+1))" "$2";}; #usage: quicksort start end; a is array to sort
created_on: 1339287665
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<quiet>
action: /say Bash is perfect. No one has bash issues.
created_on: 1340627245
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 31
ref_user: nobody
type: text

<quote>
action: /call quotes
created_on: 1357747653
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 108
ref_user: nobody
type: text

<quotebreak>
action: /say First, quote all your expansions ("$foo", "$(foo)", "`foo`"). When things break; the fix is not to remove the quotes but to parse your data properly! (eg. use ''while read'' instead of ''for'')
created_on: 1272020469
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<quotedemo>
action: /say # var=$'foo\nbar'; echo $var; echo "$var"
created_on: 1241529114
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<quotenotwhen>
action: /call quotewhennot
created_on: 1333768017
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<quoteoptional>
action: /say You should almost always "double quote your $expansions". There are a few cases where quotes are optional, though: in assignments that contain no literal spaces (eg. foo=$bar), inside [[ except for the RHS (eg. [[ -e $file ]]) and inside complex PEs that are already quoted (eg. echo "${file//$USER/bob}").
created_on: 1401805644
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<quotes>
action: /call quotewhen
created_on: 1403802293
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481064478.88918
owner: lhunath
rate_limit: 10
ref_count: 6
ref_user: emg!~emg@74-123-189-254.static.wiline.com
type: text

<quoteswhen>
action: /call quotewhen
created_on: 1299692116
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<quotewhen>
action: /say "Double quote" every literal that contains spaces/metacharacters and _every_ expansion: "$var", "$(command "$var")", "${array[@]}", "a & b". Use 'single quotes' for code or literal $'s: 'Costs $5 US', ssh host 'echo "$HOSTNAME"'. See http://mywiki.wooledge.org/Quotes , http://mywiki.wooledge.org/Arguments and http://wiki.bash-hackers.org/syntax/words .
created_on: 1420885976
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481064478.90793
owner: b317
rate_limit: 10
ref_count: 1059
ref_user: emg!~emg@74-123-189-254.static.wiline.com
type: text

<quotewhennot>
action: /say Quotes on expansions are almost always safest, even if sometimes unnecessary. The ONLY times you do NOT want quotes: ${var:+ .. } (quote expansions inside '..', though!), right-hand side of [['s = and =~ (if you want a pattern match), inside arithmetic context (( "$foo" )) -> (( foo )).
created_on: 1306154663
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 38
ref_user: nobody
type: text

<quotewhy>
action: /say Unquoted $expansions (except for in keywords or assignments) are always bugs (subjected to word splitting and pathname expansion) and are also twice as slow to expand. If you think you *need* an unquoted expansion: You're wrong. Write better logic or learn about arrays or functions.
created_on: 1295601200
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<quoting>
action: /say Quoting 101: Always use "double quotes" around expansions: "$foo", "$(awk ..)". Use 'single quotes' to prevent even bash expansion: awk '$1 == foo'. You "can 'nest'" quotes but can't put literal single quotes in single quotes; so use: 'Don'\''t forget to quote!'.
created_on: 1246455414
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 130
ref_user: nobody
type: text

<r00t>
action: /say lol
created_on: 1188775498
enabled: 1
owner: SavetheWorld
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<race>
action: /say http://mywiki.wooledge.org/RaceCondition
created_on: 1276807455
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<raft>
action: /say Read A Fucking Tutorial! We are NOT here to teach you the very basic beginner steps of bash scripting. You are expected to know basic stuff like "how do I redirect a command's output to a file" and "what's a glob" before you come here. There are links in the channel /topic. Use them BEFORE asking anything!
created_on: 1179481821
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284790.4052
owner: igli
rate_limit: 10
ref_count: 1
ref_user: protege!~shynoob@182.59.209.11
type: text

<rand>
action: /say rand() { local max=$((32768 / $1 * $1)) r; while (( (r=$RANDOM) >= max )); do :; done; echo $(( r % $1 )); } ## Returns unbiased random number from 0 to ($1-1) inclusive, $1 <= 32768
created_on: 1393627266
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 29
ref_user: nobody
type: text

<random>
action: /say See http://wooledge.org/mywiki/BashFAQ/026
created_on: 1210797077
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482969232.14639
owner: greycat
rate_limit: 10
ref_count: 10
ref_user: qwename!~qwename@45.72.210.183
type: text

<randomanswer>
action: /say # answer=(yes no maybe); echo "${answer[RANDOM % ${#answer[@]}]}"
created_on: 1328145297
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 45
ref_user: nobody
type: text

<randomstring>
action: /say randomstring() { LC_CTYPE=C tr -dc '[:print:]' < /dev/urandom | dd bs="${1:-16}" count=1 2>/dev/null; echo; } # usage: var=$(randomstring [LENGTH])
created_on: 1276209327
enabled: 1
owner: Tramp
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<rc>
action: /say http://web.archive.org/web/20080828125913/http://www.faqs.org/faqs/usenet/faq/part1/section-6.html -- What does "rc" at the end of files like .newsrc mean?
created_on: 1427713188
enabled: 1
last_referenced_in: jonbryan
last_referenced_on: 1475676571.83604
owner: NaNDude
rate_limit: 10
ref_count: 15
ref_user: jonbryan!~user@unaffiliated/jonbryan
type: text

<re>
action: /call regex
created_on: 1374688548
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 146
ref_user: nobody
type: text

<read>
action: /say help read <ENTER> read http://wiki.bash-hackers.org/commands/builtin/read
created_on: 1272038371
enabled: 1
last_referenced_in: korans
last_referenced_on: 1469229014.36939
owner: TheBonsai
rate_limit: 10
ref_count: 268
ref_user: korans!~korans@46.254.251.97
type: text

<read-p>
action: /say Bash's read -p prints a prompt before reading input. It's incompatible with most Korn shells and Zsh, which use -p for a different purpose. It's also not specified by POSIX. Consider something like this (but note they aren't quite identical): [[ -t 0 ]] && printf %s 'Enter some input: ' >&2; read -${BASH_VERSION+e}r myInput
created_on: 1359997724
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<read-r>
action: /say By default, if ''read'' reads a line of input terminated by a backslash (\), it will *continue* reading lines of input until the first line not terminated by "\", or it hits EOF and then concatenate those lines into a single line. This is a dumb misfeature. So *always* use the -r option with ''read'', unless you know you have a case when you want the default behavior, or when using the bash-only ''read -e''.
created_on: 1380045961
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 31
ref_user: nobody
type: text

<readability>
action: /say The readability of your code is almost just as important as the result of your code! Go read http://wooledge.org/mywiki/BashGuide#Readability
created_on: 1187554078
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<readarray>
action: /call mapfile
created_on: 1428880423
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<readfind>
action: /say Run ... for every file find(1) matches: while IFS= read -r -d '' file; do ...; done < <(find /path -print0) ## See http://mywiki.wooledge.org/UsingFind
created_on: 1290885246
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<reading>
action: /say Reading, it's not just for breakfast cereal anymore.
created_on: 1362428916
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<readlines>
action: /call whileread
created_on: 1403926530
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<readwrite>
action: /say in general you can't read from and write to the same file at the same time. "sort file > file" won't work. If your tool has not an in-place variant, use a temporary file
created_on: 1349873706
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<realhomework>
action: /say <linuxnewb> We got a challenge on our university where we are forced to input commands without using space character or "minus" character
created_on: 1367437484
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<reattach>
action: /call reptyr
created_on: 1412735819
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<recursion>
action: /say See: !recursion
created_on: 1417743112
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<redir>
action: /say Redirections: http://mywiki.wooledge.org/Redirection
created_on: 1347065207
enabled: 1
last_referenced_in: yukiku
last_referenced_on: 1457711734.09585
owner: ormaaj
rate_limit: 10
ref_count: 375
ref_user: Yukiku!~Dhs92@unaffiliated/yukkii
type: text

<redir2eng>
action: /say x>y: make FD x write to file y. x>&y: make FD x write to where FD y is writing now. If x is omitted, use 1. If y is -, close x. Use < to read instead of write. Exercise: exec 3>&1 >mylog; echo moo; exec 1>&3 3>&-
created_on: 1345728682
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<redir2var>
action: /say Try thinking of FDs as variables. Change > into = and >& into =$. 0=keyboard; 1=terminal; 2=logfile; command 2>&1 1>otherlog; does 2=$1 (so 2=terminal) and 1=otherlog. At the end, command's 0=keyboard, 1=otherlog and 2=terminal
created_on: 1343519192
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<redirect>
action: /call redirection
created_on: 1303242322
enabled: 1
last_referenced_in: yukiku
last_referenced_on: 1457711734.05956
owner: e36freak
rate_limit: 10
ref_count: 79
ref_user: Yukiku!~Dhs92@unaffiliated/yukkii
type: text

<redirection>
action: /call redir
created_on: 1377865371
enabled: 1
last_referenced_in: yukiku
last_referenced_on: 1457711734.07716
owner: zendeavor
rate_limit: 10
ref_count: 117
ref_user: Yukiku!~Dhs92@unaffiliated/yukkii
type: text

<redirections>
action: /call redirection
created_on: 1326313765
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<redirorder>
action: /say Redirection order: http://bash-hackers.org/wiki/doku.php?id=syntax:redirection#multiple_redirections
created_on: 1193282365
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<redirtut>
action: /call redir
created_on: 1236006719
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 91
ref_user: nobody
type: text

<redo>
action: /say NO, bash does NOT have anything like perl's "redo" block. Which as far as I can tell is simply a "goto the top of the loop". And no, bash doesn't have goto either.
created_on: 1188416056
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ref>
action: /say http://www.gnu.org/software/bash/manual/bashref.html
created_on: 1414768904
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284808.25217
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: protege!~shynoob@182.59.209.11
type: text

<refactorlessplease>
action: /say refactoring to achieve clarity risks simultaneously achieving a time-irreversal opacation of the problem statement http://www.computer.org/csdl/proceedings/wicsa/2005/2548/00/25480159-abs.html
created_on: 1351373408
enabled: 1
owner: sikilpaake
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<reference>
action: /say Bash Quick Reference: http://wooledge.org:8000/BashSheet
created_on: 1215332653
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<reframe>
action: /say Reframe your question. When I do X, Y happens. I expected Z to happen.
created_on: 1165444494
enabled: 1
owner: wonderfrog
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<regex>
action: /say Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
created_on: 1374688538
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 220
ref_user: nobody
type: text

<regexhtml>
action: /say http://stackoverflow.com/a/1732454/1524545
created_on: 1345892117
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<regexp>
action: /call regex
created_on: 1374688554
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 36
ref_user: nobody
type: text

<regular>
action: /say What are regular files? Regular files are regular files. Are symlinks regular files? No. Regular files are regular files. Are FIFOs regular files? No. Regular files are regular files. Are? ...No
created_on: 1340008446
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<relax>
action: /say If someone takes you to task for your ignorance, and you reply by asking them to "relax", what you are really saying is, "Yes, I am ignorant, and I intend to remain that way. I shall not read the fine manual, nor shall I exert any efforts whatsoever to improve myself. I shall continue to be a leech upon the IRC channel."
created_on: 1175879448
enabled: 1
last_referenced_in: cr1t1cal
last_referenced_on: 1483492245.28334
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: cr1t1cal!~chiken@60-242-215-61.static.tpgi.com.au
type: text

<rename>
action: /say rename(1) could be one of three or four different programs -- or you might not have it on your system. A loop or find expression that uses mv is safer. See also !faq rename
created_on: 1272819696
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 157
ref_user: nobody
type: text

<renault>
action: /say I tried to buy a Renault in a Renault shop, but there were no salesmen available, so I came into this Ford shop. Why won't you sell me a Renault?!
created_on: 1264523716
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<repeat>
action: /say repeat() { local i n; n=$1; shift; for ((i=1; i<=n; i++)); do "$@"; done; }
created_on: 1204659620
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1488702719.62382
owner: greycat
rate_limit: 10
ref_count: 22
ref_user: haavard!root@haavard.me
type: text

<replace>
action: /say http://mywiki.wooledge.org/BashFAQ/021 -- How can I replace a string with another string in all files?
created_on: 1239379826
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483162313.5165
owner: greycat
rate_limit: 10
ref_count: 34
ref_user: o11c!~ben@unaffiliated/o11c
type: text

<reply>
action: /say REPLY is the default variable that read populates, when not supplied with one. The trimming of leading and trailing IFS whitespace does not occur, when used as such. See ''help read'' and http://wiki.bash-hackers.org/commands/builtin/read
created_on: 1309400446
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<reptyr>
action: /say ptrace-based hack that forces modification of a process's controlling terminal. https://github.com/nelhage/reptyr
created_on: 1412734717
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<requirements>
action: /say "<greycat> If you had simply TOLD US YOUR REQUIREMENTs, I could probably have written code to DO THAT INSTEAD, in about 20 seconds. <greycat> But NO, you have to be all hand-wavey and vague. *PLONK*"
created_on: 1184850224
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<requote>
action: /say Prepare literal data for injection into a regular expression: requote() { sed 's/[^^]/[&]/g; s/\^/\\^/g' <<< "$1"; }; grep "^$(requote "$input")"
created_on: 1377785361
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 79
ref_user: nobody
type: text

<reserved>
action: /say The following words are recognized as reserved when unquoted and either the first word of a simple command or the third word of a case or for command: ! case do done elif else esac fi for function if in select then until while { } time [[ ]]
created_on: 1323794563
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1468397393.27485
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<return>
action: /call exit
created_on: 1260554987
enabled: 1
last_referenced_in: kerr
last_referenced_on: 1452802199.90688
owner: greycat
rate_limit: 10
ref_count: 63
ref_user: Kerr!~Kerr@cpe-98-145-82-51.natnow.res.rr.com
type: text

<reuse>
action: /say The reason we tell you how to deal with any possible filename or variable is so that your script functions can be reused.
created_on: 1199795328
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<rfc3339>
action: /say A good, simple profile of iso8601, compatible with many others. With (GNU) date: «date --rfc-3339=seconds» or «date '+%Y-%m-%d %H:%M:%S%:z'». Configure your syslog-ng.conf with: «ts_format(rfc3339)». www.ietf.org/rfc/rfc3339.txt
created_on: 1400558474
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<rhetorical>
action: /say Does this look like a rhetorical question to you?
created_on: 1181268105
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<rhs>
action: /say # var="[a-z]"; [[ $var = $var ]] || echo "this is false, and why you should quote the RHS of = in [[ ]]"
created_on: 1385595543
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<right>
action: /say It's only ignorance the first time. After that, it's stupidity.
created_on: 1187227727
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483930351.99586
owner: ivazquez
rate_limit: 10
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<rightstr:>
action: /say Bash does the "rightstr" operation using the PE capabilities. here is a Bash rightstr function: rightstr(){ echo ${1:$(( 0 - $2 ))} ; } Usage is rightstr "somestring" <count from the end> To use that function try rightstr "abcdefg" 4 ;
created_on: 1244140821
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<rlart>
action: /say Recursive version of ls -lart (requires GNU find and sort): find . -type f -printf '%T@ %TY-%Tm-%Td %TX %p\0' | sort -zn | while read -rd '' _ day time path; do printf '%s %s %s\n' "$day" "${time%.*}" "$path"; done
created_on: 1334763425
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<rlatest>
action: /say Recursive latest, requires GNU find + sort: rlatest() { local file; find "${1:-.}" -type f -printf '%T@ %p\0' | sort -znr | { read -rd ' ' _; IFS= read -rd '' file; printf '%s\n' "$file"; }; }
created_on: 1306267144
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<rm>
action: /say Don't override the rm command. You'll teach yourself bad habits and lose data some day when you use a different machine or login account. If you must back up files when deleting them, make a new command: del() { mv "$@" ~/.backup/; } or similar.
created_on: 1301074966
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<rndstr>
action: /say https://gist.github.com/ormaaj/3929316
created_on: 1371009591
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<rng>
action: /say http://wooledge.org/~greg/dilbert.gif
created_on: 1127151770
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<rpc>
action: /say for h in host1 host2 host3; do ssh "$h" bash < localscript; done
created_on: 1233851135
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<rsyncchannel>
action: /say #rsync
created_on: 1413913261
enabled: 1
owner: Keanu73
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<rtf>
action: /say Read the FAQ! You are hearing this because !faq<n> or !faq <term> has been used to help you several times. And yes, I respond to pms (no ! required ;)
created_on: 1182095739
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284822.5923
owner: igli
rate_limit: 10
ref_count: 1
ref_user: protege!~shynoob@182.59.209.11
type: text

<rtff>
action: /say read the fine factoid
created_on: 1432072658
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284834.88163
owner: izabera
rate_limit: 10
ref_count: 1
ref_user: protege!~shynoob@182.59.209.11
type: text

<rtfm>
action: /say http://xkcd.com/293/
created_on: 1219693396
enabled: 1
owner: Samus_
rate_limit: 10
ref_count: 36
ref_user: nobody
type: text

<rtft>
action: /say *see topic*
created_on: 1378685159
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284844.52927
owner: sjohnson
rate_limit: 10
ref_count: 4
ref_user: protege!~shynoob@182.59.209.11
type: text

<rtfu>
action: /say READ THE FUCKING URL!
created_on: 1159554737
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284858.79319
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: protege!~shynoob@182.59.209.11
type: text

<rude>
action: /say If you think we're rude, have a look at http://mikeash.com/getting_answers.html and bear in mind we have to deal with those sorts of issues every day. Try: /msg greybot answers
created_on: 1182780663
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<ruhdoh>
action: /say A portmanteau of Scooby's "Ruh roh" and Homer's "D'oh!"
created_on: 1406921356
enabled: 1
last_referenced_in: latch
last_referenced_on: 1477408391.67663
owner: capt_mercaptan
rate_limit: 10
ref_count: 2
ref_user: latch!~latch@unaffiliated/latch
type: text

<ruhroh>
action: /say "Ruh roh" is Scoby Doo's equivalent of Homer Simpson's "D'oh!"
created_on: 1406921296
enabled: 1
last_referenced_in: latch
last_referenced_on: 1477408371.30362
owner: David-A
rate_limit: 10
ref_count: 1
ref_user: latch!~latch@unaffiliated/latch
type: text

<rule34>
action: /call porn
created_on: 1442866439
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<rules>
action: /say First rule of #bash, UMQ. Second rule of #bash, don't fucking ignore Riviera.
created_on: 1395066161
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1486060596.49396
owner: dualbus
rate_limit: 10
ref_count: 8
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<runkill>
action: /say To run a command and then kill it (after some delay), run the cmd in the background, wait some time and kill it: cmd & sleep 60; kill $!
created_on: 1254324848
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<rw>
action: /call readwrite
created_on: 1349873652
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<rwpitfall>
action: /say command < file > file: ''file'' will get truncated because '> file' truncates a file before writing to it. Because of this, '< file' won't be able to read anything from it, command won't get any input, and probably won't give any output.
created_on: 1212136192
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sad>
action: /say /me quietly sobs in the corner
created_on: 1404354716
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838589.43425
owner: kurahaupo
rate_limit: 10
ref_count: 3
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<savetopic>
action: /say FAQ: http://mywiki.wooledge.org/BashFAQ | Guide: http://mywiki.wooledge.org/BashGuide | ref: http://xrl.us/bhk9ww | http://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | Check your script: http://www.shellcheck.net/ | Devel: http://xrl.us/bmodjy | mailing list: https://lists.gnu.org/mailman/listinfo/help-bash
created_on: 1411665450
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<scope>
action: /say All variables are global to the script by default. local/declare/typeset inside a function makes the variable local to the function. Use subshells (eg. (), $(), ...) if you need an explicit scope. http://wiki.bash-hackers.org/scripting/basics#variable_scope
created_on: 1405959923
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 28
ref_user: nobody
type: text

<scp>
action: /say If you have problems with scp, stop using scp and just use ssh directly. It's far more robust than scp is. tar cf - dir | ssh user@host 'cd /somewhere && tar xf -'
created_on: 1377084561
enabled: 1
owner: Stummi
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<screen>
action: /say screen has its own channel: #screen
created_on: 1225631516
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<screen-x>
action: /say screen(1) lets you attach to a pseudoterminal multiple times. Run "screen", then in another window, run "screen -x". Do stuff. Great for remote teaching, etc.
created_on: 1284561201
enabled: 1
last_referenced_in: damien22
last_referenced_on: 1454769699.61569
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: Damien22!~Damien@61.173.41.215
type: text

<screenshot>
action: /say Please do not use a screenshot to share text. Use a pastebin. Anything that happens in the terminal is text. Anything that involves graphics is not bash related.
created_on: 1364578083
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<script>
action: /say script(1) allows you to record an interactive session in a terminal. Also, you can use it instead of expect(1) for simple tasks, because it creates a pty.
created_on: 1428093147
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<scriptinglanguage>
action: /say Consider using perl, python, or ruby for such a task.
created_on: 1374174938
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<seconds>
action: /say $SECONDS expands to the amount of seconds since your shell was started. Can be useful for timing script operations. Note you can do SECONDS=0 and it starts counting from 0 again!
created_on: 1405132349
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<sed>
action: /say sed is a Stream Editor, used to filter output. It's NOT primarily useful for editing files (use ed, ex or perl instead). Ask sed questions in ##sed.
created_on: 1355933309
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sed-i>
action: /say Some sed(1)s have -i which claims to "modify" files. It does not: sed is not a FILE editor. The -i flag re-writes the entire file and replaces the original with the new. This breaks open handles and hard-link sets, and fails to follow symlinks. -i is also unportable: valid sed on one system will write broken files on another. Use ed(1) or ex(1) instead: eg. ex -sc '%s/a/b/|wq' file
created_on: 1410461344
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 272
ref_user: nobody
type: text

<sed\n>
action: /say http://sed.sourceforge.net/sedfaq5.html#s5.10
created_on: 1222711585
enabled: 1
owner: go|dfish
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<sedawk>
action: /say http://www.unix.org.ua/orelly/unix2.1/sedawk/index.htm
created_on: 1202995859
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<sednewline>
action: /say http://sed.sourceforge.net/sedfaq5.html#s5.10
created_on: 1181672062
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sedredir>
action: /say All sed questions should be asked in #sed, not #bash ;)
created_on: 1187811312
enabled: 1
owner: karolisl
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<sedstr>
action: /say Do not use sed for string manipulation. Your shell can handle it just fine on its own, and is much faster. Forking an external utility like sed for every string manipulation can add _seconds_ to execution time. See http://mywiki.wooledge.org/BashFAQ/100 for proper string manipulation techniques.
created_on: 1360012265
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<sedtut>
action: /say Intro to sed: http://www.grymoire.com/Unix/Sed.html#uh-39 sed 1 liners : http://www-h.eng.cam.ac.uk/help/tpl/unix/sed.html
created_on: 1197393527
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sedvar>
action: /say Don't embed shell variables in sed, expecting a fixed string replacement (e.g. sed "s/$foo/$bar/"). It won't work... at best, it'll be extremely prone to bugs. See http://mywiki.wooledge.org/BashFAQ/110
created_on: 1332351094
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<seen>
action: /say awk '!seen[$0]++' # Remove second and subsequent instances of each input line, without having to sort them first.
created_on: 1181074333
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<select>
action: /say select fruit in Banana Strawberry; do eat "$fruit"; done # 'select' lets the user pick an option and runs the body with the user's choice assigned to the variable.
created_on: 1427290759
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 53
ref_user: nobody
type: text

<selftell>
action: /say Please don't use greybot's factoids for personal use when you are on the #bash channel. Instead, send a private message to greybot containing the factoid you want to read. For example, instead of "!pe", use "/msg greybot pe".
created_on: 1313409885
enabled: 1
owner: cthuluh
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sendtnks>
action: /say Send thanks to the people who helped you: http://sendtnks.meteor.com/
created_on: 1375069613
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sense>
action: /say We can't help you if your question makes no sense. Try to explain your problem in English sentences that aren't broken or ambiguous and don't use bash code to explain yourself. Give sample input and output data. Not code.
created_on: 1258118882
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<september>
action: /call august
created_on: 1283874492
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<seq>
action: /say seq(1) is nonstandard, inefficient and useless. For bash2.04+/zsh/ksh93, use for ((i = 1; i <= 10; i++)); do ..., for POSIX and other shells, see !counting
created_on: 1371858826
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 267
ref_user: nobody
type: text

<seqfunc>
action: /say seq() { local i FIRST=1 INCREMENT=1 LAST=1; case $# in 3) FIRST=$1 INCREMENT=$2 LAST=$3;; 2) FIRST=$1 LAST=$2;; 1) LAST=$1;; esac; i=$FIRST; while [ $i -le $LAST ]; do echo $i; let i+=$INCREMENT; done; }
created_on: 1192888277
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<servant>
action: /say We are not your servants. We are here to help you answer your questions, and assist you in your problems. We do not write scripts for you, and we do not fix scripts for you. If you have a problem, do not come here until you know what your problem is EXACTLY. We can help you solve it, but we CANNOT find the problem for you; that is YOUR task.
created_on: 1173386852
enabled: 1
last_referenced_in: cr1t1cal
last_referenced_on: 1483492273.1171
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: cr1t1cal!~chiken@60-242-215-61.static.tpgi.com.au
type: text

<set>
action: /say help set <Enter> http://bash-hackers.org/wiki/doku.php?id=commands:builtin:set # set -vx is useful for debugging, set +H for playing in terminal.
created_on: 1350130515
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1487472714.38544
owner: geirha
rate_limit: 10
ref_count: 83
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<set-e>
action: /say "set -e" tells bash to abort the execution of the script when an unchecked command fails. A command is checked when it is in an if, while, until, &&, || or ! check. Also see http://mywiki.wooledge.org/BashFAQ/105
created_on: 1416501034
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 141
ref_user: nobody
type: text

<set-f>
action: /say ''set -f'' disables glob expansion. You may need this in constructs like ''for w in $words'' or ''array=($words)'' just in case one of the words contains a * or ?.
created_on: 1249923269
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<set-u>
action: /say "set -u", or "set -o nounset", makes use of unset variables an error. To test whether a variable is present when this is active without causing an error, you can check for [[ ${var-} ]] instead of [[ $var ]].
created_on: 1342648865
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<set-x>
action: /say set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
created_on: 1384879164
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<setgid>
action: /say The setgid bit (octal permission bit 02000) on a directory causes new files to inherit the directory's group ownership. See http://mywiki.wooledge.org/Permissions#setgid
created_on: 1309196882
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<setuid>
action: /say Bash drops setuid, and Linux disables setuid for scripts. Use sudo or a C wrapper if you must.
created_on: 1235735863
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<sfsg>
action: /say So Far So Good
created_on: 1195248988
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sh>
action: /say sh is NOT bash. It is a POSIX/bourne shell. To run bash code, your script MUST have #!/bin/bash at the top and it MUST be either executed directly or with bash (ie. NOT sh myscript). Some /bin/sh link to bash, you cannot rely on this and it will disable most bash features. http://mywiki.wooledge.org/BashGuide/Practices#Choose_Your_Shell
created_on: 1383932664
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 576
ref_user: nobody
type: text

<sh-c>
action: /say Never expand parameters in ''sh -c'' commands. Use either of these instead: sh -c 'command "$1"' -- "$file" OR file=$file sh -c 'command "$file"' OR sh -c "$(printf 'command %q' "$file")". Same problem with 'ssh', though with 'ssh' only the last alternative works.
created_on: 1256739946
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<shame>
action: /say http://wooledge.org/mywiki/ShellHallOfShame
created_on: 1207687250
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<shanghai>
action: /say shanghai (verb): to force into service. Originally used to describe the practice of kidnapping men and forcing them to serve as sailors.
created_on: 1334686182
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<shbot>
action: /call evalbot
created_on: 1348795608
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 167
ref_user: nobody
type: text

<shebang>
action: /say The top of a script MUST have a #! line, called 'shebang' or 'hashbang'. It tells the kernel what program to run your script with. We recommend `#!/usr/bin/env bash` (why: http://stackoverflow.com/a/733901/58803). http://mywiki.wooledge.org/BashGuide/CommandsAndArguments#Scripts http://www.in-ulm.de/~mascheck/various/shebang/
created_on: 1391530613
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 152
ref_user: nobody
type: text

<sheet>
action: /say Bash Reference Sheet: http://wooledge.org:8000/BashSheet
created_on: 1216278065
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<shell>
action: /say In this context, a shell is a command interpreter. It reads commands, and performs actions.
created_on: 1431458793
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487184104.50864
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: cahoots!~J@rrcs-108-178-177-210.west.biz.rr.com
type: text

<shellcheck>
action: /say ShellCheck is a shell linting/suggestion tool: http://www.shellcheck.net/
created_on: 1369075642
enabled: 1
last_referenced_in: sjohnson
last_referenced_on: 1487551490.9056
owner: koala_man
rate_limit: 10
ref_count: 294
ref_user: sjohnson!sjohnson@cow.sj.rfc1459.net
type: text

<shellquote>
action: /call bashquote
created_on: 1379008216
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 15
ref_user: nobody
type: text

<shellshock>
action: /say http://mywiki.wooledge.org/BashFAQ/111
created_on: 1411737013
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 45
ref_user: nobody
type: text

<shellshock-test>
action: /say a='() { :;}; echo CVE-2014-6271 FAIL' b='() { (b)=>\' bash -c '/dev/stdout echo CVE-2014-7169 FAIL||echo CVE-2014-7169 OK;a||echo CVE-2014-6271 OK' 2>/dev/null
created_on: 1411822465
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<shift>
action: /say to shift positional parameters to the left, simply use 'shift'. To shift to the right, use: set -- "${@:1:$#-1}"
created_on: 1251969223
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476708870.97502
owner: SiegeX
rate_limit: 10
ref_count: 38
ref_user: kate!~kate@212.74.13.142
type: text

<shlaas>
action: /say Check your code here first: http://www.shellcheck.net/ if you still have issues, then reduce your >100 line test case to the minimum possible and ask again.
created_on: 1380583557
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 60
ref_user: nobody
type: text

<shopt>
action: /say help shopt <ENTER> http://www.bash-hackers.org/wiki/doku.php?id=internals:shell_options -- nullglob and extglob are most common. dotglob and nocase{match,glob} can be handy too
created_on: 1190610545
enabled: 1
owner: igli
rate_limit: 10
ref_count: 41
ref_user: nobody
type: text

<shot>
action: /say *BANG*
created_on: 1226949150
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<showargs>
action: /say https://github.com/ormaaj/dotfiles/blob/master/bashrc#L7
created_on: 1338501052
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<shows>
action: /say When using the word "shows" make sure you make it clear where the information is being "shown". Is it going to the terminal on stdout or stderr? Is it going into a file? is it already in a file? is it in a pipe? etc..
created_on: 1187538809
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<shtricks>
action: /say POSIX sh tricks and tips http://www.etalabs.net/sh_tricks.html
created_on: 1423599289
enabled: 1
owner: emg
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<shtut>
action: /say http://steve-parker.org/sh/sh.shtml
created_on: 1208026872
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<shuffle>
action: /say Shuffling collections in shell: http://mywiki.wooledge.org/BashFAQ/026 Avoiding bias: http://blog.codinghorror.com/the-danger-of-naivete/
created_on: 1420128653
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sigkill>
action: /say SIGKILL is exactly the same as SIGTERM except that it doesn't invoke the process' signal handlers. You should *never* use it unless you *know* the process is bugging out in its signal handler.
created_on: 1244710721
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<signal>
action: /call trap
created_on: 1355949397
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<sigs>
action: /say SIGTERM: Tells a process to clean up and stop running. SIGINT: User wants to drop back to his shell. SIGQUIT: User saw a bug and wants you to dump debug info. SIGHUP: User closed his terminal. SIGKILL: User wants you to drop what you're doing and stop immediately.
created_on: 1392829820
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<simplicity>
action: /say Less is more.
created_on: 1398026075
enabled: 1
owner: bwe
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<simplify>
action: /say Before you boldly claim that some common command doesn't work, try simplifying the command string or script down to the basics to see if the problem still occurs.
created_on: 1344014685
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<sjohnsonrev>
action: /say # echo "gip taf ma I" | sed 's/ /_/g;s/./&\n/g' | tac | xargs | sed 's/ //g;s/_/ /g'
created_on: 1378538577
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489610374.86833
owner: sjohnson
rate_limit: 10
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<sjohnsonrev2>
action: /say # s="gip etuc a ma i" i=-1 IFS=$'\n'; for c in $(sed 's|.|&\n|g' <<< "$s"); do ((i++)); alias "$i"="printf %s \"$c\""; done; unset IFS; for i in $(eval echo {$i..0}); do eval ${BASH_ALIASES[$i]}; done
created_on: 1379704189
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489610410.29348
owner: sjohnson
rate_limit: 10
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<skim>
action: /say Don't skim. Read. There is a lot of information in links we give you, and in man pages. Once you've read it once, and have absorbed the information, feel free to skim for reference. But until you know it, read the whole thing.
created_on: 1311960160
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sl>
action: /say The reason you don't want . in PATH is because you might be sitting in /tmp and accidentally type "sl" instead of "ls", and voila! You've run the hax0r's /tmp/sl command.
created_on: 1312919494
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<slashes>
action: /say You don't always have to use sed 's/foo/bar/'. If bar contains slashes, you can use a different delimiter, like sed 's#foo#bar#'. Any printable character can be used.
created_on: 1180962026
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<slice>
action: /say Some people use the word "slice" to mean "a contiguous set of array elements", as in "I want array elements 5 through 7". "${array[@]:5:3}" or "${@:5:3}"
created_on: 1294263342
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<slurp>
action: /say To read a file's contents into a variable: var=$(< file) However, this strips trailing newlines. To work around that: var=$(cat file; printf x) var=${var%x} In bash 4.1 and above, read -rN0 < file
created_on: 1426810052
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<smaller>
action: /say When you're trying to find your mistake in a shell script, make the script SMALLER. Smaller is better. Reduce your code to the bare minimum size that still shows the problem. You'll probably end up fixing it yourself in the process.
created_on: 1179858864
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<smart>
action: /say http://www.catb.org/~esr/faqs/smart-questions.html
created_on: 1169587041
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 22
ref_user: nobody
type: text

<smartquotes>
action: /say Hey, you! Mac user! http://www.iclarified.com/38772/how-to-disable-curly-quotes-in-mac-os-x-mavericks
created_on: 1399645818
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<smiley>
action: /say m# case { { ( { ) ( <<< :-\) cat ) }
created_on: 1378595696
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<so>
action: /call stackoverflow
created_on: 1415046755
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<so_html>
action: /say http://stackoverflow.com/questions/1732348/#1732454 (best response to parsing HTML with regex yet)
created_on: 1326775529
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<solution>
action: /say "The first part of solving any problem is making sure you understand what you are trying to solve. If you can't cogently and clearly state what you are trying to do, then how can you expect anyone else to understand what you are trying to do?"
created_on: 1187016522
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1486829841.19886
owner: savetheWorld
rate_limit: 10
ref_count: 2
ref_user: root_guix!~root@13-36-179-94.pool.ukrtel.net
type: text

<sort>
action: /say sort(1) is an external command that sorts your input lexicographically or numerically. See http://to.lhunath.com/bashlib#L1207 for a bash sorter that can optionally take a comparator command.
created_on: 1366333482
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491023851.77512
owner: lhunath
rate_limit: 10
ref_count: 53
ref_user: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
type: text

<sort-k>
action: /say To sort(1) on the second field: -k 2,2
created_on: 1366333774
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<sortfiles>
action: /say declare -a files; n=0; while IFS= read -r -d ''; do for((i=0;i<=n;i++)); do if [[ "$REPLY" -nt "${files[i]}" ]]; then for((j=n;j>i;j--)); do files[j]="${files[j-1]}"; done; files[i]="$REPLY"; ((n++)); break; fi; done; done < <(find . -type f -print0) # sorts all files under . in descending order by mtime; requires a find(1) that supports -print0
created_on: 1364405722
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 31
ref_user: nobody
type: text

<source>
action: /say ''. <script>'' (or "source", which is not portable) reads and executes the commands from <script> in the current shell.
created_on: 1408097715
enabled: 1
owner: cdown
rate_limit: 10
ref_count: 184
ref_user: nobody
type: text

<sp>
action: /say Special Parameters (magic read-only builtin "variables"): http://www.gnu.org/software/bash/manual/bashref.html#Special-Parameters
created_on: 1293135409
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<space>
action: /say In bash, whitespace is syntax. You can't be lax with it: var=value; [[ "$var" = "$value" ]]
created_on: 1393340605
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<spaces>
action: /say Spaces in bash are important syntax: they separate command names and arguments. foo = bar is NOT AN ASSIGNMENT (runs foo with arguments = and bar), if [-d "$dir"] is NOT A TEST (runs the program [-d). Also remember to quote ALL your expansions to avoid unintentionally syntactical spaces from your data: rm "$file" (NOT rm $file).
created_on: 1373045575
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<spaceship>
action: /say "Can you please help me build a space ship? I have only one variable, a, and its value is 0"
created_on: 1302048246
enabled: 1
owner: gau13
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<spam>
action: /say Please don't make us do this: while : ; do wget -O/dev/null -o/dev/null http://www.<yourSpammyDomain>.com/ ; done
created_on: 1196629785
enabled: 1
owner: igli
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<special>
action: /say Special Parameters are read-only pseudo-variables, such as $$ (PID), $! (bg child PID), etc. See http://mywiki.wooledge.org/BashGuide/Parameters
created_on: 1269540659
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<specialchars>
action: /say Inside single quotes there are no special characters (but you can't put a single quote *inside* a single-quoted string); inside double quotes, \ and $ are special; outside quotes, \ and $ & ( ) | ; < > * ? [ ] are special along with whitespace, and in certain contexts # = ~ { } are also special.
created_on: 1391981657
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<speed>
action: /say If speed or performance is an issue, try ##c
created_on: 1362432235
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<split>
action: /say http://bash-hackers.org/wiki/doku.php?id=syntax:pe#substring_expansion
created_on: 1192682617
enabled: 1
owner: igli
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<split_str>
action: /say split_str() { local sep=$1 str=$2; [[ $1 && $2 ]] || return; split=(); while [[ $str = *"$sep"* ]]; do split+=("${str%%"$sep"*}"); str=${str#*"$sep"}; done; split+=("$str"); } # usage: split_str SEP STRING # splits STRING on the literal string SEP, populating the array "split". for example: s='foo - bar - baz blah - quux'; split_str ' - ' "$s"; printf '%s\n' "${split[@]}"
created_on: 1346084515
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<splitscreen>
action: /say t=$(mktemp); printf '%s\n' 'screen tail -F somefile' split focus screen > "$t"; screen -S screenname -c "$t"
created_on: 1375812862
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sponge>
action: /say sponge() ( tmp=$(mktemp) && cat > "$tmp" && cat -- "$tmp" > "$1" && rm -- "$tmp"; ) # read and write the same file in a pipeline: grep -v '^#' file | sponge file
created_on: 1414084570
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<spoon>
action: /say We're not here to spoon-feed you, nor are we your private tutor. Try stuff out after reading the urls, and then ask, pasting a cmd into irc, followed by the error msg.
created_on: 1203972777
enabled: 1
owner: igli
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<sprintf>
action: /say Instead of capturing the output of printf, bash's printf can be assigned directly to a variable. printf -v myvarname %04d "$i"
created_on: 1319822799
enabled: 1
last_referenced_in: anonnumberanon
last_referenced_on: 1470213637.44686
owner: e36freak
rate_limit: 10
ref_count: 4
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<sprunge>
action: /say To upload to sprunge from your terminal, use: <command> | curl -F 'sprunge=<-' http://sprunge.us # or see !sprungefunc.
created_on: 1391613388
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490899055.70885
owner: dualbus
rate_limit: 10
ref_count: 436
ref_user: prev!~prev@unaffiliated/prev
type: text

<sprungeform>
action: /say Paste to sprunge from your web browser: http://sprunge.e36freak.com
created_on: 1372661325
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<sprungefunc>
action: /say sprunge() { tail -n +1 -- "$@" | curl -F 'sprunge=<-' http://sprunge.us; } # usage: sprunge file1 file2 ... # or cmd | sprunge
created_on: 1409166721
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490899065.9092
owner: geirha
rate_limit: 10
ref_count: 223
ref_user: prev!~prev@unaffiliated/prev
type: text

<sprungefunction>
action: /call sprungefunc
created_on: 1350325020
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sqlitequote>
action: /say sqlitequote() { printf %s "'${1//\'/''}'"; }; sqlite3 foo.sqlite <<< "UPDATE table SET foo=$(sqlitequote "$foo")"
created_on: 1371668376
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<sry>
action: /call plz
created_on: 1306453322
enabled: 1
owner: nDuff
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<ss-test>
action: /call shellshock-test
created_on: 1411771544
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<ssh>
action: /say Secure SHell (#openssh, http://mywiki.wooledge.org/CategorySsh). To run echo "$localVar" remotely, use: ssh user@host bash < <(printf 'echo %q\n' "$localVar")
created_on: 1429539194
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491052178.24635
owner: llua
rate_limit: 10
ref_count: 208
ref_user: zcram!~urki@gprs-inet-183-144.elisa.ee
type: text

<ssh_original_command>
action: /say openssh's "forced command" receives an SSH_ORIGINAL_COMMAND set to the command passed to "ssh". forced-commands SHOULD NOT try to parse shell code from it. Use it only for entirely custom protocols (akin to internal-sftp) or a non-restrictive wrapper.
created_on: 1417028923
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sshcleanup>
action: /say Cleaning up your remote ssh command: http://stackoverflow.com/questions/3413432
created_on: 1281599200
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<sshconfig>
action: /say openssh configuration files (man ssh_config). Also, see http://cyber.com.au/~twb/.ssh/config.
created_on: 1363061405
enabled: 1
owner: fr33load3r
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sshdd>
action: /say ssh remote dd of=file.on.remote < /dev/sda
created_on: 1233019584
enabled: 1
owner: go|dfish
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<sshkeys>
action: /say http://wooledge.org/mywiki/SshKeys
created_on: 1192822366
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<sshpax>
action: /say You can duplicate an entire directory hierarchy onto a remote host using ssh and pax: cd /source && pax -w . | ssh me@remotebox 'cd /target && pax -r'
created_on: 1391504878
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sshtar>
action: /say You can duplicate an entire directory hierarchy onto a remote host using ssh and tar: cd /source && tar cf - . | ssh me@remotebox 'cd /target && tar xf -'
created_on: 1314125369
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<stack>
action: /say The FUNCNAME array variable contains the names of all the functions in the current function-call stack.
created_on: 1314733652
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<stackoverflow>
action: /say Like virtually every other web site you find via Google, StackOverflow is chock full of wrong answers. Verify everything you read there before using it.
created_on: 1415046744
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488055027.70958
owner: greycat
rate_limit: 10
ref_count: 7
ref_user: badet0s!5cddd6cf@gateway/web/freenode/ip.92.221.214.207
type: text

<stat(1)>
action: /say is a tool some systems have to display metadata on files and file systems. It is NOT recommended for use in scripts since there are no guarantees that systems have stat(1) and even less guarantees that the options of your stat will in any way resemble the options of another's. For file size, use wc, for time checks use test.
created_on: 1364661241
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<status>
action: /say http://wiki.bash-hackers.org/dict/terms/exit_status
created_on: 1371202266
enabled: 1
last_referenced_in: psf
last_referenced_on: 1450058863.69677
owner: ormaaj
rate_limit: 10
ref_count: 25
ref_user: psf!~psf@unaffiliated/couldbe-maybe/x-1604174
type: text

<stderr>
action: /say Standard Error is the secondary file descriptor to which commands print to the terminal. It's meant for messages that shouldn't be parsed by default. Redirect to stderr: '>&2'. See !stdout !stdin and !redirtut for more info.
created_on: 1241488303
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<stdin>
action: /say Standard Input is the file descriptor from which commands can read input. See !stdout !stderr and !redirtut for more info.
created_on: 1238419650
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 30
ref_user: nobody
type: text

<stdout>
action: /say Standard Output is the primary file descriptor to which commands print to the terminal. See !stderr !stdin and !redirtut for more info.
created_on: 1238419541
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<step>
action: /say To step through your code, look into bashdb or put this where you want to begin stepping: trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG
created_on: 1299489763
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<stfw>
action: /say Search The Fucking Web
created_on: 1162494677
enabled: 1
owner: smg
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sth>
action: /say Stop being a lazy git, and/or learn to spell. http://mywiki.wooledge.org/NetEtiquette
created_on: 1297186164
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sticky>
action: /say The "sticky" bit (octal permission bit 01000) on a directory prevents removing other people's files. See http://mywiki.wooledge.org/Permissions#sticky
created_on: 1309196837
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<stopclever>
action: /say “UNIX tools were not designed to stop users from doing stupid things, as that would also stop them from doing clever things.” — Doug Gwyn
created_on: 1415918849
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<strace>
action: /say strace(1) is a linux tool for viewing the system calls applications make. It is invaluable for debugging more complex or stubburn problems. On certain other systems, dtruss(1) might achieve the same thing. To use it, just put strace/dtruss in front of your command.
created_on: 1224278403
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<stream>
action: /say Programs designed to be used on a stream of data include sed and grep.
created_on: 1188812811
enabled: 1
last_referenced_in: profess
last_referenced_on: 1467603308.97359
owner: ivazquez
rate_limit: 10
ref_count: 4
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<strings>
action: /say Bash parameter expansion does lots of string operations. See !faq 100 for info on string operations in bash.
created_on: 1262227479
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<stupid>
action: /say http://web.mit.edu/~simsong/www/ugh.pdf
created_on: 1398024988
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<style>
action: /say Some assorted coding guides, ideas welcome: http://bash-hackers.org/wiki/doku.php/scripting/style google style: https://google-styleguide.googlecode.com/svn/trunk/shell.xml
created_on: 1411991608
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 44
ref_user: nobody
type: text

<su>
action: /say "Switch user". This command either gives you an interactive shell as a different UID, or it allows you to execute a specified command as a different UID. You *do* have to tell it what command you want to run with the other UID, if you're trying to use it in a script. And you MUST give the username! su root -c '/foo/bar baz quux'
created_on: 1157657694
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<sub>
action: /say https://github.com/e36freak/tools/blob/master/sub
created_on: 1374550434
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<subshell>
action: /say http://wooledge.org/mywiki/SubShell
created_on: 1211467919
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sudo*>
action: /call sudofail
created_on: 1393259663
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sudo>>
action: /call sudofail
created_on: 1393259659
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 40
ref_user: nobody
type: text

<sudoedit>
action: /say sudoedit is a wrapper around sudo that allows editing of files not owned by you, which does proper file locking etc. You should use it for editing files in /etc. Equivalent to sudo -e.
created_on: 1384770857
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<sudoers>
action: /say username ALL = NOPASSWD: /some/program
created_on: 1178655651
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<sudofail>
action: /say sudo echo > file -- bash operations such as redirections, glob expansions, etc. are performed by the USER's bash, not by sudo. Consider: `sudo tee file` or `sudo bash -c 'echo > file'`
created_on: 1393259517
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<sudotalk>
action: /say Sudo: You're Doing it Wrong: https://www.youtube.com/watch?v=o0purspHg-o
created_on: 1434819454
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<suid>
action: /say The SUID bit doesn't work on interpretted scripts in Linux. Use sudo or http://pastebin.com/f1967215f: wget -O code.c 'http://pastebin.com/pastebin.php?dl=f1967215f' ; nano code.c ; gcc -o run code.c ; sudo chown root run ; sudo chmod 4755 run
created_on: 1250278984
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 12
ref_user: nobody
type: text

<sum>
action: /say sum the values of the first column: awk '{tot += $1} END {print tot}'
created_on: 1353519279
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 18
ref_user: nobody
type: text

<supercopy>
action: /say supercopy(){ sudo sh -c 'for file in "${@:2}"; do cp "$file" "$1" && chown "$SUDO_UID":"$SUDO_GID" "$1"/"${file##*/}"; done' _ "$@"; } # usage: supercopy destination files [...]; copies all files to destination and changes the copies' ownership to the uid/gid of the invoking user
created_on: 1369984926
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<surgeon>
action: /say <mcantor> I feel like a surgeon who opened up a patient for a hernia procedure only to find that the liver is atrophied, a lung is collapsed and the kidneys have simply been replaced with a Post-It note saying "Sorry"
created_on: 1304524669
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<suspense>
action: /say The suspense is killing us.. do tell ;-) If you figured out a problem you asked us about, it's only polite to share the solution as well as the work. That way other people who didn't know the answer gain something from your time with us. :)
created_on: 1197698024
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<svercmp>
action: /say Simple version comparison in pure bash: https://github.com/dualbus/myscripts/blob/master/svercmp
created_on: 1383924361
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<svg>
action: /say Scalable Vector Graphics, an XML-based vector image format. If someone's got svg questions, they should probably ask me about <xml>.
created_on: 1383077835
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<svn>
action: /say If you're considering removing .svn directories, first read "svn --help export". If you're not convinced, find . -name .svn -prune -exec rm -rf {} +
created_on: 1426532745
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 31
ref_user: nobody
type: text

<svngrep>
action: /say svngrep() { find . -name .svn -prune -o -type f -exec grep "$@" /dev/null {} +; }
created_on: 1289320169
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<swapfd>
action: /say Swap stdout and stderr: 3>&2 2>&1 1>&3 3>&- http://mywiki.wooledge.org/Redirection
created_on: 1424184046
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<syntax>
action: /call grammar
created_on: 1246884278
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<sysreq>
action: /say (#)Bash System Requirements: Common Sense, Notion of the English Language, 90+ IQ.
created_on: 1179521330
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<t>
action: /say !tias - Try it and See
created_on: 1183884174
enabled: 1
last_referenced_in: drozdziak1
last_referenced_on: 1456067100.49626
noembed: 1
owner: ximba
rate_limit: 10
ref_count: 5
ref_user: drozdziak1!~drozdziak@static-ip-77-89-64-94.promax.media.pl
type: text

<t-shirt>
action: /call tshirt
created_on: 1285863430
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<tables>
action: /say i need syntax
created_on: 1409178574
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1480723665.29055
owner: Riviera
rate_limit: 10
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<tabular>
action: /say Programs designed to be used on tabular data include awk, cut, and paste.
created_on: 1188812765
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<tac>
action: /say tac(1) is a non-standard GNU-only command. A POSIX equivalent would be awk '{a[i++]=$0} END {while (i--) print a[i]}'
created_on: 1302830131
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<tar>
action: /say tar is an archiver but not the only one. Usually tar is a good choice (e.g. to duplicate an ENTIRE file system), but if you need fine-grained control, find|cpio or find|pax wins
created_on: 1333544479
enabled: 1
owner: Bronze
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<tcl>
action: /say No, seriously, you can actually use Tcl for *other things* besides expect!
created_on: 1442000065
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<tco>
action: /say # f() if [ "$1" -ge 0 ]; then printf %s "$1"; exec dash -c "${2}f "'$(($1 - 1)) "$2"' _ "$@"; fi; (f 9 "$(typeset -f f)"$'\n'); printf %s\\n ' See: http://mywiki.wooledge.org/WrapperScript http://jeapostrophe.github.com/blog/2012/05/28/exec-vs-system/'
created_on: 1356895040
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<tcpserver>
action: /say Part of ucspi-tcp <http://cr.yp.to/ucspi-tcp.html>, useful for providing easy, robust network services WITHOUT having to be superuser or edit a monolithic inetd.conf file.
created_on: 1257457447
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<teasing>
action: /say No teasing the channel bot.
created_on: 1390073466
enabled: 1
last_referenced_in: awsumpwner27
last_referenced_on: 1471515004.36272
owner: sjohnson
rate_limit: 10
ref_count: 1
ref_user: awsumpwner27!~awsumpwne@wnpgmb0808w-ad04-3-63.dynamic.mtsallstream.net
type: text

<tee>
action: /say tee reads from standard input and writes to standard output *and* one or more files
created_on: 1278616057
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 75
ref_user: nobody
type: text

<telnet>
action: /say "A perfectly good tool for diagnosing issues with SMTP and HTTP servers." -greycat Otherwise, not a secure way to connect to a shell for administrative purposes.
created_on: 1326981343
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<template>
action: /say http://mywiki.wooledge.org/TemplateFiles
created_on: 1239739268
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 144
ref_user: nobody
type: text

<templates>
action: /call template
created_on: 1239739276
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<terminal>
action: /say a hardware device used for user input/output in the early Cretaceous period of computing. Consisted of a primitive TV-like tube which "drew" characters on the screen in fixed positions. Most early terminals were limited to 24 lines high by 80 chars wide. At the time this was considered a miracle of technology.
created_on: 1254004262
enabled: 1
last_referenced_in: dminuoso_
last_referenced_on: 1476167992.46936
owner: bronze
rate_limit: 10
ref_count: 20
ref_user: dminuoso_!~dminuoso@unaffiliated/dminuoso
type: text

<test>
action: /call tests
created_on: 1351637240
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1486829853.76528
owner: ormaaj
rate_limit: 10
ref_count: 23
ref_user: root_guix!~root@13-36-179-94.pool.ukrtel.net
type: text

<test-f>
action: /say # help test | grep -- -f
created_on: 1396547551
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<testing>
action: /say Testing is for *you*. PLAY with the code, work out what it means; short snippets show the idea. /msg greybot tias ;-)
created_on: 1205125691
enabled: 1
owner: igli
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<tests>
action: /say Use [[ .. ]] for testing strings or files, (( .. )) for testing numbers and 'if ..'' for testing commands. Do *NOT* use [ .. ] in bash (only in sh). See <http://mywiki.wooledge.org/BashSheet#Tests> and <http://mywiki.wooledge.org/tests>. Difference between [ and [[: <http://mywiki.wooledge.org/BashFAQ/031>
created_on: 1396288533
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1486829853.77758
owner: geirha
rate_limit: 10
ref_count: 941
ref_user: root_guix!~root@13-36-179-94.pool.ukrtel.net
type: text

<testx>
action: /say http://www.in-ulm.de/~mascheck/various/test/
created_on: 1411757183
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<text>
action: /say Give us a sample input line, and tell us what you want the output to be.
created_on: 1182554021
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<thanks>
action: /say Don't thank me, I'm a bot. Did you mean to thank greycat?
created_on: 1193321813
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 40
ref_user: nobody
type: text

<thebasics>
action: /say People in #bash are here to help others work through problems and chellenges and direct people in learning. This isn't a 101 classroom, though. If you don't know the basics, read the guide.
created_on: 1414876006
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<theory>
action: /say The difference between theory and practice? In theory there is no difference. In practice there is.
created_on: 1391536453
enabled: 1
owner: emg
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<thequestion>
action: /say [[ $question =~ (bb|[^b]{2}) ]]
created_on: 1195287345
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<thompson>
action: /say The Thompson shell was the predecessor to the Bourne (q.v.) shell, used in versions of Unix prior to 7th edition. A modern port of the Thompson shell is available at http://v6shell.org/ .
created_on: 1250399077
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<threads>
action: /say https://github.com/e36freak/templates/blob/master/threads
created_on: 1353377188
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<thx>
action: /say THX? That digital audio thing they use in movies? Oh, wait, you want http://yaku.dk/s/irc/dont-use-thx-sry-plz.txt or section 1.1 of http://mywiki.wooledge.org/NetEtiquette
created_on: 1417237901
enabled: 1
owner: dualbus
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<tias>
action: /say Try It And See
created_on: 1183109560
enabled: 1
last_referenced_in: mag__
last_referenced_on: 1452545894.46238
owner: igli
rate_limit: 10
ref_count: 3
ref_user: mag__!~mag@179.52.239.182
type: text

<tias2>
action: /say Try It And See, But Don't Try rm -rf / As Root
created_on: 1171815120
enabled: 1
owner: VImtermute
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<tib>
action: /say Try it before you buy it! Make small one liners on the command line to make sure you understand what and how you are using an idea before you stick it the middle of a complex script.
created_on: 1198683370
enabled: 1
owner: savetheWorld
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<time>
action: /say ''time'' is a bash builtin, see ''help time''. There may also be a time command installed on the system, documented in ''man time'' -- see !faq 86 to bypass bash's builtin time command, or !faq 32 to redirect the output of the builtin to a file.
created_on: 1354127219
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481506325.61128
owner: nDuff
rate_limit: 10
ref_count: 73
ref_user: klys!~mdasoh@45.55.20.239
type: text

<timeout>
action: /say http://mywiki.wooledge.org/BashFAQ/068 -- How do I run a command, and have it abort (timeout) after N seconds?
created_on: 1361395078
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 52
ref_user: nobody
type: text

<timestamp>
action: /say exec > >(trap : 1 2 3 15 ; while IFS= read -r x ; do printf '%(%F%T)T %s\n' -1 "$x" ; done >>/var/log/mylog) 2>&1 # requires bash4.2 or later
created_on: 1433929182
enabled: 1
owner: llua
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<timingpe>
action: /say val=$'foo\n'; { time for ((i=0;i<2000;++i)) ; do echo "${val%$'\n'}" ; done >/dev/null; } 2> >(tr '\n\t' ' ')
created_on: 1261368495
enabled: 1
owner: tuxdev_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<timingpipe>
action: /say val=$'foo\n'; { time for ((i=0;i<50;++i)) ; do echo "$val" | tr -d '\n'; done >/dev/null; } 2> >(tr '\n\t' ' ')
created_on: 1261368366
enabled: 1
owner: tuxdev_
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<timtowtdi>
action: /say There Is More Than One Way To Do It
created_on: 1217967692
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<timtowtdiamotwaw>
action: /say There is More Than One Way To Do It And Most Of Those Ways Are Wrong
created_on: 1260819539
enabled: 1
owner: tuxdev
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<tiocsti>
action: /say The TIOCSTI ioctl() command lets you insert input into a terminal driver's queue. "Simulate Terminal Input".
created_on: 1259182705
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<title>
action: /say You can change xterm titles with something like: printf '\e]2;%s\a' "title goes here"
created_on: 1251590569
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<tlcl>
action: /say The Linux Command Line (book by William Shotts). A good guide to the command line in general, but not a fantastic example for good Bash practices: http://www.linuxcommand.org/tlcl.php and http://sourceforge.net/projects/linuxcommand/files/TLCL/13.07/TLCL-13.07.pdf/download
created_on: 1399646410
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<tldp>
action: /say the tldp bash guide is outdated, and in some cases just plain wrong. There's a reason it isn't in the topic.
created_on: 1219240539
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<tldr>
action: /say Too long, didn't read.
created_on: 1241625283
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<tmpfile>
action: /say will probably be gone next boot
created_on: 1426765627
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<tmux>
action: /say tmux has its own channel: #tmux
created_on: 1365822483
enabled: 1
owner: cthuluh
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<tolower>
action: /say To make a variable lowercase, you can use Bash 4 parameter expansion: ${var,,}
created_on: 1376349754
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<tools>
action: /say We're not tools. We're just trying to tell you that you're using the wrong ones.
created_on: 1183679663
enabled: 1
last_referenced_in: dozn
last_referenced_on: 1480199400.26445
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: dozn!~dozn@104.236.154.251
type: text

<topic2>
action: /say FAQ: http://mywiki.wooledge.org/BashFAQ | Guide: http://mywiki.wooledge.org/BashGuide | ref: http://xrl.us/bhk9ww | http://wiki.bash-hackers.org/ | USE MORE QUOTES!: http://www.grymoire.com/Unix/Quote.html | Scripts and more: http://www.shelldorado.com/ | New official help mailing list: http://tx0.org/31f
created_on: 1325872062
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<torrent>
action: /say http://mywiki.wooledge.org/TorrentParser
created_on: 1320341290
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<toupper>
action: /say To make a variable uppercase, you can use Bash 4 parameter expansion: ${var^^}
created_on: 1376349735
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454897361.46143
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: doppel!~doppel@ip68-96-235-191.lv.lv.cox.net
type: text

<toys>
action: /say http://mywiki.wooledge.org/Toys
created_on: 1315489568
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1448162648.96092
owner: lhunath
rate_limit: 10
ref_count: 10
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<tp>
action: /say Comparison of popular transfer protocols: http://winscp.net/eng/docs/protocols#protocol_comparison
created_on: 1248138746
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<tpgrp>
action: /say every process has a PID, a process group (PGRP, which is its own PID, or the PGRP inherited ftom its parent), and a session (SID). All processses in a PGRP have the same SID. A terminal has a session & a foreground process group (which must be in the same SID). If the terminal's SID changes, all the processes with that SID get SIGHUP. If you type ctrl-C or ctrl-Z then the PGRP gets SIGINT or SIGTSTP
created_on: 1390561568
enabled: 1
owner: kurahaupo_mobile
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<tput>
action: /say Do NOT hardcode terminal escape sequences. Use tput with the sequence names from man terminfo to get the right code for your terminal. Eg. red=$(tput setaf 1); echo "Hello ${red}world!" # Variables example: http://to.lhunath.com/bashlib#L210 more info at http://www.gnu.org/software/termutils/
created_on: 1427210577
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<trap>
action: /say http://mywiki.wooledge.org/SignalTrap ## To clean up on exit, don't trap a bunch of signals. Instead, trap cleanupFunc EXIT
created_on: 1319481191
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1454851192.20664
owner: greycat
rate_limit: 10
ref_count: 211
ref_user: masoudd!~masoudd@5.117.135.115
type: text

<triggers>
action: /say /msg shbot # triggers
created_on: 1417212585
enabled: 1
owner: dmnc
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<trim>
action: /say trim whitespace, like SQL TRIM() -- For shell variables: «shopt -s extglob; x=${x##+([[:space:]])} x=${x%%+([[:space:]])}». For streams: «cmd | sed 's/^[[:space:]]*//; s/[[:space:]]*$//'». See: http://mywiki.wooledge.org/BashFAQ/067
created_on: 1413834488
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 24
ref_user: nobody
type: text

<trirandom>
action: /say # x[1]='x[$(echo $RANDOM >&2)]'; typeset -ia x; : "${x[x[1]]:=x[1]}"
created_on: 1375577655
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<trivial>
action: /say Trivial examples only tend to prompt trivial suggestions.
created_on: 1269287535
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471221111.75428
owner: yitz_
rate_limit: 10
ref_count: 1
ref_user: doppel!~chatzilla@ip70-189-197-158.lv.lv.cox.net
type: text

<troll>
action: /say http://en.wikipedia.org/wiki/Troll_%28Internet%29
created_on: 1351407346
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284867.50888
owner: sjohnson
rate_limit: 10
ref_count: 14
ref_user: protege!~shynoob@182.59.209.11
type: text

<tsaap>
action: /say The Standard Associative Array Problem: "I have two files, one of which defines keys and values, and I want to iterate through the second file and replace all the keys with their values."
created_on: 1305231088
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<tshirt>
action: /say "You were treated harshly in #bash? well, it happens. Here's your T-shirt. It says: Been there, had that done to me."
created_on: 1180809722
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1480944024.12011
owner: savetheWorld
rate_limit: 10
ref_count: 15
ref_user: vclam!~unknown@c-24-11-122-3.hsd1.ut.comcast.net
type: text

<tty>
action: /say "tty" originally stood for teletype, a primitive keyboard+printer which was the forerunner of the ASCII terminal. Nowadays it is used generically to mean "some kind of terminal", usually a pseudoterminal (X terminal emulator, Linux console, etc.). http://www.linusakesson.net/programming/tty/
created_on: 1417746458
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<turing>
action: /say What makes you think I'm a bot?
created_on: 1261143387
enabled: 1
owner: bronze
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<tutorial>
action: /say A list of tutorials can be found here: http://wiki.bash-hackers.org/scripting/tutoriallist
created_on: 1309530239
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 27
ref_user: nobody
type: text

<tutorials>
action: /call tutorial
created_on: 1335733502
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 38
ref_user: nobody
type: text

<ty>
action: /call plz
created_on: 1298917351
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<type>
action: /say type tells you how a command will be interpreted by the shell. Don't use 'which'; use 'type' instead, because it's portable and consistent.
created_on: 1374326817
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 40
ref_user: nobody
type: text

<type-foo>
action: /say When someone tells you to do "type foo", that means 1) put your hands on the keyboard 2)key-in "type foo", without the quotes :-)
created_on: 1389062850
enabled: 1
owner: Jetchisel
rate_limit: 10
ref_count: 9
ref_user: nobody
type: text

<typeset>
action: /say Set variable values and attributes. Obsolete. See '!declare'.
created_on: 1417555666
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<tyvm>
action: /say yw
created_on: 1182437148
enabled: 1
owner: penos
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<u>
action: /say Spanish word for "or", variant used when preceding an "o" sound. If you meant "you", please see http://mywiki.wooledge.org/NetEtiquette
created_on: 1283887764
enabled: 1
noembed: 1
owner: greycat
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<udq>
action: /say USE DIFFERENT QUOTES! The shell won't expand variables or globs inside a single-quoted string, try double-quotes instead
created_on: 1202632195
enabled: 1
owner: SiegeX6
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<ugh>
action: /say The Unix-Haters Handbook <http://web.mit.edu/~simsong/www/ugh.pdf>
created_on: 1364964696
enabled: 1
last_referenced_in: kerr
last_referenced_on: 1452549697.14773
owner: mattcen
rate_limit: 10
ref_count: 3
ref_user: Kerr!~Kerr@cpe-98-145-82-51.natnow.res.rr.com
type: text

<ugt>
action: /say Universal Greeting Time http://thinkmoult.com/ugt.html
created_on: 1394730934
enabled: 1
owner: emg
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<ulimit>
action: /say ulimit is bash's interface to the setrlimit()/getrlimit() system calls. Resource limits are inherited by child processes, just like environment vars.
created_on: 1272653987
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 16
ref_user: nobody
type: text

<ultimate>
action: /call penultimate
created_on: 1391692055
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<umask>
action: /say The umask is the set of permissions bits you do NOT want on newly created files. See http://wooledge.org/mywiki/Permissions
created_on: 1189003091
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<umq>
action: /call quotes
created_on: 1253110770
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481064478.86972
owner: lhunath
rate_limit: 10
ref_count: 9
ref_user: emg!~emg@74-123-189-254.static.wiline.com
type: text

<umq2>
action: /say Use more quotes, not just when assigning variables. Try these examples: WRONG: Var="/* is two punctuation marks" && echo $Var ; RIGHT: Var="/* is two punctuation marks" && echo "$Var"
created_on: 1303163441
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<unary>
action: /say "unary operator expected" typically means you forgot to quote something. [ $foo = bar ] is wrong. [ "$foo" = bar ] is OK.
created_on: 1317754790
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<unbuffer>
action: /say stdbuf runs commands with modified buffering operations. man stdbuf(1)
created_on: 1355277061
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<uncolour>
action: /say uncolour() { sed -e $'s/\e[[][\\0-\\077]*m//g'; }
created_on: 1292163877
enabled: 1
owner: ferret
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<undefine>
action: /call unset
created_on: 1314631794
enabled: 1
owner: HawkI
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<understand>
action: /say Those who do not understand UNIX are condemned to reinvent it, poorly. --Henry Spencer
created_on: 1249669278
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<unicode>
action: /say Dealing with characters correctly is harder than you might think. eg. a-z does NOT mean "all lowercase letters". http://stackoverflow.com/a/6163129/58803 (skip down to "Assume Brokenness") is an *excellent* introduction to these misunderstandings.
created_on: 1344015874
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<uniq>
action: /say is a utility for removing or reporting repeated lines. uniq will only work for showing unique lines when used with sorted input (sort | uniq). Alternatively, use sort -u. awk '!s[$0]++' is an order-insensitive alternative.
created_on: 1398726929
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 62
ref_user: nobody
type: text

<uniqarray>
action: /say # typeset -a a=(a b c c d d d e f '' '' _ _); o=$(typeset -p a); typeset -A vals; for key in "${!a[@]}"; do ((vals[_${a[key]}]++)) && unset -v 'a[key]'; done; printf 'before: %s\nafter: %s\n' "$o" "$(typeset -p a)"
created_on: 1395680824
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<unix>
action: /say You should be fully aware that when people say Unix they do not necessarily mean "The copyrighted proprietary operating system currently owned by AT&T or Novell or SCO or Cisco or whoever the fuck owns the copyright at this particular instant of time", but rather the whole FUCKING SPECTRUM OF UNIX-LIKE OSES including AIX, HP-UX, Linux, BSD, Solaris, etc.
created_on: 1303500958
enabled: 1
owner: neurolysis
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<unquoted>
action: /say Unquoted $@ and $* give unspecified behavior (as far as we can tell). Always quote them. A partial list of various unquoted behaviors by shell is here: http://wiki.bash-hackers.org/syntax/pe#bugs_and_portability_considerations
created_on: 1357712918
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<unset>
action: /say Unset undefines a variable or function from the current shell process. See: http://wiki.bash-hackers.org/commands/builtin/unset http://fvue.nl/wiki/Bash:_Unset. Testing if a variable is set: [[ ${var+_} ]]. See !isset
created_on: 1333508345
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 49
ref_user: nobody
type: text

<until>
action: /say Same as "while ! { list; }; do ..."
created_on: 1319432723
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<upload>
action: /say If you're asking "How can I find all the files that have been uploaded recently?" then you're probably in deep trouble. The server side can't tell when a file is finished uploading unless the client renames it or uploads an "all done" file afterward.
created_on: 1237220725
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<upstart>
action: /say Ubuntu doesn't use System V init like you probably expected. It uses "upstart" instead. See http://upstart.ubuntu.com/ or ask in #ubuntu.
created_on: 1315587970
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<upvar>
action: /say see: http://fvue.nl/wiki/Bash:_Passing_variables_by_reference also: http://wiki.bash-hackers.org/commands/builtin/unset#scope and http://wiki.bash-hackers.org/syntax/arrays#indirection and http://mywiki.wooledge.org/BashFAQ/006#Assigning_indirect.2BAC8-reference_variables
created_on: 1355930418
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<uri>
action: /say pout(){ local field; for field in "${line[@]}"; do [[ $field =~ $re ]] && echo "$field"; done;}; uri_search(){ local LC_ALL=C re='^[A-Za-z][A-Za-z0-9+-\.]*://' file=; local -a line; for file; do while read -r -a line; do pout; done < "$file"; [[ "${line[@]}" ]] && pout; done;} # Usage: uri_search file ...; prints absolute URIs contained in given files
created_on: 1362539621
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<url>
action: /call uri
created_on: 1362534923
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<urldecode>
action: /say https://gist.github.com/1163649
created_on: 1345155774
enabled: 1
owner: cdown
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<urlencode>
action: /say https://gist.github.com/887e74e74877c7613920
created_on: 1438249891
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 21
ref_user: nobody
type: text

<urlquote>
action: /say Prepare literal data for injection into a URL path component or GET attribute: urlquote() { local c; while IFS= read -rd '' -n1 c; do printf '%%%02x' "'$c"; done <<< "$1"; }; curl "http://www.google.com/search?q=$(urlquote "$query")"
created_on: 1340009907
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 28
ref_user: nobody
type: text

<us-intl>
action: /say If you are using a Linux desktop, and want to type symbols such as «french-quotes» “double-quote” and ‘single-quotes’, then set your keyboard type to "US International", and then use AltGr with [ ] { } 9 0 respectively
created_on: 1383887866
enabled: 1
owner: kurahaupo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<useawk>
action: /say Stuff with lines? Use awk. ;)
created_on: 1181927970
enabled: 1
owner: VImtermute
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<usecase>
action: /say What is the *REAL* (non-technical) problem or issue you are trying to address? Describe it clearly and concisely using little or no technical terminology, command names, etc. A concise explanation of *WHY* you are doing what you are doing is equally helpful.
created_on: 1363893033
enabled: 1
owner: fr33loader
rate_limit: 10
ref_count: 52
ref_user: nobody
type: text

<users>
action: /say http://wooledge.org/mywiki/BashFaq -- Why don't users ever read the FAQ themselves? Why do I always have to grep the whole file for their questions? Huh? Doesn't anyone ever think of the bot?
created_on: 1170963902
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<using>
action: /say "How can I do X using Y?" NEVER ask a question of that form. Y may not be the best way to do X. All you should ask is, "How do I do X?"
created_on: 1160747454
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482207888.79783
owner: greycat
rate_limit: 10
ref_count: 233
ref_user: mthowe!~morganh@unaffiliated/mthowe
type: text

<usingfind>
action: /call find
created_on: 1419366279
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<usleep>
action: /say echo "int main(int argc,char *argv[]){if(argc==2)usleep(atol(argv[1]));}" > usleep.c; make usleep
created_on: 1214327440
enabled: 1
owner: biz
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<utmp>
action: /say The 'utmp' file and all the commands that read it (who, w, etc.) is useless legacy crap. Yay, truncated hostnames!
created_on: 1286220225
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<utsl>
action: /say Use The Source, Luke. See ftp://ftp.gnu.org/pub/gnu/bash/
created_on: 1297759626
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<uuoc>
action: /say Useless Use of Cat (cat foo | grep bar). See http://www.iki.fi/era/unix/award.html#cat
created_on: 1423731450
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<uuoe>
action: /say Unnecessary use of echo -- "echo foo | bar" uses a pipe, which generates an implicit subshell, which changes the variable scope. Pipes are also expensive. Use a here string instead: "bar <<< foo". See http://wooledge.org:8000/BashPitfalls
created_on: 1232569364
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 26
ref_user: nobody
type: text

<uuog>
action: /say useless use of greybot
created_on: 1336481605
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<uuok>
action: /say Unsafe Use of Kill: kill -9 sends SIGKILL to a process which is the exact same thing as normal kill (SIGTERM), except that it prevents the process from cleaning up after itself. You do NOT want to use it. See http://partmaps.org/era/unix/award.html#uuk9letter
created_on: 1210188318
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481635448.13409
owner: lhunath
rate_limit: 10
ref_count: 17
ref_user: slidercrank!~slidercra@unaffiliated/slidercrank
type: text

<uuop>
action: /say useless use of pastebins
created_on: 1336485978
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<uuoq>
action: /say useful use of quotes
created_on: 1300572876
enabled: 1
owner: gniourf_gniourf
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<uuos>
action: /say Useless use of sbot.
created_on: 1340353453
enabled: 1
owner: juanmabc
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<uwiz>
action: /say What you said is so much better than what I said and I defer to your wisdom.
created_on: 1301169674
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<v7>
action: /say Seventh Edition Unix (V7, 1979), introduced the Bourne shell, which replaced the earlier Thompson shell. If your script needs to work on pre-POSIX Unix systems, V7 is a good portability target. A full tree of V7, including source and man pages, may be found at http://minnie.tuhs.org/UnixTree/V7/ .
created_on: 1208465676
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<vaccuumdb>
action: /say VACCUUM
created_on: 1221004577
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<vagueness>
action: /say VAGUENESS CAUSES HEART DISEASE!
created_on: 1151075489
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<varcap>
action: /say By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables.
created_on: 1391533215
enabled: 1
last_referenced_in: prev
last_referenced_on: 1488623696.3123
owner: lhunath
rate_limit: 10
ref_count: 1086
ref_user: prev!~prev@unaffiliated/prev
type: text

<varcaps>
action: /call varcap
created_on: 1354541023
enabled: 1
last_referenced_in: prev
last_referenced_on: 1488623696.29841
owner: geirha
rate_limit: 10
ref_count: 399
ref_user: prev!~prev@unaffiliated/prev
type: text

<vardata>
action: /say 1. Do NOT put commands or variable names INSIDE variables; use a function or write it out in your script. 2. Do NOT put multiple filenames inside a string; use arrays. 3. Remember to quote every expansion of your variables to protect their data.
created_on: 1214572768
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<variables>
action: /say to see all your shell variables, type set
created_on: 1279035594
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 44
ref_user: nobody
type: text

<vars>
action: /say There are two types of variables. Most variables in bash are Shell Variables (foo=bar). They exist only in the running shell and are inherited by subshells. Environment Variables (export foo=bar) are variables that exist in every process. They are NOT global, every child gets a fresh copy of the parent's whole environment. http://mywiki.wooledge.org/Environment
created_on: 1391135139
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<vi>
action: /say Vi is an editor. Use it in scripts like this: vi -c 's/foo/bar/|x' file -- See http://www.opengroup.org/onlinepubs/009695399/utilities/vi.html
created_on: 1204050455
enabled: 1
last_referenced_in: spi
last_referenced_on: 1486595733.04489
owner: lhunath
rate_limit: 10
ref_count: 23
ref_user: spi!32872e55@gateway/web/freenode/ip.50.135.46.85
type: text

<vi-mode>
action: /say To use vi-style editing in bash, set -o vi
created_on: 1299777098
enabled: 1
last_referenced_in: guest57093
last_referenced_on: 1475166810.44156
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: Guest57093!~jasondock@unaffiliated/jasondockers
type: text

<visual>
action: /say http://unix.stackexchange.com/a/4861/10762
created_on: 1420566274
enabled: 1
last_referenced_in: cousteau-
last_referenced_on: 1468332811.23958
owner: cdown
rate_limit: 10
ref_count: 1
ref_user: cousteau-!869356f3@gateway/web/freenode/ip.134.147.86.243
type: text

<vocab>
action: /call vocabulary
created_on: 1300131991
enabled: 1
owner: kwtm
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<vocabulary>
action: /say read and memorize the terms/names used on the bash man page. When you use the bash names for things correctly you'll get 800% better results in #bash, and reduce our work correspondingly!
created_on: 1300131323
enabled: 1
owner: HawkI
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<vt100>
action: /say ANSI X3.64 is a terminal control code standard supported by most modern terminals. VT100 is a subset implemented by DEC's VT100/102. DO NOT hardcode codes, use tput(1) instead (eg. red=$(tput setaf 1)). Many different terminals use slightly different codes, tput finds the right code for the job. http://unix.stackexchange.com/a/5802 http://wiki.bash-hackers.org/scripting/terminalcodes
created_on: 1426690581
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 60
ref_user: nobody
type: text

<vuln>
action: /say Yes, we know. Read the topic.
created_on: 1411586776
enabled: 1
last_referenced_in: korans
last_referenced_on: 1462294401.0204
owner: [arx]
rate_limit: 10
ref_count: 4
ref_user: korans!~korans@62.68.162.144
type: text

<vuln2>
action: /say preliminary patches: http://seclists.org/oss-sec/2014/q3/734
created_on: 1411746295
enabled: 1
owner: shellshock
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<wag>
action: /say I'm guessing that WAG means Wild-Ass Guess.
created_on: 1354740360
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<wait>
action: /say By default, wait waits for all of your shell's children to exit. If arguments are specified, wait waits for the specified job ids to exit. # http://mywiki.wooledge.org/ProcessManagement
created_on: 1326055773
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 32
ref_user: nobody
type: text

<want>
action: /say And I want a pink unicorn lollipop magic wand!
created_on: 1287769423
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 19
ref_user: nobody
type: text

<warn>
action: /say warn() { printf '%s\n' "$@" >&2; } -- also see !faq 101
created_on: 1260999474
enabled: 1
last_referenced_in: dminuoso_
last_referenced_on: 1476439730.65919
owner: kojiro
rate_limit: 10
ref_count: 3
ref_user: dminuoso_!~dminuoso@unaffiliated/dminuoso
type: text

<watch>
action: /say watch() { local t=$1; shift; while sleep $t; do clear; "$@"; done; }
created_on: 1379833055
enabled: 1
owner: zendeavor
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<watchfunc>
action: /call watchquote
created_on: 1359478885
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<watchquote>
action: /say to help understand how watch(1) handles quotes/parsing, think of it as running this: watch() { sh -c "$*"; while sleep 2; do sh -c "$*'; done; }
created_on: 1345490563
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<wayrttd>
action: /say What are you /REALLY/ trying to do!?
created_on: 1356324690
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 192
ref_user: nobody
type: text

<wayttd>
action: /say What Are You Trying To Do?
created_on: 1216437933
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<wc>
action: /say wc(1) is a command that counts words, or lines, or characters in files. If you redirect the file as stdin, it doesn't print the name. Very useful. Example: if (( $(wc -l < "$file") > 10 )); then ...
created_on: 1180124419
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<wc-c>
action: /say A portable method of finding a file's byte-size is: read size _ < <(wc -c file); or the "hack": size=($(wc -c file))
created_on: 1367006019
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<wdyrwtd>
action: /say See !wayrttd
created_on: 1390775348
enabled: 1
owner: David-A
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<weakness>
action: /say http://mywiki.wooledge.org/BashWeaknesses
created_on: 1234209297
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 71
ref_user: nobody
type: text

<weaknesses>
action: /call weakness
created_on: 1236356645
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 29
ref_user: nobody
type: text

<weakpoints>
action: /call weakness
created_on: 1255150710
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<wedontcare>
action: /say We don't care what your name is... we don't care where you live... we don't care how old you are. Ask your question or leave.
created_on: 1186131946
enabled: 1
owner: ivazquez
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<wfm>
action: /say Works For Me!
created_on: 1269369778
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 17
ref_user: nobody
type: text

<wget>
action: /say wget has a man page. Hint: this channel is not it.
created_on: 1185375966
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<what>
action: /say Tell us WHAT you want to do, not HOW you're trying to do it.
created_on: 1211398620
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<which>
action: /say which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use (from most to least portable) ''command -v'' or ''type -P'' (to find the path) or ''hash'' (to check) instead. See http://mywiki.wooledge.org/BashFAQ/081
created_on: 1307625547
enabled: 1
last_referenced_in: tjt263
last_referenced_on: 1490964948.88244
owner: neurolysis
rate_limit: 10
ref_count: 296
ref_user: tjt263!~tjt263@unaffiliated/tjt263
type: text

<whichshell>
action: /call interpreter
created_on: 1398437264
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<while>
action: /say The while-loop structure: http://bash-hackers.org/wiki/doku.php/syntax/ccmd/while_loop
created_on: 1228257423
enabled: 1
last_referenced_in: daegontaven
last_referenced_on: 1479816337.18167
owner: TheBonsai
rate_limit: 10
ref_count: 63
ref_user: daegontaven!~daegontav@greycadet/staff/daegontaven
type: text

<whilefind>
action: /say To iterate over find results safely: while IFS= read -r -d '' file; do ...your code...; done < <(find ...your predicates... -print0)
created_on: 1393469840
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<whileread>
action: /say A while loop that reads line-by-line: while IFS= read -r line; do something "$line"; done
created_on: 1400634038
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 23
ref_user: nobody
type: text

<whine>
action: /say why do channel helpers have to whine whenever someone asks a question? Maybe he doesn't know his answer is in the parameter expansion secion of some 100k line faq or man page. Stop wasting everyone's bandwidth and type /exit if people asking for help bothers you so much.
created_on: 1180832485
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<whinge>
action: /say "With Free Software you either do, or you wait." whinging doesn't work, and leads to being ignored ;)
created_on: 1187666751
enabled: 1
owner: igli
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<whitespace>
action: /say Sometimes whitespace is necessary, eg after [ and [[ and before ] and ]]. Othertimes it breaks stuff eg in {1..9}
created_on: 1238352919
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 20
ref_user: nobody
type: text

<whoami>
action: /say whoami is not a standard command, use the more portable "id -un" instead. bash offers UID and EUID, and your system the LOGNAME environment variable.
created_on: 1394900483
enabled: 1
owner: Riviera
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<why>
action: /say Trying to solve a problem without first understanding why it happens or what you really want will always yield you a broken result. Explain the WHY to us (or to yourself) in detail first.
created_on: 1290783080
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<whynot>
action: /say You can THINK whatever you want, and then when you're done fantasizing, you can read the documentation that tells you what actually does work.
created_on: 1186172112
enabled: 1
owner: igli
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<whynotls>
action: /say as ls -F, ls -q, -> on symlinks, date and time formats varying between locales, date and time formats depending on the age of the file in the POSIX locale, spaces in the user name, spaces in the group name, spaces in the filename, newlines in the filename (more or less unfixable), groups might not even be displayed, probably more....
created_on: 1198183951
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<wiki>
action: /say http://wooledge.org/mywiki/ - http://bash-hackers.org/wiki/
created_on: 1181277998
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612513.76358
owner: TheBonsai
rate_limit: 10
ref_count: 30
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<wikitarball>
action: /say # echo wget http://wooledge.org/mywiki.wooledge.org-$(date +%Y%m01).tar.bz2
created_on: 1400847927
enabled: 1
owner: pgas
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<will>
action: /say "When there's a will, there's a way..."
created_on: 1379661264
enabled: 1
owner: sjohnson
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<window_scaling>
action: /say Users of Linux 2.6.8+ kernels, beware! I live on a part of the Internet behind a router with the TCP window scaling bug, and Linux 2.6.8+ makes it impossible to reach me. Read <http://lwn.net/Articles/92727/> for details and workaround.
created_on: 1151427747
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<wiyug>
action: /say What is your *ultimate* goal? Think *big* without telling us how you want the goal achieved.
created_on: 1356744905
enabled: 1
owner: fr33load3r
rate_limit: 10
ref_count: 14
ref_user: nobody
type: text

<words>
action: /say Some words about words: http://wiki.bash-hackers.org/syntax/words and http://mywiki.wooledge.org/WordSplitting
created_on: 1362528598
enabled: 1
owner: BlastHardcheese
rate_limit: 10
ref_count: 54
ref_user: nobody
type: text

<wordsplitting>
action: /say echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo"
created_on: 1242638629
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 208
ref_user: nobody
type: text

<work>
action: /say In this context, the word "work" is misleading. We're here looking for solutions, not hacks. Be specific about what you need, and try to let go of how you think it should be done.
created_on: 1257341884
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 8
ref_user: nobody
type: text

<workaround>
action: /say Don't work around the problem. Fix the problem. Or you'll end up with more problems.
created_on: 1278788339
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<works>
action: /say You might think some suggestions appear superfluous, but we aren't making this stuff up. It's risky to parse ls, top and ps, and quotes are important. You care about your script more than we do, so try to understand why we made the suggestion instead of just repeating what seems to work to you.
created_on: 1185902540
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<worship>
action: /say We all worship POSIX and never question POSIX
created_on: 1426260276
enabled: 1
owner: gniourf
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<wrapper>
action: /say http://wooledge.org/mywiki/WrapperScript
created_on: 1212087668
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 63
ref_user: nobody
type: text

<ws>
action: /say http://wooledge.org/mywiki/WordSplitting
created_on: 1217879461
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 77
ref_user: nobody
type: text

<x>
action: /say Repeat $str $n times # for ((i=1;i<=n;i++)); do printf %s "$str"; done # printf -v tmp %${n}s ''; echo "${tmp// /$str}" # eval printf "'%.0s$str'" {1..$n} # Be sure $str is safe for whatever your code does with it!
created_on: 1257959323
enabled: 1
noembed: 1
owner: greycat
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<x++>
action: /say postincrement and postdecrement alter the variable but yield the value from BEFORE the modification
created_on: 1410300845
enabled: 1
noembed: 1
owner: kurahaupo
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<x11>
action: /say In order for programs to do something involving X11, the program needs to know which X11 to connect with and how to connect with it. This is usually done by setting the DISPLAY environment variable, eg DISPLAY=:0 command
created_on: 1391908488
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<xargs>
action: /say xargs(1) is dangerous (broken, exploitable, etc.) when reading non-NUL-delimited input. If you're working with filenames, use find's -exec [command] {} + instead. If you can get NUL-delimited output, use xargs -0. Otherwise, you probably want a while read or for loop instead.
created_on: 1421865307
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 397
ref_user: nobody
type: text

<xargsbug>
action: /say # touch "I don't want to miss a thing.mp3"; find * | xargs -n1 rm # By default, xargs(1) breaks on whitespace (making it rm "I" instead of the song) and quotes (the ' in don't).
created_on: 1258636105
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 5
ref_user: nobody
type: text

<xclient>
action: /say In order to run an X client program from outside an X session, you need two things: a valid DISPLAY variable (export it in your script), and a means of authenticating to the X server. The latter can often be done with "export XAUTHORITY=~whomever/.Xauthority". The former requires witchcraft.
created_on: 1239387433
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<xclip>
action: /say is a tool to manipulate the X11 clipboard. xclip -o to print the clip and -i to set it. Not bash.
created_on: 1258343777
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<xcushell>
action: /say http://www.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
created_on: 1255150099
enabled: 1
owner: \amethyst
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<xdebug>
action: /say Read some assorted debugging tips: http://bash-hackers.org/wiki/doku.php/scripting/debuggingtips
created_on: 1253165227
enabled: 1
owner: TheBonsai
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<xmb>
action: /say special
created_on: 1285183061
enabled: 1
owner: kojiro
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<xml>
action: /say You can't parse structured languages like HTML or XML using bash, grep, sed, cut, etc. Look into xmllint, xmlstarlet, xpath, xsltproc, ... Eg. xmllint --xpath '//person[@name="bob"]/salary/text()' - <<< '<staff><person name="bob"><salary>70000</salary></person></staff>' -- Ask #xml for XPath/XSLT help, that is not a #bash question.
created_on: 1382018931
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 323
ref_user: nobody
type: text

<xmlget>
action: /say Retrieve an XML value: xmlstarlet sel -t -v 'staff/person[@name="bob"]' <<< '<staff><person name="bob">70000</person></staff>'
created_on: 1415811082
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 11
ref_user: nobody
type: text

<xmlset>
action: /say Update an XML value: xmlstarlet ed -P --update 'staff/person[@name="bob"]' -v 80000 <<< '<staff><person name="bob">70000</person></staff>' # use -L to update a file in-place.
created_on: 1415811251
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<xterm>
action: /say xterm is an X client program which implements a terminal emulator. It mostly mimics the VT102, with some extensions. Some vendors even added color, so "xterm" as a terminfo label is extremely ambiguous. To set the xterm title bar: settitle() { printf '\e]2;%s\a' "$1"; }
created_on: 1305819860
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 7
ref_user: nobody
type: text

<xtracefd>
action: /say In bash 4.x, the shell variable BASH_XTRACEFD allows you to specify a different file descriptor for xtrace (set -x) output. This can be useful when you want to redirect it elsewhere, without affecting the rest of stderr.
created_on: 1309542286
enabled: 1
owner: e36freak
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<xy>
action: /say http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
created_on: 1239737739
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 10
ref_user: nobody
type: text

<xyl>
action: /say /me plays the xylophone
created_on: 1408106281
enabled: 1
owner: osse
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<xyproblem>
action: /call xy
created_on: 1303930073
enabled: 1
owner: geirha
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<y0>
action: /say y1
created_on: 1227071945
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<y1>
action: /say # read v <<< "y1"; n=${v#y}; r=y$((n+1)); echo $r
created_on: 1235627645
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 3
ref_user: nobody
type: text

<y2>
action: /say !y1
created_on: 1235627715
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<y2k>
action: /say The Y2K excuse: "It is highly unlikely that this program will STILL be in use on Jan 1, 2000."
created_on: 1306271348
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<yes>
action: /say yes endlessly prints 'y' (or whatever argument it is specified with) followed by a newline to stdout. Useful for sending confirmations. e.g. yes | fsck
created_on: 1421709440
enabled: 1
owner: mattcen
rate_limit: 10
ref_count: 4
ref_user: nobody
type: text

<yesdear>
action: /say You appear to have a console issue; what does this command output? echo '16i[q]sa[ln0=aln100%Pln100/snlbx]sbA0D4D465452snlbxq' | dc
created_on: 1186684530
enabled: 1
owner: igli
rate_limit: 10
ref_count: 2
ref_user: nobody
type: text

<ykaya>
action: /say You kids and your acronyms these days!
created_on: 1437763605
enabled: 1
owner: kurahaupo_
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<your>
action: /say It's you're not your - http://i34.tinypic.com/js0mfc.jpg
created_on: 1226141242
enabled: 1
owner: iascorga
rate_limit: 10
ref_count: 0
ref_user: nobody
type: text

<yquotes>
action: /say "At its base, a shell is simply a macro processor that executes commands. The term macro processor means functionality where text and symbols are expanded to create larger expressions." http://tiswww.tis.case.edu/~chet/bash/bashref.html
created_on: 1193220768
enabled: 1
owner: igli
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<yw>
action: /say You're welcome, human.
created_on: 1397113075
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 6
ref_user: nobody
type: text

<zombie>
action: /say A zombie process (also known as a "defunct" process) cannot be killed; it's already dead. A zombie is a process which has exited, but whose parent has not yet waited for it (or wait3()ed for it) to collect its exit status. This often signifies a bug in the parent, unless the time of zombification is brief.
created_on: 1135112196
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 13
ref_user: nobody
type: text

<zsh>
action: /say zsh is NOT an enhanced version of bash. It's a different shell, with different features and there's a different channel for your questions: #zsh For zsh-style completion, bind '\C-i':menu-complete
created_on: 1430239890
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 53
ref_user: nobody
type: text

<{>
action: /say Brace and sequence expansion: {a,b,c}1 and {a..c}1 expand to a1 b1 c1, {a..c}{1..3} expands to a1 a2 a3 b1 b2 b3 c1 c2 c3. http://wiki.bash-hackers.org/syntax/expansion/brace http://mywiki.wooledge.org/BraceExpansion http://mywiki.wooledge.org/BashGuide/Patterns#Brace_Expansion
created_on: 1338013686
enabled: 1
owner: ormaaj
rate_limit: 10
ref_count: 152
ref_user: nobody
type: text

<{$>
action: /say {$x..$y} Parameter expansion happens after brace expansion. As a result, your parameters are only expanded after bash has already failed to brace-expand from dollar-x to dollar-y. Instead, use a C-style for: for ((i=x; i<=y; i++))
created_on: 1313790904
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 57
ref_user: nobody
type: text

<{}>
action: /say Command grouping. Like (), but doesn't spawn a subshell. See http://mywiki.wooledge.org/BashGuide/CompoundCommands#Command_grouping
created_on: 1269468872
enabled: 1
owner: Tramp
rate_limit: 10
ref_count: 122
ref_user: nobody
type: text

<|>
action: /say Pipes are used to send the (standard) output of one process to the (standard) input of another. foo | bar runs a process foo, sends its output on FD 1 to a process bar's input on FD 0. Note that foo and bar are executed in subshells; so changing variables inside pipes will have no effect on the variables in your main script.
created_on: 1224622511
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 55
ref_user: nobody
type: text

<|&>
action: /say copy/paste from 'man bash': If |& is used, the standard error of command is connected to command2's standard input through the pipe; it is shorthand for 2>&1 |.
created_on: 1343530341
enabled: 1
owner: yitz_
rate_limit: 10
ref_count: 22
ref_user: nobody
type: text

<||>
action: /say Short-circuit control operators <http://mywiki.wooledge.org/BashSheet#Tests> A || B means "Run A. If A fails, run B." A && B means "Run A. If A succeeds, run B." Example: foobar || { echo "error" >&2; exit 1; }
created_on: 1408035667
enabled: 1
owner: greycat
rate_limit: 10
ref_count: 81
ref_user: nobody
type: text

<||&&>
action: /call &&||
created_on: 1424257116
enabled: 1
owner: izabera
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<||:>
action: /say the same thing as "|| true". your script probably also has set -e and || : is a trick to prevent the script from exiting in case the command before the || fails
created_on: 1276606476
enabled: 1
owner: koala_man
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

<|||>
action: /say When your pipeline gets too long, make sure you can't combine commands into one (grep | awk | awk -> awk, or just use 'read') and try to assign intermediate variables for readability.
created_on: 1305614723
enabled: 1
owner: lhunath
rate_limit: 10
ref_count: 1
ref_user: nobody
type: text

[#cjeopardy]
<h>
action: /call hint
created_on: 1443812936.54128
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491354960.78822
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 5401
ref_user: alyptik!znc@unaffiliated/alyptik
type: text

<w>
action: /call fact #cjeopardy what
created_on: 1406663700.94145
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1430108449.88004
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491314369.62512
noembed: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 46339
ref_user: bps!~bps@130.226.143.67
type: text

<what>
action: /call cjeopardy_answer_module $nick $channel
created_on: 1406470658.61024
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1422426290.87004
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491366230.08534
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 59506
ref_user: Vaelatern!~Vaelatern@cvgateway.utdallas.edu
type: text

[#pbot2]
<add1>
action: /call bc define add(x, y) { return x + y };  add($args)
created_on: 1427995653.31329
enabled: 1
last_referenced_on: 1428002113.61222
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<dies>
action: 1 2 3 "die fell off table" 4 5 6
created_on: 1346030056.75315
enabled: 1
owner: pragma-
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<echo>
action: /say $args
created_on: 1381588173.2145
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1474786693.00889
owner: edk!edk@unaffiliated/edk
rate_limit: 0
ref_count: 28
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<resistance>
action: futile.
created_on: 1195527445
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1296270012.10031
owner: kp
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<tossdie>
action: /me tosses a die, it lands on $dies
created_on: 1346029894.20942
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1346030134.89646
owner: cousteau
rate_limit: 0
ref_count: 7
ref_user: pragma-
type: text

<void>
action: http://thecodelesscode.com/case/5
created_on: 1341571268.10012
enabled: 1
last_referenced_in: alyptik
last_referenced_on: 1486247278.63222
owner: cousteau
rate_limit: 15
ref_count: 45
ref_user: alyptik!znc@unaffiliated/alyptik
type: text

[#pbot2-test]
<bob>
action: is.
created_on: 1459359167.62706
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

[#philosophy]
<death>
action: http://www.newscientist.com/article/mg19626252.800
created_on: 1262505629
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: n00p
type: text

<everything>
action: for the best, right?
created_on: 1264580456
enabled: 1
last_referenced_on: 1280442244.75866
owner: Nately
rate_limit: 15
ref_count: 3
ref_user: Midass
type: text

<evilandomnipotence>
action: http://www.ditext.com/mackie/evil.html
created_on: 1260213447
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: n00p
type: text

<existence>
action: /say The most basic property is the property that there are no properties; which is a property in itself.  The most basic object is the void; which by the same vein of the first sentence means that there cannot be a void.  Everything and nothing is filled with something.  Existence is simply a paradox of contradictions and opposite reactions.  Ones and zeroes, truth and fiction.  Everything that shall be will be.  A collective imagination of sentience.
created_on: 1258974955
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 10
ref_user: pragma_
type: text

<fool>
action: /say He who asks a question may be a fool for five minutes; he who does not ask a question remains a fool forever.
created_on: 1194366107
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284870.77181
owner: pragma_
rate_limit: 15
ref_count: 22
ref_user: protege!~shynoob@182.59.209.11
type: text

<gamers>
action: http://infovore.org/talks/if-gamers-ran-the-world/
created_on: 1228387329
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<mankind>
action: http://etext.virginia.edu/toc/modeng/public/VanStor.html
created_on: 1277818342.77735
enabled: 1
last_referenced_in: remoun
last_referenced_on: 1290889231.26566
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: Remoun
type: text

<meaning>
action: http://users.aristotle.net/~diogenes/meaning1.htm
created_on: 1269729905
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<meat>
action: http://baetzler.de/humor/meat_beings.html -- What aliens would say if they discovered Earth
created_on: 1260485203
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1396586574.9899
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: jack_rabbit!~jack_rabb@c-98-253-57-51.hsd1.il.comcast.net
type: text

<onedim-man>
action: http://www.marcuse.org/herbert/pubs/64onedim/odmcontents.html
created_on: 1258771422
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1285212597.51546
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: JodaZ
type: text

<phil31>
action: http://philosophy.ucsd.edu/faculty/dbrink/courses/31-05/
created_on: 1258966138
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1383562512.0533
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: cousteau!~cousteau@138.100.74.81
type: text

<questions>
action: http://www.roangelo.net/logwitt/logwit12.html
created_on: 1258590235
enabled: 1
last_referenced_in: rvraghav93
last_referenced_on: 1396111101.39014
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: rvraghav93!~quassel@117.216.41.36
type: text

<scale>
action: /say The scale of the Universe: http://htwins.net/scale/index.html
created_on: 1282252138.81919
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1359720953.46349
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: Maxdamantus
type: text

<sky>
action: /say The sky is $colors.
created_on: 1186181196
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1362001614.06183
owner: upd
rate_limit: 15
ref_count: 26
ref_user: devin_
type: text

<stinkin-thinkin>
action: http://psychcentral.com/lib/2006/the-top-10-types-of-stinkin-thinkin/
created_on: 1203669727
enabled: 1
owner: _pragma
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<theworld>
action: http://strangemaps.files.wordpress.com/2006/11/800px-reagan-digitised-poster.JPG -- http://interactive.usc.edu/members/nsharkasi/americanworld.jpg -- http://cdn.epltalk.com/wp-content/uploads/2009/10/world-according-to-americans.jpg -- http://img293.imageshack.us/img293/2952/usworldem8.jpg
created_on: 1262055589
enabled: 1
last_referenced_in: nitrix
last_referenced_on: 1377365744.58281
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<thingswedo>
action: http://faculty.ed.uiuc.edu/g-cziko/twd/pdf/index.html
created_on: 1259592605
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<trolley>
action: http://www.saintgasoline.com/comics/2007-03-04-Allegory_of_Trolley_Problem_Paradox.JPG
created_on: 1275605468
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284884.97558
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: protege!~shynoob@182.59.209.11
type: text

<validity>
action: http://www.jimpryor.net/teaching/vocab/validity.html
created_on: 1260221360
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: n00p
type: text

[.*]
<(y)>
action: /say ( y ) is MSN Messenger for the "Thumbs Up" emoticon. It's not an IRC thing. No IRC clients translate it. Pidgin is not an IRC client. It's an instant messenger with a proof-of-concept half-arsed IRC plugin. Knock it off.
created_on: 1488150003.71609
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489246548.75875
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: bg!~marchelzo@unaffiliated/marchelzo
type: text

<.*sorry.*>
action: sorry
created_on: 1429160202.35585
enabled: 1
last_referenced_in: big
last_referenced_on: 1491359105.62154
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 57
ref_user: big!6b896df7@gateway/web/cgi-irc/kiwiirc.com/ip.107.137.109.247
type: regex

</say>
action: /call say
created_on: 1251694751
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491363312.30175
owner: pragma_
rate_limit: 15
ref_count: 163
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<10words>
action: http://theoatmeal.com/comics/misspelling
created_on: 1262461605
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1439334238.21795
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: cousteau!~cousteau@80.174.59.17.dyn.user.ono.com
type: text

<20q>
action: /say If you have a question, please be specific and concise. Don't ask questions like 'Does anyone know how to ...' or 'What is the best way to ...'. We do not have the time or patience to play a game of 20 questions with people that are not capable of articulating properly. See also: http://catb.org/~esr/faqs/smart-questions.html
created_on: 1215709795
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1421805999.23482
owner: Jafet
rate_limit: 15
ref_count: 5
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<21days>
action: http://norvig.com/21-days.html
created_on: 1177064329
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1485455044.30936
owner: kate`
rate_limit: 15
ref_count: 23
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<2html.vim>
action: #!/bin/sh   vim -n -c ':so \$VIMRUNTIME/syntax/2html.vim' -c ':wqa' \$1 > /dev/null 2> /dev/null
created_on: 1183513530
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1393579441.20645
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<6thsense>
action: http://www.movie-moron.com/wp-content/gallery/various/I-See-Stupid-People.jpg
created_on: 1262501664
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1395201625.95413
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<8ball>
action: /say $nick, $answers:global
action_with_args: /say $nick, $answers
created_on: 1193948417
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444035579.82241
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491363357.31118
owner: pragma_
rate_limit: 0
ref_count: 3344
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text
use_output_queue: 1

<:(>
action: /call :)
created_on: 1180052710
enabled: 1
last_referenced_in: mar77i
last_referenced_on: 1487801733.08651
owner: pragma_
rate_limit: 15
ref_count: 41
ref_user: mar77i!~mar77i@77-56-218-203.dclient.hispeed.ch
type: text

<:)>
action: /call say $faces
created_on: 1109365121
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428310342.25643
enabled: 1
last_referenced_in: j4ckcom
last_referenced_on: 1489148162.27513
owner: pragma_
rate_limit: 15
ref_count: 211
ref_user: j4ckcom!~morezt@unaffiliated/j4ckcom
type: text

<:-(>
action: /call :)
created_on: 1180052743
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<:-)>
action: /call :)
created_on: 1180052725
enabled: 1
last_referenced_in: chung
last_referenced_on: 1483369124.15923
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: chung!~chung@1.20.156.185
type: text

<:-D>
action: /call :)
created_on: 1180052738
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<:-P>
action: /call :)
created_on: 1180052730
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: yobo2
type: text

<:-o>
action: /call :)
created_on: 1439056844.06653
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<:-p>
action: /call :)
created_on: 1180052734
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<:D>
action: /call :)
created_on: 1180052717
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489111713.94364
owner: pragma_
rate_limit: 15
ref_count: 27
ref_user: tirez!ac6514ee@gateway/web/cgi-irc/kiwiirc.com/ip.172.101.20.238
type: text

<:o>
action: /call :)
created_on: 1180052721
enabled: 1
last_referenced_in: latch
last_referenced_on: 1466693248.56834
owner: pragma_
rate_limit: 15
ref_count: 11
ref_user: latch!~latch@unaffiliated/latch
type: text

<:p>
action: /call :)
created_on: 1180052714
enabled: 1
last_referenced_in: g22
last_referenced_on: 1483332002.38511
owner: pragma_
rate_limit: 15
ref_count: 11
ref_user: g22!g2@gateway/shell/yourbnc/x-vygnepcctmlkrgns
type: text

<;)>
action: /call me $body_action seductively.
created_on: 1109657503
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428310304.99879
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1466693312.2855
owner: pragma_
rate_limit: 15
ref_count: 23
ref_user: latch!~latch@unaffiliated/latch
type: text

<<3>
action: /call lovequote
created_on: 1472101263.32951
enabled: 1
last_referenced_in: fstd
last_referenced_on: 1482947483.04997
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 8
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<APPALLING>
action: Acronym Production Particularly At Lavish Level Is No Good
created_on: 1108954548
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358515888.49913
owner: Major-Willard
rate_limit: 15
ref_count: 4
ref_user: mhi^
type: text

<BFS>
action: Breadth First Search -- http://en.wikipedia.org/wiki/Breadth-first_search
created_on: 1242883241
enabled: 1
owner: Wulf_
rate_limit: 15
ref_count: 1
ref_user: zacs7
type: text

<CaZe>
action: What?
created_on: 1445939687.41252
edited_by: fluter!~fluter@fedora/fluter
edited_on: 1445940169.26382
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1474535113.63854
owner: fluter!~fluter@fedora/fluter
rate_limit: 15
ref_count: 6
ref_user: fluter!~fluter@fedora/fluter
type: text

<DFS>
action: Depth First Search -- http://en.wikipedia.org/wiki/Depth-first_search
created_on: 1242883141
enabled: 1
owner: Chris
rate_limit: 15
ref_count: 1
ref_user: Chris
type: text

<GIGO>
action: garbage in, garbage out
created_on: 1174497896
enabled: 1
owner: prec
rate_limit: 15
ref_count: 1
ref_user: n00p
type: text

<GP>
action: General Purpose
created_on: 1107533027
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: PoppaVic
type: text

<IB>
action: implementation defined behaviour
created_on: 1253031223
enabled: 1
owner: Wulf_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<IMP>
action: Interface Message Processor
created_on: 1108947650
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<LE>
action: Learning Experience. Any LE is a good one, as long as you survive it.
created_on: 1266717828
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358515895.60251
owner: PoppaVic
rate_limit: 15
ref_count: 2
ref_user: mhi^
type: text

<LFS>
action: http://en.wikipedia.org/wiki/Large_file_support
created_on: 1183700942
enabled: 1
last_referenced_in: pragma_
last_referenced_on: 1297672482.00022
owner: vorpal
rate_limit: 15
ref_count: 3
ref_user: pragma_
type: text

<LostDatagram>
action: currently away, try again later
created_on: 1398061985.15232
enabled: 1
owner: LostDatagram!~david@188.226.210.76
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<Lt-Col-Kilgore>
action: 1st of the 9th, air-mobile
created_on: 1106871669
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358515905.78951
owner: Lt-Col-Kilgore
rate_limit: 15
ref_count: 1
ref_user: mhi^
type: text

<MSDN>
action: /say Microsoft Developer Network: http://msdn.microsoft.com
created_on: 1327413086.05689
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<Major-Willard>
action: a $sizes $colors gun totin non-jesus freak
created_on: 1104594621
enabled: 1
owner: defrost
rate_limit: 15
ref_count: 9
ref_user: kate`
type: text

<Pascal>
action: "A program language named after a man who would turn over in his grave if he knew about it."
created_on: 1108206649
enabled: 1
last_referenced_in: ##c-unregistered
last_referenced_on: 1426458039.41379
owner: Tom^
rate_limit: 15
ref_count: 5
ref_user: terabit!~citizen4@unaffiliated/terabit
type: text

<Plan9>
action: written in C, it's free and you can find it here: http://plan9.bell-labs.com/plan9dist or /join #plan9
created_on: 1106978951
enabled: 1
last_referenced_in: solar_sea
last_referenced_on: 1290597484.42051
owner: Major-Willard
rate_limit: 15
ref_count: 1
ref_user: solar_sea
type: text

<PoppaVic>
action: Get yer own damned noise.
created_on: 1311377304.65045
enabled: 1
last_referenced_in: poppavic
last_referenced_on: 1311377378.9028
owner: PoppaVic
rate_limit: 15
ref_count: 2
ref_user: PoppaVic
type: text

<QED>
action: from the Latin; therin lies the proof
created_on: 1106890375
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<SDL>
action: http://www.libsdl.org
created_on: 1107541279
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475659067.83986
owner: Tom^
rate_limit: 15
ref_count: 5
ref_user: ap0c!~ap0c@unaffiliated/ap0c
type: text

<SNAFU>
action: Situation Normal All Fucked Up
created_on: 1109292157
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 2
ref_user: Major-Willard
type: text

<SOP>
action: "Standard Operating Procedure"
created_on: 1107543001
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<TARFU>
action: Things Are Really Fucked Up
created_on: 1109292407
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<TIL>
action: "Threaded Interpretive Language"
created_on: 1107798020
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483245858.32325
owner: PoppaVic
rate_limit: 15
ref_count: 4
ref_user: qwename!~qwename@45.72.210.183
type: text

<TLI>
action: "Too Little Info"
created_on: 1107535494
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: PoppaVic
type: text

<TMI>
action: "Too Much Info"
created_on: 1107535524
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: PoppaVic
type: text

<UTSL>
action: /say Use the source, Luke!
created_on: 1229211575
enabled: 1
owner: Wulf_
rate_limit: 15
ref_count: 10
ref_user: Wulf4
type: text

<Zhivago>
action: http://bigeyedeer.files.wordpress.com/2008/07/graf.gif
created_on: 1217055595
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480311060.333
owner: pragma_
rate_limit: 15
ref_count: 24
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<\bah\b.*>
action: 8ball
created_on: 1397507267.58037
enabled: 1
last_referenced_in: cousteau`
last_referenced_on: 1485129157.08256
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 12
ref_user: cousteau`!~u291187@246.102.132.37.dynamic.jazztel.es
type: regex

<\bain'?t.*>
action: 8ball
created_on: 1427686735.86836
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<\bam\b.*>
action: 8ball
created_on: 1195010735
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491023930.9779
owner: pragma_
rate_limit: 0
ref_count: 47
ref_user: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
type: regex

<\baren'?t.*>
action: 8ball
created_on: 1427686653.27805
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1448265558.35276
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 4
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: regex

<\bbot\b.*>
action: say $bot_reply
created_on: 1275630337
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491354707.59206
owner: candide
rate_limit: 0
ref_count: 85
ref_user: Moto-chan!~Rob@unaffiliated/moto-chan
type: regex

<\bcake.*>
action: say $the_cake
created_on: 1195100298
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470418574.33539
owner: pragma_
rate_limit: 0
ref_count: 5
ref_user: dogbert2!cc3e468d@gateway/web/freenode/ip.204.62.70.141
type: regex

<\bcake\b.*>
action: say $the_cake
created_on: 1195100325
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<\bcan'?t?\b.*>
action: 8ball
created_on: 1195010466
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489814850.67477
owner: pragma_
rate_limit: 0
ref_count: 130
ref_user: _ohm!~xubuntu@unaffiliated/-ohm/x-0955948
type: regex

<\bconsider.*>
action: say That's $severity $question_type, $nick.
created_on: 1427591328.04788
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1435798708.98897
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: regex

<\bdo[n't]+?\b.*>
action: 8ball
created_on: 1195010567
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491096623.03467
owner: pragma_
rate_limit: 0
ref_count: 67
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: regex

<\bdo\b.*>
action: 8ball
created_on: 1277879456.23137
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412659.86585
owner: pragma_
rate_limit: 0
ref_count: 89
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: regex

<\bdoesn'?t.*>
action: 8ball
created_on: 1427686604.31496
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489766590.09393
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 30
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: regex

<\bdon'?t.*>
action: 8ball
created_on: 1427686680.02354
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487738923.71678
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 51
ref_user: Verity!~Verity@2604:180:2:c8b::6ba4
type: regex

<\bhaving?.*>
action: 8ball
created_on: 1276141317
enabled: 1
last_referenced_in: ungroup
last_referenced_on: 1459314129.12876
owner: pragma_
rate_limit: 0
ref_count: 7
ref_user: ungroup!~ASpaceOdy@173.246.205.20
type: regex

<\bhow.*>
action: 8ball
created_on: 1271202576
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489700343.91226
owner: pragma_
rate_limit: 0
ref_count: 19
ref_user: dogbert2!407c7946@gateway/web/freenode/ip.64.124.121.70
type: regex

<\bi'?m\s.*>
action: 8ball
created_on: 1429160480.17881
enabled: 1
last_referenced_in: guest73447
last_referenced_on: 1489841814.3577
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 87
ref_user: Guest73447!~xubuntu@ip70-185-110-122.ga.at.cox.net
type: regex

<\bisn'?t.*>
action: 8ball
created_on: 1427686746.94896
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488934243.18076
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 9
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: regex

<\bisn?'?t?\s.*>
action: 8ball
created_on: 1195010631
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491354665.68205
owner: pragma_
rate_limit: 0
ref_count: 155
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: regex

<\bit'?s.*>
action: 8ball
created_on: 1427686760.43538
enabled: 1
last_referenced_in: jon2
last_referenced_on: 1491103523.51483
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 31
ref_user: Jon2!~Adium@207.183.239.226
type: regex

<\bit\s.+>
action: say That's $severity $question_type, $nick
created_on: 1427686814.23321
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1427687390.79557
enabled: 1
last_referenced_in: devut
last_referenced_on: 1490185535.50084
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 63
ref_user: DevUt!~quassel@unaffiliated/devut
type: regex

<\blove.*>
action: lovequote
created_on: 1271635108
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489412483.97565
owner: pragma_
rate_limit: 0
ref_count: 35
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: regex

<\bwell\b.*>
action: 8ball
created_on: 1397507335.27472
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491172088.34241
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 21
ref_user: Labtec901!~Labtec901@104.131.251.86
type: regex

<\bwhat'?s.+>
action: 8ball
created_on: 1427833381.33998
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489601885.81054
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 26
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: regex

<\bwill\b.*>
action: 8ball
created_on: 1195010657
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489968295.0276
owner: pragma_
rate_limit: 0
ref_count: 26
ref_user: beergetarian!~rep@187-27-87-95.3g.claro.net.br
type: regex

<\bwon'?t.*>
action: 8ball
created_on: 1427686703.86755
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491172138.52138
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 4
ref_user: Labtec901!~Labtec901@104.131.251.86
type: regex

<\bwon'?t\b.*>
action: 8ball
created_on: 1195010690
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<\bwouldn?'?t?\b.*>
action: 8ball
created_on: 1195010814
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1483067483.13636
owner: pragma_
rate_limit: 0
ref_count: 13
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: regex

<\byou\s+are\s+([^.,!?;]+).*$>
action: say I am $arg[1:]? $reaction
created_on: 1194384930
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1437254125.33351
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487025260.45597
owner: pragma_
rate_limit: 0
ref_count: 42
ref_user: fstd!~fstd@unaffiliated/fisted
type: regex

<\n>
action: (new line) Moves the active position to the initial position of the next line.
created_on: 1244570270
enabled: 1
last_referenced_in: nwmcsween
last_referenced_on: 1459283958.80254
owner: Wulf_
rate_limit: 15
ref_count: 3
ref_user: nwmcsween!~nwmcsween@66.51.139.245.erx-static.cipherkey.com
type: text

<\r>
action: (carriage return) Moves the active position to the initial position of the current line.
created_on: 1244570284
enabled: 1
last_referenced_in: profess
last_referenced_on: 1423532634.72326
owner: Wulf_
rate_limit: 15
ref_count: 2
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<^fuck.*>
action: insult $nick
created_on: 1429160596.5005
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489601787.26422
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 75
ref_user: phox!~phox@c-73-225-0-79.hsd1.wa.comcast.net
type: regex

<^i\b.*>
action: say That's $severity $question_type, $nick.
created_on: 1195247407
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491179597.69463
owner: pragma_
rate_limit: 0
ref_count: 171
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: regex

<^oh.*>
action: 8ball
created_on: 1429160712.71565
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485559202.74659
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 15
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: regex

<^who\sis\s(.*)>
action: def2 $1
created_on: 1195009578
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<accidental-turing>
action: http://beza1e1.tuxen.de/articles/accidentally_turing_complete.html
created_on: 1393291438.32395
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<acronym>
action: acronym.pl
created_on: 1105953751
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095079.88297
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 701
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<add>
action: /call factadd
created_on: 1325646491.86539
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1491095658.13408
owner: pragma_
rate_limit: 0
ref_count: 61
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<adjective>
action: fail stupid ignorant annoying awesome unique able adorable adventurous active afraid aggressive amusing awful bad bitter brief careless careful dark dangerous cheap chilly clean
created_on: 1254003465
enabled: 1
owner: syntropy
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<admins>
action: /call list admins
created_on: 1192736884
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488565627.38536
owner: pragma_
rate_limit: 15
ref_count: 16
ref_user: badet0s!5cddd6cf@gateway/web/freenode/ip.92.221.214.207
type: text

<admires>
action: /call hugs
created_on: 1430364878.00316
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1430364884.69898
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<adsqads>
action: /say 'A dicto secundum quid ad dictum simpliciter' - the 'Hasty Generalization' logical fallacy, to which new C programmers often fall prey. Fight the urge to let it get you by studying the theory and not trying to learn through testing.
created_on: 1311578207.98169
enabled: 1
last_referenced_in: tuplanolla
last_referenced_on: 1407423307.26842
owner: guidj0s
rate_limit: 15
ref_count: 7
ref_user: Tuplanolla!~Put-on-la@dsl-jklbrasgw1-54fb0b-216.dhcp.inet.fi
type: text

<advice>
action: /say $advicepredicate $advicehelper.
created_on: 1258762773
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491071107.32719
owner: PARLIAMENT
rate_limit: 0
ref_count: 80
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text
use_output_queue: 1

<advicehelper>
action: "do it" "not do it"
created_on: 1258762756
enabled: 1
last_referenced_in: van7hu
last_referenced_on: 1309785200.6878
owner: PARLIAMENT
rate_limit: 15
ref_count: 1
ref_user: van7hu
type: text

<advicehelper2>
action: "would" "would not" might "could possibly" may "may not" "couldn't possibly"
created_on: 1258763100
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<advicehelper3>
action: wise dumb smart stupid
created_on: 1258763112
enabled: 1
last_referenced_in: latch
last_referenced_on: 1477408406.34366
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: latch!~latch@unaffiliated/latch
type: text

<advicepredicate>
action: "I recommend to" "My advice is to" "I think it $advicehelper2 be $advicehelper3 to" "I think it $advicehelper2 be $advicehelper3 to" "I think it $advicehelper2 be $advicehelper3 to"
created_on: 1258763084
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1440794364.17272
enabled: 1
last_referenced_in: van7hu
last_referenced_on: 1309785167.66786
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: van7hu
type: text

<ago>
action: ago.pl
created_on: 1277256899.15762
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1480411032.00311
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 51
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<aids>
action: "There's no easy way to say this. You got aids. Yuck! :x"  $noaids "You contracted aids from $who_answers!" "You were attacked by a $animals!  You now have aids." $noaids $noaids
created_on: 1264285407
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436223835.79296
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480316123.38337
owner: PARLIAMENT
rate_limit: 15
ref_count: 10
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<aidsroulette>
action: /say $aids
created_on: 1264285308
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479926711.36699
owner: PARLIAMENT
rate_limit: 15
ref_count: 121
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<aktukidgwengo>
action: cats
created_on: 1398674845.02375
edited_by: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
edited_on: 1398904475.30126
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1398699371.99112
owner: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<alias>
action: /call factalias
created_on: 1277259091.375
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1490277376.22088
owner: pbot3
rate_limit: 0
ref_count: 271
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<aliases>
action: /call find ^/call
created_on: 1179677200
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480045106.16131
owner: pragma_
rate_limit: 15
ref_count: 28
ref_user: gwozt!~gwozt@78.167.198.26
type: text

<alis>
action: /say alis is a freenode service that lets you search for channels.  See `/msg alis help list` to get started.  Examples: `/msg alis list make` to search for all channel names containing "make"; `/msg alis list * -topic make` to search all channels for topic containing "make"
created_on: 1374576323.42408
edited_by: edk!~edk@spy/edk0
edited_on: 1446226223.22491
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488748427.71091
owner: pragma-
rate_limit: 15
ref_count: 11
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<alot>
action: /say I like this Alot: http://hyperboleandahalf.blogspot.com/2010/04/alot-is-better-than-you-at-everything.html
created_on: 1395430672.47847
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488213554.73657
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<am>
action: /call 8ball
created_on: 1412599171.25567
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491071061.59617
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 9
ref_user: hekz!~hekz@unaffiliated/hekz
type: text

<and>
action: /call 8ball
created_on: 1437531588.20778
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491363357.30569
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 16
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text

<animal_adjectives>
action: wet overweight bloated skinny shaved dirty rabid drooling aroused fat filthy golden timid aggressive rabid shy demure seductive
created_on: 1108981750
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358515937.07193
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: mhi^
type: text

<animals>
action: armadillo whale hyena squid trout hedgehog cat pig buffalo earthworm alligator turkey chicken cock badger calf platypus grue anteater wildebeest gnu moose
created_on: 1108931430
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1454388009.30326
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1431856894.87365
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: zyxwvuts!~zyxwvuts@unaffiliated/qnavry
type: text

<ansicode>
action: http://www.inwap.com/pdp10/ansicode.txt
created_on: 1107812373
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1332258209.82241
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: PoppaVic
type: text

<ansiprint>
action: http://linuxgazette.net/issue65/padala.html
created_on: 1230592488
enabled: 1
last_referenced_in: sig^
last_referenced_on: 1291298282.76431
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: sig^
type: text

<answers>
action: Yes. "Most likely." No. "I think not." Brilliant! "Are you a $sizes $idiots?" "Definitely not." "Most assuredly." Absolutely! "Not likely!" "Do I look like I care?" "I'm not sure, let me check." "It would seem so." "I don't think so." "Why are you bothering me with this?" "Forget it!" "Yeah, right." "As if!" "Can has happy fun time!" "But of course." "That gives me an idea!" "Don't be $silly_adjective." "That would be $question_type." Sometimes. "That's $severity $question_type."
created_on: 1195010969
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1427687805.87459
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1285996804.04893
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: dave0
type: text

<anyone>
action: /call poll
created_on: 1385340731.64114
enabled: 1
last_referenced_in: hello71
last_referenced_on: 1481414200.4509
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 4
ref_user: Hello71!~Hello71@wikipedia/Hello71
type: text

<applesauce_type>
action: cinnamon ""
created_on: 1446232569.22286
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1446232579.89922
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<apropos>
action: /call man
created_on: 1278231978.63715
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1486006020.25764
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: prev!~prev@unaffiliated/prev
type: text

<are>
action: /call 8ball
created_on: 1405458752.84555
enabled: 1
last_referenced_in: tjt263
last_referenced_on: 1490964930.83414
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 141
ref_user: tjt263!~tjt263@unaffiliated/tjt263
type: text

<ask>
action: /say If you have a question, just ask.  If somebody knows, they'll answer :) For best results, be specific, informative, complete, concise and on-topic!  Don't ask if you can ask a question. Don't ask if anyone uses/knows about foo. Please don't be demanding or insulting. Remember, we're all volunteers.  Also see: http://geoff.greer.fm/2012/05/19/programmer-irc-etiquette/
created_on: 1106341082
edited_by: edk!~edk@spy/edk0
edited_on: 1443798479.51845
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490226324.27126
locked: 1
owner: pragma_
rate_limit: 15
ref_count: 426
ref_user: bone!~bone@unaffiliated/bone
type: text

<assaults>
action: /call hugs
created_on: 1429995231.68046
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<assume>
action: /say Assumption is the mother of all fuck-ups.
created_on: 1204315475
enabled: 1
last_referenced_in: flyz_
last_referenced_on: 1323111794.4364
owner: PoppaVic
rate_limit: 15
ref_count: 3
ref_user: flyz_
type: text

<attack>
action: /call slap
created_on: 1275116449
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1429259371.87906
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<attacks>
action: thwaps smacks whacks whaps whips thwacks bashes boots headbutts bitchslaps punts
created_on: 1108933612
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1431856863.28304
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: zyxwvuts!~zyxwvuts@unaffiliated/qnavry
type: text

<autoshit>
action: the portability whore that is GNU autoconf/automake/configure/aclocal/libtool/sh/m4 messes that are NOT portable
created_on: 1104954897
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612028.26323
owner: PoppaVic
rate_limit: 15
ref_count: 14
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<autotools>
action: http://sources.redhat.com/autobook/
created_on: 1107806042
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: veronica_
type: text

<awaken>
action: /call unignore .* $args
created_on: 1258799692
enabled: 1
last_referenced_on: 1421705780.69503
owner: pragma_
rate_limit: 0
ref_count: 7
ref_user: mischief!~mischief@iota.offblast.org
type: text

<away>
action: /say Away messages suck: http://sackheads.org/~bnaylor/spew/away_msgs.html
created_on: 1177950209
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1403404268.63143
enabled: 1
last_referenced_in: zub1n
last_referenced_on: 1486934147.08646
owner: Shadewalker
rate_limit: 15
ref_count: 26
ref_user: zub1n!~zub1n@unaffiliated/zub1n
type: text

<babelbuster>
action: /call c2eng
created_on: 1372269744.43142
enabled: 1
last_referenced_on: 1400155554.31262
owner: pragma-
rate_limit: 15
ref_count: 3
ref_user: thoughtso!~purple@199-193-117-81.static.hvvc.us
type: text

<badcode>
action: http://www.exmsft.com/~hanss/badcode.htm
created_on: 1232034710
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1413567559.00057
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: cheaterman!~cheaterma@unaffiliated/cheaterman
type: text

<bar>
action: /say bar
created_on: 1379514288.15813
enabled: 1
last_referenced_in: ninjacowboy
last_referenced_on: 1417277812.20363
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: NinjaCowboy!~NinjaCowb@ip184-190-70-217.no.no.cox.net
type: text

<bash>
action: /call cc -lang=bash
created_on: 1273286262
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421503886.02778
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491383565.72156
owner: pragma_
rate_limit: 0
ref_count: 586
ref_user: prev!~prev@unaffiliated/prev
type: text

<basic>
action: /call cc -lang=freebasic
created_on: 1427959924.85299
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1476006230.34982
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 11
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<bastard>
action: /call insult
created_on: 1470255236.57678
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480045125.05765
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: gwozt!~gwozt@78.167.198.26
type: text

<baz>
action: /say baz
created_on: 1379514294.41321
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<bc>
action: /call cc -lang=bc
created_on: 1421890759.32786
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482069525.26412
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 101
ref_user: CaZe!~caze@2607:f2f8:a678::2
type: text

<be>
action: /call 8ball
created_on: 1427979661.10965
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1455834517.21
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 3
ref_user: pestle!~pestle@unaffiliated/pestle
type: text

<beer>
action: a#1&1\1b76543210
created_on: 1110681030
edited_by: Maxdamantus!~Maxdamant@2001:470:f078::dead:beef:cafe
edited_on: 1400737180.91276
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491157853.83422
owner: dooky
rate_limit: 15
ref_count: 13
ref_user: gaffa!~gaffa@unaffiliated/gaffa
type: text

<best>
action: /say If you need to know what the 'best' X is, you need to define what it means to be a 'good' X.
created_on: 1311745380.33396
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483281060.04035
owner: guidj0s
rate_limit: 15
ref_count: 34
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<bf>
action: /call cc -lang=bf
created_on: 1275123815
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486250663.00982
owner: pragma_
rate_limit: 0
ref_count: 17
ref_user: Chris!sid107964@spy/chris
type: text

<bitch>
action: /call insult
created_on: 1470255241.17373
enabled: 1
last_referenced_in: lyrics
last_referenced_on: 1475486983.87596
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: Lyrics!~ident@c7.89.caa1.ip4.static.sl-reverse.com
type: text

<bite>
action: /me bites $args. $flavor!
created_on: 1244945112
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1442244015.78591
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491085274.88809
owner: Wulf_
rate_limit: 15
ref_count: 35
ref_user: Introoter!derpson@gateway/shell/xshellz/x-qycecjflxmdmuxmk
type: text

<bites>
action: /call hugs
created_on: 1383671345.64985
enabled: 1
last_referenced_on: 1383671366.87335
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<blamethecompiler>
action: a common disease mostly contracted by beginning programmers.  There is no known cure except that over time, outbreaks will occur with less and less frequency.
created_on: 1106336163
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1454583320.99239
owner: prec
rate_limit: 15
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<bodily_action>
action: vomits sneezes coughs snores yawns
created_on: 1108935242
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<body_action>
action: snorts coughs sneezes snores chokes spasms "cracks its neck" "scratches its butt"
created_on: 1109657461
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1380065748.93659
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<body_part>
action: arm hand head foot leg face ass ear nose neck "left buttock" nuts back "gall bladder" "right eye" perineum toenail
created_on: 1109021527
edited_by: e!e@freenode/staff/spy.edk
edited_on: 1475682671.01149
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1388000990.57466
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: boru!~boru@unaffiliated/boru
type: text

<boing>
action: /call bounce
created_on: 1489697904.06087
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489698178.46421
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: dogbert2!407c7946@gateway/web/freenode/ip.64.124.121.70
type: text

<bookorder>
action: SICP -> I2A -> TAOCP -> APUE
created_on: 1198331081
enabled: 1
last_referenced_in: cthuluh
last_referenced_on: 1283864464.08512
owner: gamag
rate_limit: 15
ref_count: 3
ref_user: cthuluh
type: text

<booty.*>
action: me wiggles her butt.
created_on: 1195532640
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489922263.92858
owner: pragma_
rate_limit: 0
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: regex

<bot_reply>
action: "Bot? Where?" "We can't stop here, this is bot country!" "Who's a bot?"
created_on: 1195528131
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1303412493.47496
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: cousteau
type: text

<botsnack>
action: /me $eat_adverbs $eat_actions its $flavor_maybe:lc$snacks.
action_with_args: /me gives $args a $sizes $snacks.
created_on: 1174693123
edited_by: edk!~edk@spy/edk0
edited_on: 1446226968.28115
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491158536.78103
owner: pragma_
rate_limit: 15
ref_count: 905
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<bottom_up>
action: http://www.paulgraham.com/progbot.html
created_on: 1187190800
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<bounce>
action: /me bounces around.
created_on: 1108872842
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489698178.46837
owner: pragma_
rate_limit: 15
ref_count: 31
ref_user: dogbert2!407c7946@gateway/web/freenode/ip.64.124.121.70
type: text

<british>
action: http://www.effingpot.com/index.shtml
created_on: 1208327851
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1430988239.20331
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: cousteau!~cousteau@138.100.74.81
type: text

<burrito_type>
action: chicken steak bean
created_on: 1446232408.03332
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<but>
action: /call 8ball
created_on: 1379357523.89776
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487373614.50754
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 34
ref_user: nadav__!~nadav@bzq-79-179-173-101.red.bezeqint.net
type: text

<bye>
action: /say $bye_words, $nick
created_on: 1109365229
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491355073.37286
owner: pragma_
rate_limit: 15
ref_count: 77
ref_user: dude12312414!None@gateway/shell/elitebnc/x-osunwocwlqhbsfmy
type: text
use_output_queue: 1

<bye!>
action: /say Excellently observed, $nick, but let us cultivate our garden.
created_on: 1109793039
enabled: 1
last_referenced_in: gionnico
last_referenced_on: 1287612650.65304
owner: NeverDream
rate_limit: 15
ref_count: 4
ref_user: gionnico
type: text

<bye_words>
action: Bye Later Adios Good-bye Sayonara Bye-bye "See you later"
created_on: 1109013658
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516043.76285
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: mhi^
type: text

<c.char>
action: tristate: it's the only integral type suffering 3 states: signed, unsigned, and "char". The latter is platform and compiler discretionary. char is the smallest-addressable-unit, and ALWAYS sizeof==1. Are.You.Having.Fun.Yet
created_on: 1296776524.89356
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1296776533.89448
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: PoppaVic
type: text

<c10k>
action: the c10k problem, see http://www.kegel.com/c10k.html
created_on: 1104635961
enabled: 1
last_referenced_in: mcudev
last_referenced_on: 1426100391.938
owner: twkm
rate_limit: 15
ref_count: 14
ref_user: mcudev!~mcudev@c-98-245-27-233.hsd1.co.comcast.net
type: text

<c11std>
action: c11std.pl
created_on: 1326727233.54048
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491382123.49667
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 3468
ref_user: mthowe!~morganh@unaffiliated/mthowe
type: module

<c2english>
action: c2english.pl
created_on: 1296182059.70458
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484006695.79157
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 1910
ref_user: qwename!~qwename@d154-20-114-183.bchsia.telus.net
type: module

<c99std>
action: c99std.pl
created_on: 1270956236
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490956604.89797
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 3469
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: module

<cLawyer>
action: The New Hacker's Dictionary defines a language lawyer as "a person who will show you the five sentences scattered through a 200-plus-page manual that together imply the answer to your question 'if only you had thought to look there.'"
created_on: 1300769816.93888
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424231823.94321
owner: van7hu
rate_limit: 15
ref_count: 2
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<caio>
action: /call bye
created_on: 1193167316
enabled: 1
last_referenced_on: 1387833095.53171
owner: pragma_
rate_limit: 0
ref_count: 4
ref_user: gitesh!724f98d4@gateway/web/freenode/ip.114.79.152.212
type: text

<cake_type>
action: carrot lemon chocolate vanilla "rainbow sprinkles" "red velvet"
created_on: 1446232809.98791
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1460756448.64054
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<calc>
action: /call math
created_on: 1193082106
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489265115.41941
owner: pragma_
rate_limit: 0
ref_count: 421
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<callgraph>
action: /say Generating a potential call graph from an RTL dump: http://www.gson.org/egypt/
created_on: 1247207074
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1466007193.03227
owner: kate`
rate_limit: 15
ref_count: 16
ref_user: kate!~kate@unaffiliated/kate
type: text

<calvinandhobbes>
action: http://progressiveboink.com/archive/calvinhobbes.htm
created_on: 1273441671
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<candide>
action: a bot.  See http://www.iso-9899.info/wiki/Candide for more information.
created_on: 1107122441
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489971755.86145
owner: pragma_
rate_limit: 15
ref_count: 191
ref_user: maxwell!~maxwell@lnsm1-toronto47-142-116-12-86.internet.virginmobile.ca
type: text

<castvoidp>
action: /say Don't cast (void *) to (T *).
created_on: 1315799131.24783
enabled: 1
last_referenced_in: edk
last_referenced_on: 1440505505.39871
owner: guidj0s
rate_limit: 15
ref_count: 7
ref_user: edk!~edk@spy/edk0
type: text

<cbad>
action: /call size
created_on: 1199480037
enabled: 1
owner: Baughn_
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<cc>
action: /call compiler $nick $channel
created_on: 1272176634
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1393967703.12375
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491383565.72551
owner: pragma_
preserve_whitespace: 1
rate_limit: 0
ref_count: 75742
ref_user: prev!~prev@unaffiliated/prev
type: text

<cc2>
action: /call codepad $nick
created_on: 1269788333
enabled: 1
last_referenced_in: qwename
last_referenced_on: 1483331012.77743
owner: pragma_
rate_limit: 0
ref_count: 1802
ref_user: qwename!~qwename@45.72.210.183
type: text

<cdecl>
action: cdecl.pl
created_on: 1191041914
enabled: 1
last_referenced_in: dho
last_referenced_on: 1488469433.60469
noembed: 1
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 4247
ref_user: dho!~dho@veep.9vx.org
type: module

<cereal_type>
action: "Lucky Charms" "Honey Nut Cheerios" "Cinnamon Toast Crunch" "Raisin Bran" "Corn Flakes" "Trix" "Rice Krispies" "Sugar Puffs"
created_on: 1468865430.07328
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1482777391.27265
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<cfact>
action: getcfact.pl
add_nick: 1
created_on: 1405992151.61097
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491313892.36483
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 452
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<cgisock>
action: See http://www.cyberspace.org/~pfv/libcgisock.html for a nifty little module for the Apache Web Server that allows a browser to connect to programs already loading and running on remote systems via the ubiquitous Unix-Socket.
created_on: 1106002098
enabled: 1
last_referenced_in: izabera
last_referenced_on: 1422143430.93159
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: izabera!~izabera@unaffiliated/izabera
type: text

<change>
action: /call factchange
created_on: 1277259441.33026
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1491095621.84996
owner: pbot3
rate_limit: 0
ref_count: 613
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<changelist>
action: http://code.google.com/p/pbot2-pl/source/list
created_on: 1275818314
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516062.49402
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: mhi^
type: text

<changes>
action: /say My changelist: https://github.com/pragma-/pbot/commits/master
created_on: 1295696760.24981
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1461108125.59452
enabled: 1
last_referenced_in: dozn
last_referenced_on: 1480199390.29014
owner: pragma_
rate_limit: 15
ref_count: 10
ref_user: dozn!~dozn@104.236.154.251
type: text

<charset>
action: a set of characters.  http://www.cs.tut.fi/~jkorpela/chars.html
created_on: 1107982156
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1420789603.05797
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1420789487.40925
owner: prec
rate_limit: 15
ref_count: 2
ref_user: ishikawa!~ishikawa@gateway/tor-sasl/ishikawa
type: text

<cheph>
action: /say 'Cum hoc, ergo propter hoc': the logical fallacy of assuming that correlation implies causality.
created_on: 1311579992.0799
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516088.75944
owner: guidj0s
rate_limit: 15
ref_count: 2
ref_user: mhi^
type: text

<chews>
action: /call hugs
created_on: 1383671351.72994
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ciao>
action: /call bye
created_on: 1296179551.55168
enabled: 1
last_referenced_on: 1387833097.95331
owner: pragma_
rate_limit: 0
ref_count: 3
ref_user: gitesh!724f98d4@gateway/web/freenode/ip.114.79.152.212
type: text

<cjeopardy>
action: /call cjeopardy_module $channel
created_on: 1406470585.35501
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1406470904.86333
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491380107.97773
modulelauncher_subpattern: s/(\S+)\\ (\S+)\\ /a b /
nooverride: 0
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 10
ref_count: 2725
ref_user: mudeerinc!d5de3688@gateway/web/freenode/ip.213.222.54.136
type: text

<cjeopardy_answer_module>
action: cjeopardy_answer.pl
add_nick: 1
created_on: 1406470549.13778
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491366230.08667
modulelauncher_subpattern: s/(\S+)\\ (\S+)\\ /$1 $2 /
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
preserve_whitespace: 1
rate_limit: 0
ref_count: 59501
ref_user: Vaelatern!~Vaelatern@cvgateway.utdallas.edu
type: module
unquote_spaces: 1
workdir: cjeopardy

<cjeopardy_filter_module>
action: cjeopardy_filter.pl
add_nick: 1
created_on: 1481083831.56066
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491043776.05323
modulelauncher_subpattern: s/(\S+)\\ (\S+)/$1 $2/
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 82
ref_user: brabo!~brabo@globalshellz/owner/brabo
type: module
unquote_spaces: 1
workdir: cjeopardy

<cjeopardy_hint_module>
action: cjeopardy_hint.pl
add_nick: 1
created_on: 1406653901.63156
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491354960.79459
modulelauncher_subpattern: s/(\S+)\\ (\S+)/$1 $2/
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 19638
ref_user: alyptik!znc@unaffiliated/alyptik
type: module
unquote_spaces: 1
workdir: cjeopardy

<cjeopardy_module>
action: cjeopardy.pl
add_nick: 1
created_on: 1406470527.29871
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491380107.97853
modulelauncher_subpattern: s/(\S+)\\ (\S+)/$1 $2/
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
preserve_whitespace: 1
rate_limit: 0
ref_count: 2739
ref_user: mudeerinc!d5de3688@gateway/web/freenode/ip.213.222.54.136
type: module
unquote_spaces: 1
workdir: cjeopardy

<cjeopardy_scores_module>
action: cjeopardy_scores.pl
add_nick: 1
created_on: 1422478842.39069
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1490298114.13814
modulelauncher_subpattern: s/(\S+)\\ (\S+)\\ /$1 $2 /;
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 1293
ref_user: X-Scale!~ARM@214.20.108.93.rev.vodafone.pt
type: module
unquote_spaces: 1
workdir: cjeopardy

<clang>
action: /call cc -lang=clang
created_on: 1421454505.33853
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490956097.23355
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 521
ref_user: dorp!~dorp@bzq-84-111-138-241.cablep.bezeqint.net
type: text

<clang++>
action: /call cc -lang=clang++
created_on: 1432006565.75769
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1484143449.21428
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<clisp>
action: /call cc -lang=clisp
created_on: 1428305953.867
enabled: 1
last_referenced_in: qwename
last_referenced_on: 1483331054.27444
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 16
ref_user: qwename!~qwename@45.72.210.183
type: text

<cluebat>
action: /me whacks $args with a $sizes $colors cluebat.
created_on: 1208762427
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1330910685.48058
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: sha0
type: text

<codeblocks>
action: /say Code::Blocks is a fairly popular IDE for C and C++ development. Some folks beef that it has been distributing nightly builds and not releasing stable ones for quite some time now, others like it for this very fact. http://codeblocks.org
created_on: 1185606931
enabled: 1
last_referenced_in: izabera
last_referenced_on: 1422143396.19663
owner: Jafet
rate_limit: 15
ref_count: 3
ref_user: izabera!~izabera@unaffiliated/izabera
type: text

<codepad>
action: codepad.pl
created_on: 1269788272
enabled: 1
last_referenced_in: qwename
last_referenced_on: 1483331012.78393
modulelauncher_subpattern: s/(\S+)\\ /$1 /
nooverride: 1
owner: pragma_
rate_limit: 1
ref_count: 2464
ref_user: qwename!~qwename@45.72.210.183
type: module

<codepad_block>
action: codepad_block.pl
created_on: 1401091734.34793
enabled: 1
modulelauncher_subpattern: s/(\S+)\\ /$1 /
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: module

<coin>
action: /me flips a coin, it lands on $coin_side
created_on: 1346029842.03131
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489268524.86157
owner: pragma-
rate_limit: 15
ref_count: 30
ref_user: ksft!~k@wikipedia/KSFT
type: text

<coin_side>
action: heads tails heads tails heads tails heads tails "its edge" pragma-
created_on: 1346029518.78407
edited_by: dho!~dho@veep.9vx.org
edited_on: 1489268419.6253
enabled: 1
last_referenced_in: devut
last_referenced_on: 1482312195.4333
owner: pragma-
rate_limit: 15
ref_count: 2
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<colors>
action: red green yellow blue purple pink brown black white octarine cyan magenta orange
created_on: 1108931265
enabled: 1
last_referenced_in: pksadiq
last_referenced_on: 1445697840.09263
owner: pragma_
rate_limit: 15
ref_count: 28
ref_user: pksadiq!~user@106.208.32.137
type: text

<comfort>
action: /me comforts $args with a $item
created_on: 1397164326.14152
edited_by: edk!znc@unaffiliated/edk
edited_on: 1406477944.68653
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1436740651.34318
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 16
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<comforting_action>
action: "subjects $args to scaphism" "hugs $args" "pours diesel all over $args's face"
created_on: 1406478303.9788
enabled: 1
owner: edk!znc@unaffiliated/edk
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<commands>
action: /call list commands
created_on: 1179674227
enabled: 1
last_referenced_in: stobrendo
last_referenced_on: 1489403899.17095
owner: pragma_
rate_limit: 15
ref_count: 49
ref_user: StoBrendo!~StoBrendo@126.red-83-40-52.dynamicip.rima-tde.net
type: text

<common>
action: http://www.myconfinedspace.com/wp-content/uploads/2008/04/common-sense-superpower.jpg
created_on: 1230993541
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1481093695.24605
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: zid!~zid@cpc88862-pete11-2-0-cust721.4-4.cable.virginm.net
type: text

<comparch>
action: http://dept-info.labri.fr/~strandh/Teaching/AMP/Common/Strandh-Tutorial/Dir.html
created_on: 1180158061
enabled: 1
last_referenced_in: tlva
last_referenced_on: 1342639217.36108
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: tlva
type: text

<comparefloat>
action: /say How to compare floats: http://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/ -- More information about floats: http://randomascii.wordpress.com/2012/09/09/game-developer-magazine-floating-point/ and http://docs.sun.com/source/806-3568/ncg_goldberg.html
created_on: 1329897917.90205
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1377808475.72728
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: uehuehue!~NA@unaffiliated/uehuehue
type: text

<compilable>
action: /say Please paste a *compilable* test-case that exhibits your symptoms.  If the code is incomplete, we cannot discount potential errors or undefined behavior elsewhere in your code, nor can we use our tools to debug.  Please do not waste our time this way.
created_on: 1271712329
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482256580.22467
owner: pragma_
rate_limit: 15
ref_count: 14
ref_user: Random832!~random@unaffiliated/random832
type: text

<compile>
action: /call cc
created_on: 1346460395.42701
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475090178.56565
owner: pragma-
rate_limit: 0
ref_count: 25
ref_user: mangul!~shangul@5.216.226.148
type: text

<compiler>
action: compiler_client.pl
created_on: 1291939583.25391
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491383565.72819
modulelauncher_subpattern: s/(\S+)\\ (\S+)(?:\\ )*/$1 $2 /
nooverride: 1
owner: pragma_
preserve_whitespace: 1
rate_limit: 0
ref_count: 68458
ref_user: prev!~prev@unaffiliated/prev
type: module

<compiler_block>
action: compiler_block.pl
created_on: 1329861004.65089
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491132471.78484
modulelauncher_subpattern: s/(\S+)\\ (\S+)\\ /$1 $2 /
nooverride: 1
owner: pragma_
preserve_whitespace: 1
rate_limit: 0
ref_count: 3988
ref_user: prev!~prev@unaffiliated/prev
type: module

<compiler_test>
action: compiler_test_client.pl
created_on: 1393571986.47118
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1435887038.0936
modulelauncher_subpattern: => s/(\S+)\\ (\S+)(?:\\ )*/$1 $2 /
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
preserve_whitespace: 1
rate_limit: 0
ref_count: 34
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<compliment>
action: compliment
created_on: 1255395343
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491211520.87217
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 401
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: module

<condiment>
action: salt vinegar lemon pepper honey onion garlic mustard chilli relish mayonnaise sauerkraut ketchup peanut-butter nacho-cheese
created_on: 1285731911.98509
edited_by: latch!latch@nat/intel/x-srbjhepzspsxlpka
edited_on: 1459875174.45903
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483746910.55752
owner: dave0
rate_limit: 15
ref_count: 5
ref_user: sathylias!~sathylias@lnsm1-toronto47-142-116-17-201.internet.virginmobile.ca
type: text

<controlstack>
action: http://www.answers.com/topic/call-stack
created_on: 1174907617
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1439227170.05942
owner: PoppaVic
rate_limit: 15
ref_count: 4
ref_user: cousteau!~cousteau@80.174.59.17.dyn.user.ono.com
type: text

<cookie>
action: /call botsnack
created_on: 1195333486
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485629370.4383
owner: pragma_
rate_limit: 15
ref_count: 67
ref_user: FrogCast!~akiva@135.0.180.167
type: text

<cookie_type>
action: chocolate chocolate-chip molasses "macademia nut" oreo oatmeal
created_on: 1446232259.24699
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<cpu>
action: http://webster.cs.ucr.edu/AoA/Windows/HTML/CPUArchitecturea3.html
created_on: 1181742365
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: leomonadedrink
type: text

<cruelty>
action: /say Dykstra - on the Cruelty of Really Teaching Computer Science: http://www.cs.utexas.edu/users/EWD/ewd10xx/EWD1036.PDF
created_on: 1343092820.31462
enabled: 1
last_referenced_in: engla
last_referenced_on: 1401302160.18012
owner: kate`
rate_limit: 15
ref_count: 3
ref_user: engla!~engla@unaffiliated/engla
type: text

<csv>
action: http://en.wikipedia.org/wiki/CSV_application_support
created_on: 1234298513
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1341272771.63438
owner: lemonade`
rate_limit: 15
ref_count: 3
ref_user: cousteau
type: text

<ct>
action: /call compiler_test $nick $channel
created_on: 1393572010.56886
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1435887038.0915
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
preserve_whitespace: 1
rate_limit: 0
ref_count: 36
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<cunt>
action: /call insult
created_on: 1470301694.10666
enabled: 1
last_referenced_in: jeks
last_referenced_on: 1485725288.74669
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: JeKs!~yaaic@ip-109-43-1-43.web.vodafone.de
type: text

<curse>
action: /call compliment
created_on: 1273798449
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1443701854.02918
owner: pragma_
rate_limit: 15
ref_count: 12
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<curses>
action: /call fuck
created_on: 1342983639.01483
enabled: 1
last_referenced_in: pessimist
last_referenced_on: 1457189491.76644
owner: pragma-
rate_limit: 15
ref_count: 10
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-oqknvectzicdwans
type: text

<cya>
action: /call bye
created_on: 1193167291
enabled: 1
last_referenced_on: 1365951478.05804
owner: pragma_
rate_limit: 0
ref_count: 7
ref_user: MykonBlu
type: text

<dads>
action: http://www.nist.gov/dads
created_on: 1104460751
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516175.42819
owner: twkm
rate_limit: 15
ref_count: 2
ref_user: mhi^
type: text

<daehateperl>
action: /say DAE hate Perl? So somebody saw some joke code about Perl one-liners being a mix of nonsensical punctuation and now they think all Perl code is like that? It's like if they went to IOCCC and then started being extremely vocal about how all C code is like IOCCC. LEL.
created_on: 1488343974.44525
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488343994.18653
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<dammit>
action: /call insult $nick
created_on: 1344228187.9057
enabled: 1
last_referenced_on: 1407762371.57144
owner: pragma-
rate_limit: 15
ref_count: 9
ref_user: cousteau!~cousteau@80.174.59.133.dyn.user.ono.com
type: text

<damnit>
action: /call insult $nick
created_on: 1344228081.18773
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1452517111.39907
owner: pragma-
rate_limit: 15
ref_count: 4
ref_user: Trigraph!Trigraph@unaffiliated/trigraph
type: text

<dance>
action: /me $dances.
created_on: 1271192355
enabled: 1
last_referenced_in: milanortsw
last_referenced_on: 1479252574.38942
owner: pragma_
rate_limit: 15
ref_count: 23
ref_user: MilanorTSW!~sakhmatd@fsf/member/MilanorTSW
type: text

<dances>
action: "does a slow Fandango" "dances an Irish jig" "does the bunny hop" "does the Macarena" "does the robot" "shakes it like a Polaroid picture" "Charlestons furiously"
created_on: 1271192341
edited_by: kate!~kate@unaffiliated/kate
edited_on: 1421536927.52827
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516246.224
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: mhi^
type: text

<databases>
action: http://www.iso-9899.info/candide/dict_databases.txt
created_on: 1269778271
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1393201619.99753
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612430.5305
owner: pragma_
rate_limit: 15
ref_count: 20
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<ddd>
action: a graphical front end to gdb and other debuggers (http://www.gnu.org/software/ddd/)
created_on: 1175114372
enabled: 1
last_referenced_in: jm0
last_referenced_on: 1474556217.49112
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: jm0!~jm0@0125200306.0.fullrate.ninja
type: text

<debugging>
action: /say Debugging starts with throwing out your assumptions.
created_on: 1372394148.71496
enabled: 1
owner: nitrix
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<def>
action: $foo
created_on: 1428090246.0495
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428093153.71577
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<define>
action: /call dict
created_on: 1269778750
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491323804.257
owner: pragma_
rate_limit: 0
ref_count: 544
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<describe>
action: /call explain
created_on: 1193083745
enabled: 1
last_referenced_in: ski
last_referenced_on: 1467745059.51242
owner: pragma_
rate_limit: 0
ref_count: 141
ref_user: ski!~ski@remote11.chalmers.se
type: text

<dict>
action: dict.org.pl
created_on: 1269777616
enabled: 1
last_referenced_in: xormor
last_referenced_on: 1491323873.26066
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 1208
ref_user: xormor!~xormor@unaffiliated/xormor
type: module
unquote_spaces: 1

<dictionaries>
action: /say I have several dictionaries: dict [DICT protocol, supports multiple dictionaries using -d option; see databases factoid]; gdict [google define:<term> search]; udict [urban dictionary website]; foldoc [aliased to dict -d foldoc]; websters [aliased to dict -d web1913]; wdict [Wikipedia search (case-sensitive and finicky)]
created_on: 1297993965.37136
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489856426.22278
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<did>
action: /call 8ball
created_on: 1286073809.59989
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484444113.84045
owner: pragma_
rate_limit: 0
ref_count: 22
ref_user: caze!~caze@unaffiliated/caze
type: text

<digits>
action: 1 2 3 4 5 6 7 8 9
created_on: 1434518181.50554
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482631349.7963
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<div0>
action: http://fun.drno.de/pics/english/divided_by_zero.jpg
created_on: 1277798070.11308
enabled: 1
last_referenced_on: 1277804358.95194
owner: Wulf
rate_limit: 15
ref_count: 4
ref_user: pragma_
type: text

<documentation>
action: http://www.faqs.org/docs/artu/ch18s02.html
created_on: 1311381861.01864
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1372191177.96124
owner: PoppaVic
rate_limit: 15
ref_count: 1
ref_user: throstur
type: text

<does>
action: /call 8ball
created_on: 1296769593.08091
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484414709.94639
owner: pragma_
rate_limit: 0
ref_count: 35
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<doesntwork>
action: /say "It doesn't work!" is not very informative for the people trying to help you.  Please describe what you think may be wrong, what results you expected to get and what instead actually happens.  Pasting a compilable test-case and/or compiler messages to http://ideone.com/ may be helpful.
created_on: 1175456821
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490902067.16367
owner: pragma_
rate_limit: 15
ref_count: 237
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<doxygen>
action: an automated documentation system: http://www.doxygen.org/
created_on: 1345729267.48058
enabled: 1
owner: Tuplanolla
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<dragonbook>
action: http://en.wikipedia.org/wiki/Dragon_Book
created_on: 1199314983
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358519236.90137
owner: Saparok
rate_limit: 15
ref_count: 11
ref_user: mhi^
type: text

<driven-development>
action: http://www.scottberkun.com/blog/2007/asshole-driven-development/
created_on: 1253816749
enabled: 1
last_referenced_in: cisswit
last_referenced_on: 1426005981.07928
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: CissWit!~cisswit@6-8.fr
type: text

<duffgrams>
action: http://www.iq0.com/duffgram/index.html
created_on: 1180325598
enabled: 1
owner: kate`
rate_limit: 15
ref_count: 1
ref_user: n00p
type: text

<duffing>
action: writing code from top to bottom, as opposed to horizontally. See http://iq0.com/notes/deep.nesting.html
created_on: 1176900462
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481467472.62592
owner: kate`
rate_limit: 15
ref_count: 137
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<east>
action: /say $rpg_ans
created_on: 1231873978
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412212.50839
owner: pragma_
rate_limit: 15
ref_count: 18
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: text

<eat_actions>
action: gobbles snarfs munches inhales "wolfs down" ingests annihilates devours consumes
created_on: 1174693106
edited_by: e!e@freenode/staff/spy.edk
edited_on: 1470870879.17123
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358519259.55499
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: mhi^
type: text

<eat_adverbs>
action: daintily hungrily messily greedily enthusiastically partially wantonly excitedly bashfully timidly
created_on: 1207738047
edited_by: kate!~kate@unaffiliated/kate
edited_on: 1437752701.39409
enabled: 1
owner: kate`
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<echo>
action: /say $args
created_on: 1442248876.76632
enabled: 1
last_referenced_in: murf
last_referenced_on: 1486597455.6399
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: murf!32872e55@gateway/web/freenode/ip.50.135.46.85
type: text

<edk_snacks>
action: "irn bru" "sautéed haggis" "haggis in an irn bru broth" "deep fried mars bars"
created_on: 1437746578.83833
edited_by: kate!~kate@unaffiliated/kate
edited_on: 1437747468.64176
enabled: 1
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<edksnack>
action: /me $eat_adverbs feeds edk $edk_snacks.
created_on: 1437746618.02454
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1468708393.19405
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 48
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<egypt>
action: /call callgraph
created_on: 1272355709
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1466007193.02703
owner: kate`
rate_limit: 15
ref_count: 14
ref_user: kate!~kate@unaffiliated/kate
type: text

<english>
action: c2english.pl
add_nick: 1
created_on: 1296182114.77211
enabled: 1
last_referenced_in: hanshenrik
last_referenced_on: 1491296786.81874
noembed: 1
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 8322
ref_user: hanshenrik!~hanshenri@2001:4647:79c2:0:d33:6b75:5e2d:a4de
type: module

<english_units>
action: http://upload.wikimedia.org/wikipedia/commons/e/eb/English_length_units_graph.svg
created_on: 1297549846.86423
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<errors>
action: /say If you have an error message please paste the actual error message.  Do not say "I have an error in my code."  Please paste the relevant code at http://ideone.com with comments indicating the line numbers and a description of what you're trying to accomplish.  Do not ask to "find the error in my code, plzz".
created_on: 1108853504
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484355799.61979
owner: pragma_
rate_limit: 15
ref_count: 37
ref_user: Boohbah!~Boohbah@unaffiliated/boohbah
type: text

<escapes>
action: http://www-ccs.ucsd.edu/c/charset.html
created_on: 1186590660
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<espdiff>
action: a program which applies the appropriate transformation to a patch or set of patches, depending on what you intend to accomplish.
created_on: 1106956904
enabled: 1
owner: prec
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<evening>
action: /say $morning_reply
created_on: 1441883585.27545
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1442240856.13053
owner: fluter!~fluter@fedora/fluter
rate_limit: 15
ref_count: 2
ref_user: fluter!~fluter@fedora/fluter
type: text

<excuse>
action: excuse.sh
created_on: 1236819394
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488988730.87453
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 489
ref_user: naptime!~naptime@47-32-211-227.dhcp.ftwo.tx.charter.com
type: module

<expand>
action: expand_macros.pl
add_nick: 1
created_on: 1385615028.69553
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487816751.70978
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 339
ref_user: fizzie!fis@unaffiliated/fizzie
type: module

<eyes>
action: /call hugs
created_on: 1326935493.13515
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471435533.85846
owner: pragma_
rate_limit: 15
ref_count: 11
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<faces>
action: :) ;) :o >:) :p :P~ :D ;-D :^) =^.^= >:O o_O
created_on: 1209250455
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1439056918.9656
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1423083150.70682
owner: kate`
rate_limit: 15
ref_count: 3
ref_user: centrinia!~centrinia@107-208-218-105.lightspeed.tukrga.sbcglobal.net
type: text

<factadd>
action: /call memeadd
created_on: 1469745072.73506
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<factoid>
action: /call fact
created_on: 1377871258.66534
enabled: 1
last_referenced_in: bengoldberg
last_referenced_on: 1491063237.51156
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 51
ref_user: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
type: text

<factoids>
action: /call list factoids
created_on: 1192737117
enabled: 1
last_referenced_in: dminuoso
last_referenced_on: 1490299133.43041
owner: pragma_
rate_limit: 15
ref_count: 40
ref_user: dminuoso!~dminuoso@unaffiliated/dminuoso
type: text

<false>
action: !true
created_on: 1197769474
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1482761030.17949
noembed: 1
owner: snhmib
rate_limit: 15
ref_count: 11
ref_user: AndChat68096!~AndChat68@196.101.248.3
type: text

<faq>
action: cfaq.pl
created_on: 1104460444
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490051767.22821
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 757
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<feeds>
action: /call hugs
created_on: 1436176661.82632
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ffi>
action: Foreign Function Interface
created_on: 1192819360
enabled: 1
last_referenced_in: langerjan
last_referenced_on: 1382539974.97452
owner: PoppaVic
rate_limit: 15
ref_count: 6
ref_user: LangerJan!~jg@p4FDCB74E.dip0.t-ipconnect.de
type: text

<fhs>
action: http://www.redhat.com/docs/manuals/linux/RHL-9-Manual/ref-guide/s1-filesystem-fhs.html
created_on: 1104460859
enabled: 1
owner: twkm
rate_limit: 15
ref_count: 6
ref_user: n00p
type: text

<filter>
action: /call cjeopardy_filter_module $channel
created_on: 1481083729.19585
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491043776.04971
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 82
ref_user: brabo!~brabo@globalshellz/owner/brabo
type: text

<find>
action: /call factfind
created_on: 1277784994.65625
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490357753.64679
owner: pbot3
rate_limit: 0
ref_count: 680
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<fine>
action: /call 8ball
created_on: 1408885763.59671
enabled: 1
last_referenced_in: kennylee
last_referenced_on: 1482845270.93326
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 4
ref_user: kennylee!~kennylee@2001:b011:5004:1c55:481c:3fb2:f1a7:bd6d
type: text

<flavor>
action: Yummy Yucky Emetic Rancid Delicious Sublime Piquant Delectable Foul Stochastic $colors:ucfirst Yummy Delicious Delectable Sublime Yummy Delicious Delectable Sublime
created_on: 1442244039.16791
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1447952996.96263
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<flavor_maybe>
action: "$flavor:lc " "$flavor:lc " "$flavor:lc " "" ""
created_on: 1446226887.21908
edited_by: edk!~edk@spy/edk0
edited_on: 1446227038.42766
enabled: 1
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<floating>
action: /say What everybody should know about floating-point arithmetic: http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and http://randomascii.wordpress.com/2012/09/09/game-developer-magazine-floating-point/
created_on: 1200954186
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1396138902.73834
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483197757.32292
owner: pragma_
rate_limit: 15
ref_count: 111
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<fnord>
action: fnord.pl
created_on: 1274561219
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475030162.62561
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 42
ref_user: pragma`!~chaos@unaffiliated/pragmatic-chaos
type: module

<foldoc>
action: /call dict -d foldoc
created_on: 1269854612
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489662187.16948
owner: pragma_
rate_limit: 15
ref_count: 81
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<foobarbaz>
action: foo bar baz
created_on: 1379514305.05482
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<for>
action: /call 8ball
created_on: 1324630871.90477
enabled: 1
last_referenced_in: sailorcire
last_referenced_on: 1486612027.35346
owner: pragma_
rate_limit: 0
ref_count: 26
ref_user: sailorcire!~sailorcir@97-85-235-199.static.stls.mo.charter.com
type: text

<fquote>
action: funnyish_quote.pl
created_on: 1258701318
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1482342052.76393
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 38
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<frowns>
action: /call hugs
created_on: 1324759341.89351
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484543866.23292
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<fruit>
action: apple cherry pumpkin plum lemon
created_on: 1446232127.46495
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1471991419.3442
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<fuckwad>
action: http://upload.wikimedia.org/wikipedia/commons/9/9a/Greater_Internet_Fuckwad_Theory.png
created_on: 1199691115
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1403978100.98505
enabled: 1
last_referenced_in: maple__
last_referenced_on: 1474420556.83371
owner: pragma_
rate_limit: 15
ref_count: 12
ref_user: Maple__!Maple@gateway/shell/panicbnc/x-abzeihpsrfscsoye
type: text

<funcpointers>
action: http://www.function-pointer.org/
created_on: 1104460679
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1339711071.93576
owner: twkm
rate_limit: 15
ref_count: 13
ref_user: sickle
type: text

<functionpointer>
action: http://www.function-pointer.org
created_on: 1104968677
enabled: 1
last_referenced_in: va
last_referenced_on: 1401573818.49063
owner: orbitz
rate_limit: 15
ref_count: 6
ref_user: va!~filler@ares08.inai.de
type: text

<g>
action: /call google
created_on: 1240680519
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491156604.2709
noembed: 1
owner: pragma_
rate_limit: 15
ref_count: 176
ref_user: prev!~prev@unaffiliated/prev
type: text

<g++>
action: /call cc -lang=cpp
created_on: 1428108350.79492
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486251414.74213
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 301
ref_user: pchaos!~pchaos@unaffiliated/pchaos
type: text

<gas-notes>
action: http://www.cs.cmu.edu/afs/cs.cmu.edu/academic/class/15213-s00/doc/gas-notes.txt
created_on: 1199243990
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1341418592.08034
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: cousteau
type: text

<gcc>
action: /call cc
created_on: 1104389164
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421546559.17301
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491080884.56439
owner: pragma_
rate_limit: 0
ref_count: 265
ref_user: ronsor!~user@unaffiliated/ronsor
type: text

<gcc-macros>
action: http://gcc.gnu.org/onlinedocs/cpp/Common-Predefined-Macros.html
created_on: 1296116876.12476
enabled: 1
last_referenced_in: mindlessdrone
last_referenced_on: 1378307934.86205
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: MindlessDrone!~MindlessD@HSI-KBW-134-3-130-100.hsi14.kabel-badenwuerttemberg.de
type: text

<gcchacks>
action: http://www.ibm.com/developerworks/linux/library/l-gcc-hacks/
created_on: 1261374181
enabled: 1
last_referenced_in: dorp
last_referenced_on: 1400847684.51454
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: dorp!~dorp@46.120.11.7
type: text

<gdb>
action: /say GDB website: http://www.gnu.org/software/gdb/ - GDB Manual: http://sourceware.org/gdb/current/onlinedocs/gdb/
created_on: 1104460628
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612051.05621
owner: twkm
rate_limit: 15
ref_count: 37
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<gdefine>
action: gdefine.pl
created_on: 1236819675
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489858717.58495
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 462
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<gdict>
action: /call gdefine
created_on: 1255125488
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489858717.58294
owner: pragma_
rate_limit: 15
ref_count: 366
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<get>
action: /me $attacks $args with a $sizes $colors $animal_adjectives $animals
created_on: 1257711390
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1452735838.70187
owner: Irishmanluke
rate_limit: 15
ref_count: 25
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<ghi>
action: $animals
created_on: 1428090259.6321
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<giggity>
action: /say giggity giggity
created_on: 1331328488.44898
enabled: 1
last_referenced_in: justjealouse
last_referenced_on: 1399990308.67171
owner: GeorgeJ
rate_limit: 15
ref_count: 2
ref_user: justjealouse!~temp3@192.12.88.234
type: text

<gives>
action: /call saythanks
created_on: 1436024094.08432
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436024322.02007
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1458933928.45442
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 11
ref_user: olspookishmagus!~pookie@snf-137798.vm.okeanos.grnet.gr
type: text

<glares>
action: /call hugs
created_on: 1469745410.7575
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469745469.65905
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<gnumake>
action: http://www.gnu.org/software/make/manual/make.pdf
created_on: 1194222910
enabled: 1
last_referenced_in: mmango
last_referenced_on: 1426734638.20418
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: mmango!~Mangopear@108-217-142-114.lightspeed.milwwi.sbcglobal.net
type: text

<go>
action: /call cc -lang=go
created_on: 1428671512.05207
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489264742.27292
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 27
ref_user: bg!~marchelzo@unaffiliated/marchelzo
type: text

<goddammit>
action: /call insult $nick
created_on: 1396540442.18447
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485940116.80539
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: izabera!~izabera@unaffiliated/izabera
type: text

<goddamnit>
action: /call insult $nick
created_on: 1396540429.23704
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1465889147.7289
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<goldberg>
action: http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html
created_on: 1313521090.05729
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358515673.60882
owner: PoppaVic
rate_limit: 15
ref_count: 4
ref_user: mhi^
type: text

<good>
action: /call 8ball
created_on: 1408885768.62137
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487183856.60085
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 25
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<good-bye>
action: /call bye
created_on: 1417691581.36881
enabled: 1
last_referenced_on: 1417691585.20466
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<good\s+girl>
action: me wags her tail happily.
created_on: 1271799942
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<goodbye>
action: /call bye
created_on: 1417691576.1316
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491355080.69518
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 3
ref_user: dude12312414!None@gateway/shell/elitebnc/x-osunwocwlqhbsfmy
type: text

<goodjob>
action: /say Thank you, master.
created_on: 1483495526.63159
enabled: 1
last_referenced_in: cr1t1cal
last_referenced_on: 1483495771.5356
owner: cr1t1cal!~chiken@60-242-215-61.static.tpgi.com.au
rate_limit: 15
ref_count: 2
ref_user: cr1t1cal!~chiken@60-242-215-61.static.tpgi.com.au
type: text

<google>
action: /call google_search $nick
created_on: 1322955668.41469
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491156604.27315
owner: pragma_
rate_limit: 15
ref_count: 610
ref_user: prev!~prev@unaffiliated/prev
type: text

<google_search>
action: g.pl
created_on: 1322955852.0967
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491156604.27575
modulelauncher_subpattern: s/(\S+)\\ /$1 /
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 572
ref_user: prev!~prev@unaffiliated/prev
type: module

<greenspun>
action: /say Greenspun's Tenth Rule of Programming: "Any sufficiently complicated C or Fortran program contains an ad-hoc, informally-specified bug-ridden slow implementation of half of Common Lisp."
created_on: 1108933892
enabled: 1
owner: mauke
rate_limit: 15
ref_count: 3
ref_user: leth
type: text

<greet>
action: /call hi
created_on: 1371341579.36823
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1425427675.65661
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1428016476.52314
owner: pragma-
rate_limit: 0
ref_count: 48
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<grot>
action: /say <grot> I remember the relief of waking up one morning (sane) in a hospital bed, after a night of terror after smoking cannbis, having freaked out completely and developed symptoms that went beyond ordinary panic attacks
created_on: 1260048234
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1282602919.32164
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: apropos
type: text

<gspy>
action: gspy.pl
created_on: 1105953720
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1365946280.62845
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 53
ref_user: MykonBlu
type: module

<gtop10>
action: gtop10.pl
created_on: 1175420853
enabled: 1
last_referenced_in: ejls
last_referenced_on: 1342053703.01064
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: ejls
type: module

<gtop15>
action: gtop15.pl
created_on: 1175428910
enabled: 1
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 47
ref_user: pragma_
type: module

<guesscoding>
action: the act of trying to write code without learning the language, or to use a library without reading the documentation. How guesscoders even get anything done is anyone's guess.
created_on: 1215947047
enabled: 1
last_referenced_in: awsumpwner27
last_referenced_on: 1471514976.83497
owner: Tefaj
rate_limit: 15
ref_count: 12
ref_user: awsumpwner27!~awsumpwne@wnpgmb0808w-ad04-3-63.dynamic.mtsallstream.net
type: text

<gut>
action: /call get
created_on: 1257712588
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<gw>
action: /say "Given..Want": What do you have to work with? What's the desired goal? Between them is the resulting Process. Now ask yourself: WHY am I doing this? Why THIS way?
created_on: 1254241388
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358520349.84805
owner: dbtid
rate_limit: 15
ref_count: 35
ref_user: mhi^
type: text

<hack>
action: /say hack the planet!
created_on: 1466693752.46786
edited_by: latch!~latch@unaffiliated/latch
edited_on: 1466693802.99258
enabled: 1
last_referenced_in: latch
last_referenced_on: 1466693755.74996
owner: latch!~latch@unaffiliated/latch
rate_limit: 15
ref_count: 1
ref_user: latch!~latch@unaffiliated/latch
type: text

<haha>
action: /call 8ball
created_on: 1404728253.13718
enabled: 1
last_referenced_in: moongazer
last_referenced_on: 1480951619.31279
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 7
ref_user: moongazer!~moongazer@117.198.81.21
type: text

<hands>
action: /call gives
created_on: 1436175393.89758
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1458933928.44948
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: olspookishmagus!~pookie@snf-137798.vm.okeanos.grnet.gr
type: text

<happy\s+new\s+year>
action: say Happy New Year, $nick!
created_on: 1199174945
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<has>
action: /call 8ball
created_on: 1296164798.11986
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490151860.97875
owner: pragma_
rate_limit: 0
ref_count: 45
ref_user: fluter_!~fluter@fedora/fluter
type: text

<hash>
action: http://en.wikipedia.org/wiki/Hashtable
created_on: 1199914203
enabled: 1
last_referenced_in: vrachvolos
last_referenced_on: 1465765827.09363
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: Vrachvolos!~KVIrc@66.243.213.232
type: text

<haskell>
action: /call cc -lang=haskell
created_on: 1350601167.29372
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428671499.02081
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488656335.57942
owner: pragma-
rate_limit: 0
ref_count: 46
ref_user: tomleb!~tomleb@71.19.249.82
type: text

<hates>
action: /call hugs
created_on: 1324055645.43143
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482646492.42045
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<heh>
action: /call 8ball
created_on: 1437498470.30069
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489573665.99128
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<hello>
action: /call hi
created_on: 1403807316.91693
enabled: 1
last_referenced_in: cousteau`
last_referenced_on: 1489591228.69289
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 145
ref_user: cousteau`!581a5952@gateway/web/freenode/ip.88.26.89.82
type: text

<help>
action: /say To learn all about me, see http://www.iso-9899.info/wiki/Candide
action_with_args: /say To learn all about $args, see http://www.iso-9899.info/wiki/Candide#$args
created_on: 1109792986
enabled: 1
last_referenced_in: andre123
last_referenced_on: 1491328570.91672
owner: NeverDream
rate_limit: 0
ref_count: 2381
ref_user: andre123!90acbb13@gateway/web/freenode/ip.144.172.187.19
type: text

<herring>
action: a vicious species, loyal only to Baughn. Attempts to wrest control of the Herring Hordes can result in consequences similar to http://fukung.net/v/2833/15cod.jpg .
created_on: 1173805492
enabled: 1
last_referenced_in: aedx
last_referenced_on: 1433769732.85818
owner: Baughn
rate_limit: 15
ref_count: 5
ref_user: Aedx!~Aedx@82.219.32.157
type: text

<hey>
action: /call hi
created_on: 1322629844.14708
enabled: 1
last_referenced_in: jm0
last_referenced_on: 1484782969.5703
owner: pragma_
rate_limit: 0
ref_count: 93
ref_user: jm0!~jm0@0125200306.0.fullrate.ninja
type: text

<hi>
action: /say $hi_phrases, $args
created_on: 1109044278
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491354955.46657
owner: pragma_
rate_limit: 0
ref_count: 2135
ref_user: alyptik!znc@unaffiliated/alyptik
type: text
use_output_queue: 1

<hi_phrases>
action: "Well, hello there" "Hi there" "Hey, whats up" Hola Hi Hello "Que pasa" "How are you doing" "How's it going"
created_on: 1109044257
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: dav7
type: text

<hint>
action: /call cjeopardy_hint_module $nick  $channel
created_on: 1406653962.70469
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1422425509.62943
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491354960.79075
noembed: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 19653
ref_user: alyptik!znc@unaffiliated/alyptik
type: text

<hit>
action: /call slap
created_on: 1258701405
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1482217832.56093
owner: pragma_
rate_limit: 15
ref_count: 15
ref_user: Mannn!~Mannn____@2605:6000:f514:b800:785e:9116:892c:3af2
type: text

<hits>
action: /call hugs
created_on: 1427588105.70028
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1479697548.43994
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: E0D!5ffa58f0@gateway/web/freenode/ip.95.250.88.240
type: text

<hola>
action: /call hi
created_on: 1193167207
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476892470.9606
owner: pragma_
rate_limit: 0
ref_count: 17
ref_user: latch!~latch@unaffiliated/latch
type: text

<holds>
action: /call hug
created_on: 1297986113.21568
enabled: 1
last_referenced_on: 1297986188.50171
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: kulp
type: text

<homework>
action: /say We can help with homework, as long as it's within the spirit of the assignment. We won't do it for you, though. Ask questions such as "Why is it that ... ?" rather than "Show me how to ..."
created_on: 1231165509
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489872627.67597
owner: kate`
rate_limit: 15
ref_count: 49
ref_user: Hello71!~Hello71@wikipedia/Hello71
type: text

<horoscope>
action: horoscope
created_on: 1255107146
enabled: 1
last_referenced_in: esselfe
last_referenced_on: 1491181015.73479
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 215
ref_user: esselfe!~bsfc@unaffiliated/esselfe
type: module

<horrorscope>
action: horrorscope
created_on: 1277799286.01727
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1488748058.27504
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 72
ref_user: tire!~tire@cpe-172-101-20-238.maine.res.rr.com
type: module

<hostile>
action: http://web.archive.org/web/20050425085922/http://www.iscblog.info/blog/display/32
created_on: 1105037725
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1428221454.98967
owner: prec
rate_limit: 15
ref_count: 4
ref_user: aport!~user@ip70-181-128-208.sd.sd.cox.net
type: text

<house>
action: /say What you're attempting is akin to an apprentence carpenter attempting to construct an entire house without having learned how to measure.  In other words, there will be a lot of holes -- if the entire contraption doesn't fall apart completely.
created_on: 1194058489
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1288602578.9381
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: n00p
type: text

<how>
action: /say $nick:  $how_answers
created_on: 1276845773
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1427588290.86344
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491175448.4908
owner: pragma_
rate_limit: 0
ref_count: 276
ref_user: Labtec901!~Labtec901@104.131.251.86
type: text
use_output_queue: 1

<how_answers>
action: "I don't know." "If you investigate a $sizes amount further, you can figure it out." "Are you thinking clearly?" "Are you sure you're not a $sizes $idiots?" "Read the $manuals, you $sizes $idiots."
created_on: 1193949354
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1395849300.744
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838610.51465
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<howto>
action: /say http://samizdat.mines.edu/howto/HowToBeAProgrammer.html
created_on: 1208326120
enabled: 1
last_referenced_in: saparok
last_referenced_on: 1362361158.13577
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: Saparok
type: text

<htdp>
action: /say How to Design Programs: http://www.htdp.org/
created_on: 1270427313
enabled: 1
last_referenced_in: angstrom
last_referenced_on: 1284743490.85082
owner: kate`
rate_limit: 15
ref_count: 3
ref_user: angstrom
type: text

<hug>
action: /me hugs $args
created_on: 1205458354
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1487285403.59617
owner: pragma_
rate_limit: 15
ref_count: 35
ref_user: phox!~phox@c-73-225-0-79.hsd1.wa.comcast.net
type: text

<hugs>
action: /me $hugs_responses $nick
action_with_args: /me $hugs_responses $nick
created_on: 1322959326.6386
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1490277379.34929
owner: pragma_
rate_limit: 0
ref_count: 248
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text
use_output_queue: 1

<hugs_responses>
action: tickles "winks at" "blushes at" "bats its eyes at" hugs kisses slaps "frowns at" "wiggles its butt at"
created_on: 1323733048.36535
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<hush>
action: /me blushes and goes quiet for now.
created_on: 1258843946
enabled: 1
last_referenced_in: latch
last_referenced_on: 1477408414.43447
owner: pragma_
rate_limit: 15
ref_count: 11
ref_user: latch!~latch@unaffiliated/latch
type: text

<i2a>
action: Introduction to Algorithms - http://highered.mcgraw-hill.com/sites/0070131511/
created_on: 1198330021
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358520362.84688
owner: Baughn_
rate_limit: 15
ref_count: 5
ref_user: mhi^
type: text

<ia>
action: /say Your inner animal is a $sizes $animal_adjectives $animals, $args.
created_on: 1174590993
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1393300064.52641
owner: pragma_
rate_limit: 15
ref_count: 95
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<iceman>
action: /say There are two types of people in this world: http://i.imgur.com/zSEBf2R.mp4
created_on: 1486324219.45594
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1486324430.54392
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<icicle-binfmt>
action: rudimentary program loader with system libraries included. See: https://github.com/cheery/icicle-binfmt See Also: http://en.wikipedia.org/wiki/Loader_(computing)
created_on: 1322092850.91233
enabled: 1
owner: Cheery
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ide>
action: http://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments
created_on: 1268466837
enabled: 1
last_referenced_in: gl
last_referenced_on: 1484061092.03492
owner: pragma_
rate_limit: 15
ref_count: 12
ref_user: gl!~p@hack.tf
type: text

<ideone>
action: ideone.pl
created_on: 1272176604
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1401824040.15028
modulelauncher_subpattern: s/([^ ]+)\s+(.*)/$1 '$2'/
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 6927
ref_user: bennabiy!~Thunderbi@96-37-209-0.dhcp.leds.al.charter.com
type: module

<ideonetext>
action: http://i.imgur.com/9qp5UiU.gif
created_on: 1466523897.59126
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<idiots>
action: moron knucklehead dolt half-wit retard idiot chowderhead idiot
created_on: 1194139898
enabled: 1
last_referenced_in: nitrix
last_referenced_on: 1372818445.5074
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: nitrix
type: text

<ilmm>
action: /say I love my mother. Her behaviour is well defined.
created_on: 1272700243
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1406594778.95431
owner: n00p
rate_limit: 15
ref_count: 1
ref_user: fluter!~fluter@fedora/fluter
type: text

<infix>
action: /call rpn_module infix
created_on: 1400996965.38655
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1466334734.7371
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 19
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<info>
action: /call factinfo
created_on: 1277259101.38088
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1490110540.93896
owner: pbot3
rate_limit: 0
ref_count: 530
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<insult>
action: insult.pl
created_on: 1236819209
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491369852.48794
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 1291
ref_user: ruggishun!~weechat@unaffiliated/icetooth
type: module

<insults>
action: "your mum circulates like a public key, servicing more requests than HTTP." "if your mom was a collection class, her insert method would be public." "you're so lame you could encode mp3's." "keep trying; fizzbuzz isn't that hard." "what do you and structs have in common? No class." "your code is so wretched the cache invalidates as it loads it."
created_on: 1483495722.7353
enabled: 1
owner: cr1t1cal!~chiken@60-242-215-61.static.tpgi.com.au
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<integer>
action: http://wikipedia.org/wiki/Integer
created_on: 1189048945
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1486729658.36052
owner: prec
rate_limit: 15
ref_count: 12
ref_user: zjkj!~zjkj@217.118.64.57
type: text

<intelmanuals>
action: http://developer.intel.com/products/processor/manuals/index.htm
created_on: 1260039944
enabled: 1
owner: ColonelJ
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<is>
action: /call 8ball
created_on: 1277624712.94018
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491168892.44587
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 319
ref_user: ronsor!~user@unaffiliated/ronsor
type: text

<it\s+works>
action: works
created_on: 1231373738
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<item>
action: rock porcupine banana sock supernova balloon bathyscape
created_on: 1406477891.26857
enabled: 1
owner: edk!znc@unaffiliated/edk
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<itsatrap>
action: http://www.dilbert.com/dyn/str_strip/000000000/00000000/0000000/000000/90000/2000/700/92768/92768.strip.sunday.gif
created_on: 1277910211.5416
enabled: 1
last_referenced_on: 1277910221.1587
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<itworks>
action: /call works
created_on: 1231373861
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489532640.521
owner: pragma_
rate_limit: 15
ref_count: 72
ref_user: pnbeast!~pnbeast@c-73-128-167-188.hsd1.md.comcast.net
type: text

<jargon>
action: /call dict -d jargon
created_on: 1403859625.88363
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612328.78841
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 7
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<java>
action: /call cc -lang=java
created_on: 1428671076.50901
enabled: 1
last_referenced_in: prev
last_referenced_on: 1489250882.61341
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 49
ref_user: prev!~prev@unaffiliated/prev
type: text

<javabad>
action: /call size
created_on: 1199480034
enabled: 1
last_referenced_on: 1297127501.97805
owner: Baughn_
rate_limit: 15
ref_count: 3
ref_user: carcat
type: text

<javaschools>
action: http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html
created_on: 1297127623.92844
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1428662536.94508
owner: ouah
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<join>
action: /join $args
created_on: 1384136725.84767
enabled: 1
owner: bcnjr5!~bcnjr5@adsl-184-32-209-227.mia.bellsouth.net
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<js>
action: /call cc -lang=javascript
created_on: 1427954431.44853
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487184035.33062
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 34
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<jump>
action: /me jumps out the window
created_on: 1194414478
enabled: 1
owner: kp
rate_limit: 15
ref_count: 1
ref_user: kp
type: text

<kate`>
action: Lasagnasian
created_on: 1177655583
enabled: 1
last_referenced_in: edk
last_referenced_on: 1433545329.4452
owner: Baughn
rate_limit: 15
ref_count: 13
ref_user: edk!~edk@spy/edk0
type: text

<kernelnewbies>
action: #kernelnewbies at irc.kernelnewbies.org (or irc.oftc.net).
created_on: 1107807003
enabled: 1
last_referenced_in: pessimist
last_referenced_on: 1426099632.58747
owner: noselasd
rate_limit: 15
ref_count: 2
ref_user: Pessimist!Pessimist@gateway/shell/bnc4free/x-wlpsiwdfspchsumu
type: text

<kickass>
action: /me kicks $args's ass with a $weapon
created_on: 1208762874
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484549614.9067
owner: andy
rate_limit: 15
ref_count: 11
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<kicks>
action: /call hugs
created_on: 1326935472.58861
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476882698.17683
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: dminuoso1!~dminuoso@unaffiliated/dminuoso
type: text

<kill>
action: /me kills $args with a $sizes $colors $animals
created_on: 1258609384
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485508481.87477
owner: PARLIAMENT
rate_limit: 15
ref_count: 36
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<kiss>
action: /me kisses $args
created_on: 1233633783
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1454553245.75394
owner: pragma_
rate_limit: 15
ref_count: 40
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kisses>
action: /call hugs
created_on: 1323765158.84333
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1428310471.28569
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<kmkf>
action: /say Kate's Makefiles! You'll hate them! http://kmkf.elide.org/
created_on: 1438962104.69819
enabled: 1
last_referenced_in: edk
last_referenced_on: 1455737986.97626
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 2
ref_user: edk!edk@spy/edk0
type: text

<ksh>
action: /call cc -lang=ksh
created_on: 1421776324.61461
enabled: 1
last_referenced_in: random832
last_referenced_on: 1489178522.8417
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 16
ref_user: Random832!~random@unaffiliated/random832
type: text

<lag>
action: /call lagcheck
created_on: 1323748295.38299
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1433193821.05131
owner: pragma_
rate_limit: 0
ref_count: 42
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<lart>
action: /me makes an attitude adjustment upside $args's head with the aid of a $lart_tool
created_on: 1208660815
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440377811.24113
owner: vorpal
rate_limit: 15
ref_count: 33
ref_user: IWishIKnew!~IWishIKne@nv-71-49-208-64.dyn.embarqhsd.net
type: text

<lart_tool>
action: 2x4 knobkerry AK-47 flamethrower "tactical nuclear weapon"
created_on: 1208660856
enabled: 1
last_referenced_in: dozn
last_referenced_on: 1480199225.72899
owner: vorpal
rate_limit: 15
ref_count: 1
ref_user: dozn!~dozn@104.236.154.251
type: text

<later>
action: /call bye
created_on: 1193167299
enabled: 1
last_referenced_on: 1424231992.48413
owner: pragma_
rate_limit: 0
ref_count: 2
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<latest>
action: /call top20 recent
created_on: 1194642834
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1441137944.86381
owner: pragma_
rate_limit: 0
ref_count: 25
ref_user: MethylatorX!~Methylato@41.238.133.230
type: text

<lawl>
action: /call lol
created_on: 1369908170.46593
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1448407454.62944
owner: pragma-
rate_limit: 0
ref_count: 1
ref_user: longcat!~long@112.90.228.83
type: text

<leak>
action: /say A memory leak occurs when a dynamically allocated memory is left without the free() counterpart being called. Valgrind is a tool to check memory leaks.
created_on: 1439778596.37377
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475195213.17664
owner: beco!~beco@unaffiliated/beco
rate_limit: 15
ref_count: 3
ref_user: hypnopothesis!~hypnopoth@nuglyfe.com
type: text

<learn21days>
action: http://abstrusegoose.com/249
created_on: 1268317654
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358520371.33905
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: mhi^
type: text

<lick>
action: $lick_responses
created_on: 1442245257.30938
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1442246499.9617
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1442820657.70727
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 54
ref_user: fluter!~fluter@fedora/fluter
type: text

<lick_action>
action: "/me licks $args. $flavor!"
created_on: 1442247319.93556
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<lick_responses>
action: "/say $nick: I'm not licking that!" $lick_action $lick_action $lick_action
created_on: 1442245287.22307
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1442247360.0835
enabled: 1
owner: edk!~edk@spy/edk0
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<licks>
action: /call hugs
created_on: 1326935466.03479
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1442245190.00692
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<lidapin>
action: /say Vill du bli fin, får du lida pin.
created_on: 1268386194
enabled: 1
owner: kate`
rate_limit: 15
ref_count: 1
ref_user: kate`
type: text

<likes>
action: /call hugs
created_on: 1324055651.38565
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1432029047.27343
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: zyxwvuts!~zyxwvuts@c220-239-46-46.eburwd6.vic.optusnet.com.au
type: text

<line>
action: a sequence of characters terminated by a newline sequence ('\n' in C, CRLF in various Internet protocols).
created_on: 1106779283
enabled: 1
last_referenced_in: maxxe
last_referenced_on: 1372678268.04252
owner: prec
rate_limit: 15
ref_count: 4
ref_user: maxxe
type: text

<linkage>
action: /call linkageandstorage
created_on: 1221600538
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482339050.99129
owner: kate`
rate_limit: 15
ref_count: 16
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<linkageandstorage>
action: /say http://www.iso-9899.info/wiki/LinkageAndStorage
created_on: 1221600612
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1482339050.99684
owner: kate`
rate_limit: 15
ref_count: 44
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<literal>
action: /call show
created_on: 1179678945
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489268262.01909
owner: pragma_
rate_limit: 0
ref_count: 20
ref_user: bg!~marchelzo@unaffiliated/marchelzo
type: text

<lol>
action: /call yes
created_on: 1338485250.28569
enabled: 1
last_referenced_in: emil
last_referenced_on: 1491169222.27626
owner: pragma-
rate_limit: 0
ref_count: 103
ref_user: Emil!emil@emil.fi
type: text

<look\s*up\s([^\s]+)>
action: man $1
created_on: 1194261643
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<looks>
action: /call hugs
created_on: 1324759306.79891
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485939807.94439
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: izabera!~izabera@unaffiliated/izabera
type: text

<lovequote>
action: love_quote.pl
created_on: 1271363105
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489412483.98293
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 133
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: module

<loves>
action: /call hugs
created_on: 1324055640.85083
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440036297.3751
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: shric!uid107964@spy/chris
type: text

<lsb>
action: http://refspecs.freestandards.org/LSB_2.1.0/LSB-generic/LSB-generic/book1.html
created_on: 1182000690
enabled: 1
last_referenced_in: daowee
last_referenced_on: 1379822753.73422
owner: PoppaVic
rate_limit: 15
ref_count: 6
ref_user: daowee!~daowee@m83-185-149-136.cust.tele2.se
type: text

<lto>
action: /say Link-time optimization is a type of program optimization performed by a compiler to a program at link time. Link time optimization occurs in programming languages that compile programs on a file-by-file basis (such as C and Fortran), rather than all at once (such as Java).
created_on: 1279664679.51194
enabled: 1
last_referenced_in: edk
last_referenced_on: 1429572839.51591
owner: zumbi
rate_limit: 15
ref_count: 4
ref_user: edk!edk@spy/edk0
type: text

<lua>
action: /call cc -lang=lua
created_on: 1331249196.71294
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1427959968.80054
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487505262.77793
owner: pragma_
rate_limit: 0
ref_count: 50
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<luke>
action: http://www.destgulch.com/movies/luke/luke18.wav
created_on: 1180621290
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1437498446.93546
owner: PoppaVic
rate_limit: 15
ref_count: 9
ref_user: jd1!~jd1@unaffiliated/jd1
type: text

<magic>
action: /me dances, magic, dance!
created_on: 1196992954
enabled: 1
last_referenced_in: nitrix
last_referenced_on: 1382329046.73463
owner: pragma_
rate_limit: 15
ref_count: 14
ref_user: nitrix!~nitrix@unaffiliated/nitrix
type: text

<make>
action: /say make: *** Don't know how to make `$args'. Stop.
created_on: 1194222985
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480315856.06187
owner: pragma_
rate_limit: 0
ref_count: 56
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<makefile>
action: /call toolchain
created_on: 1375137786.97454
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476534455.72631
owner: pragma-
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<makefiles>
action: /call toolchain
created_on: 1375137791.56743
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1448283412.9035
owner: pragma-
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<man>
action: man.pl
created_on: 1107137901
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491383532.28369
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 1676
ref_user: prev!~prev@unaffiliated/prev
type: module
unquote_spaces: 1

<manpage>
action: /say Read the manual.
created_on: 1204078264
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1419298643.07223
owner: themathkid
rate_limit: 15
ref_count: 10
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<manual>
action: /me $attacks $args $rtfm_smack the $body_part with a $sizes $colors manual.
created_on: 1199758660
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1395849286.82068
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<manuals>
action: book manual documentation
created_on: 1395849325.28479
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<marco>
action: /say polo!
created_on: 1261090941
enabled: 1
owner: Wulf_
rate_limit: 15
ref_count: 4
ref_user: megabraker
type: text

<math>
action: math.pl
add_nick: 1
created_on: 1105953711
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489265115.42248
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 790
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<me>
action: /me $args
created_on: 1109820558
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489922263.93416
owner: pragma_
rate_limit: 15
ref_count: 60
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text
use_output_queue: 1

<mitletter>
action: http://www.c4vct.com/kym/humor/mitlettr.htm
created_on: 1251212390
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<modules>
action: /call list modules
created_on: 1192736662
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480042754.2539
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: gwozt!~gwozt@78.167.198.26
type: text

<moons>
action: /call hugs
created_on: 1429995457.71492
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1429995462.4558
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<morning>
action: /say $morning_reply
created_on: 1296244983.20176
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475513937.82626
owner: pragma_
rate_limit: 0
ref_count: 23
ref_user: ninjacodr!~ninjacodr@201.42.155.104.bc.googleusercontent.com
type: regex
use_output_queue: 1

<morning_reply>
action: "Good morning" "Leave me alone and go back to bed!" "What, is it morning already?"
created_on: 1296244963.89068
enabled: 1
last_referenced_in: w|t
last_referenced_on: 1378741923.5747
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: w|t!~ok@unaffiliated/wt/x-8228070
type: text

<msg>
action: /msg $args
created_on: 1109820572
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1485550827.40137
owner: pragma_
rate_limit: 0
ref_count: 110
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<muffin_type>
action: bran blueberry "poppy seed" "chocolate chip" "banana chocolate chip" "walnut and coffee" "banana nut" lemon pumpkin
created_on: 1468162292.98632
edited_by: prgm-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1468166095.40846
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1481406284.80613
owner: prgm-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<murder>
action: /me murders $args.
created_on: 1471835167.99306
enabled: 1
last_referenced_in: fstd
last_referenced_on: 1482947459.36987
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<murphy>
action: /say If there's more than one possible outcome of a job or task, and one of those outcomes will result in disaster or an undesirable consequence, then somebody will do it that way.
created_on: 1191356935
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1346931987.03228
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: pragma-
type: text

<mute>
action: /call ignore .* $args
created_on: 1270574813
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 2
ref_user: pragma_
type: text

<next>
action: /say Another satisfied customer!  NEXT!!
action_with_args: /say $args is another satisfied customer! NEXT!!
created_on: 1270253222
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491254464.55194
owner: pragma_
rate_limit: 15
ref_count: 759
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<nibbles>
action: /call hugs
created_on: 1383671355.92242
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470167392.53639
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: doppel!~chatzilla@ip70-189-197-158.lv.lv.cox.net
type: text

<nickometer>
action: nickometer.pl
created_on: 1398906408.2956
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489325994.19719
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 383
ref_user: Learath2!~learath2@unaffiliated/learath2
type: module

<nickreg>
action: /say In order to speak in this channel, you must register your IRC nick-name through NickServ.  See `/msg nickserv help register` or follow the guide at http://www.wikihow.com/Register-a-User-Name-on-Freenode
created_on: 1267639456
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484549621.22221
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<nim>
action: /say Give orange me give eat orange me eat orange give me eat orange give me you.
created_on: 1372104670.43842
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1436222185.33198
owner: CaZe
rate_limit: 15
ref_count: 5
ref_user: jd1!jd1@nat/intel/x-yzknikrmsuoovklq
type: text

<nm>
action: /call nickometer
created_on: 1398914811.74403
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489325994.18703
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 276
ref_user: Learath2!~learath2@unaffiliated/learath2
type: text

<no>
action: /call 8ball
created_on: 1322858513.95352
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491097003.55313
owner: pragma_
rate_limit: 0
ref_count: 85
ref_user: qwename!~qwename@198.13.214.119
type: text

<noaids>
action: "Whew, you lucked out" "The needle was clean!" "The fresh corpse was clean!" "The prosititute didn't have aids!" "The teddy bear was aids free." "The homeless bum didn't have aids!" "Your hands were aids-free that time." "$who_answers didn't have aids . . . yet!" "$who_answers is aids-free at this time."
created_on: 1264284537
enabled: 1
last_referenced_in: jasondockers
last_referenced_on: 1445398744.9619
owner: PARLIAMENT
rate_limit: 15
ref_count: 6
ref_user: jasondockers!~cipher__@vpn-cuboulder29-196-dhcp.colorado.edu
type: text

<nobook>
action: /say If you don't have a book then you are wasting your time and ours.  The only good way to learn C is through a book. If you are too cheap to buy a book then just give up and learn something else that doesn't require a book.  In either case, go away until you have a book.
created_on: 1186245248
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1474480024.92413
enabled: 1
last_referenced_in: marchelzo
last_referenced_on: 1474480038.73108
owner: Baughn
rate_limit: 15
ref_count: 12
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<nope>
action: /call no
created_on: 1395494969.19351
enabled: 1
last_referenced_in: nimbi
last_referenced_on: 1483331895.60689
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 8
ref_user: nimbi!~Muy@1.20.156.185
type: text

<north>
action: /say $rpg_ans
created_on: 1231873805
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479680005.36225
owner: pragma_
rate_limit: 15
ref_count: 27
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<northeast>
action: /say $rpg_ans
created_on: 1231873992
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412235.30816
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: mvm!~mvmaldere@ptr-gh1fj6zkugbfd3fi93z.18120a2.ip6.access.telenet.be
type: text

<northwest>
action: /say $rpg_ans
created_on: 1231873986
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412252.51131
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: karthyk!~karthyk@2620:1e8:2:1::2fa
type: text

<notfound>
action: "What are you $talking about?" "Say what?" "Come again?" "Make sense much?"
created_on: 1194262141
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<nowandthen>
action: http://www.cheaphumor.com/nowandthen.html
created_on: 1254519322
enabled: 1
last_referenced_in: cisswit
last_referenced_on: 1426006065.81637
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: CissWit!~cisswit@6-8.fr
type: text

<nutsandbolts>
action: http://justpaste.it/7ux
created_on: 1296942648.15658
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<o_o>
action: /call :)
created_on: 1439056854.80563
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475235149.34462
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: fluter!~fluter@fedora/fluter
type: text

<ocaml>
action: /call cc2 -lang=ocaml
created_on: 1350601251.23123
enabled: 1
last_referenced_on: 1426006044.0089
owner: pragma-
rate_limit: 15
ref_count: 1
ref_user: CissWit!~cisswit@6-8.fr
type: text

<offers>
action: /call gives
created_on: 1436174568.03219
enabled: 1
last_referenced_in: #pbot2-test
last_referenced_on: 1436174574.14195
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<offtopic>
action: /say My pants are going on a rapmage through a long island bowling alley
created_on: 1199181686
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1487203046.79303
owner: kp
rate_limit: 15
ref_count: 41
ref_user: atk!~Arch-TK@fsf/member/Arch-TK
type: text

<ok>
action: /call 8ball
created_on: 1323990515.89827
enabled: 1
last_referenced_in: gulshan
last_referenced_on: 1488727798.98284
owner: pragma_
rate_limit: 15
ref_count: 95
ref_user: gulshan!2f1f02e6@gateway/web/freenode/ip.47.31.2.230
type: text
use_output_queue: 1

<okay>
action: /call 8ball
created_on: 1323990710.25825
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484348638.88161
owner: pragma_
rate_limit: 0
ref_count: 20
ref_user: yumbox_!~user@unaffiliated/yumbox
type: text

<one-true-solution>
action: /me commits seppuku
created_on: 1194548341
enabled: 1
last_referenced_in: vad
last_referenced_on: 1382499390.36756
owner: Cin
rate_limit: 15
ref_count: 4
ref_user: vad!~filler@exit.inai.de
type: text

<ood>
action: /say Knock it off! There's an ongoing off-topic discussion!
created_on: 1488404433.7333
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1490987948.4212
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 5
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<oopbad>
action: http://web.archive.org/web/20091028044333/http://www.geocities.com/tablizer/oopbad.htm
created_on: 1190225745
edited_by: doppel!~chatzilla@ip70-189-197-158.lv.lv.cox.net
edited_on: 1475795710.14369
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475795682.04336
owner: Baughn
rate_limit: 15
ref_count: 8
ref_user: doppel!~chatzilla@ip70-189-197-158.lv.lv.cox.net
type: text

<oops>
action: /call 8ball
created_on: 1360662719.62438
enabled: 1
last_referenced_in: devut
last_referenced_on: 1490185498.70348
owner: pragma-
rate_limit: 0
ref_count: 23
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<oops,>
action: /call 8ball
created_on: 1360662713.247
enabled: 1
last_referenced_in: socialblunder
last_referenced_on: 1445496465.4477
owner: pragma-
rate_limit: 0
ref_count: 4
ref_user: SocialBlunder!~SocialBlu@2605:a000:111a:e00a:4951:4a7a:8f79:9e82
type: text

<options>
action: /me points accusingly at $args, "What are your CLI options?!"
created_on: 1185471587
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1324631688.69553
owner: PoppaVic
rate_limit: 15
ref_count: 3
ref_user: fluter
type: text

<pant_status>
action: off on crotchless "around ankles" "showing butt-crack"
created_on: 1173823726
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1322934221.46819
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: cousteau
type: text

<pants>
action: /say Pants status: $pant_status
created_on: 1189873025
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471857353.56943
owner: pragma_
rate_limit: 15
ref_count: 23
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<paper>
action: /call rockpaperscissors
created_on: 1273104506
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479673379.61438
owner: pragma_
rate_limit: 0
ref_count: 33
ref_user: Random832!~random@unaffiliated/random832
type: text

<paren>
action: paren/paren.py
add_nick: 1
created_on: 1384409686.31718
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1384410037.52574
enabled: 1
last_referenced_in: x-scale
last_referenced_on: 1491372735.79423
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 823
ref_user: X-Scale!~ARM@230.37.103.87.rev.vodafone.pt
type: module

<pass-by-reference>
action: http://www.techlists.org/archives/programming/pythonlist/2007-07/msg01786.shtml
created_on: 1210056353
enabled: 1
last_referenced_in: perks
last_referenced_on: 1446496888.50078
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: perks!~perks@static-108-54-254-164.nycmny.fios.verizon.net
type: text

<pass-by-value>
action: /call pass-by-reference
created_on: 1210056370
enabled: 1
last_referenced_on: 1371142588.8541
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: ne2k
type: text

<paste>
action: /say Paste code/errors to http://ideone.com or http://codepad.org
created_on: 1247850332
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488889246.38093
owner: PoppaVic
rate_limit: 15
ref_count: 222
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<pastebin>
action: /say Please paste code snippets to http://codepad.org or http://ideone.com.
created_on: 1193081655
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1418523922.83203
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488340786.37645
owner: pragma_
rate_limit: 15
ref_count: 194
ref_user: nchambers!883e8633@gateway/web/cgi-irc/kiwiirc.com/ip.136.62.134.51
type: text

<pastebin.com>
action: /say pastebin.com and similar pastebins have ugly colour contrast, hard-to-read fonts, and insert pesky line numbers into the clipboard. Please use a better pastebin, like http://codepad.org
created_on: 1216238716
enabled: 1
last_referenced_in: fluter
last_referenced_on: 1450947349.84289
owner: Jafet
rate_limit: 15
ref_count: 9
ref_user: fluter!~fluter@fedora/fluter
type: text

<pats>
action: /call hugs
created_on: 1324567602.49483
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476023735.14109
owner: pragma_
rate_limit: 15
ref_count: 25
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<patterns>
action: /call size
created_on: 1199480016
enabled: 1
owner: Baughn_
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<peers>
action: /call hugs
created_on: 1324759316.4249
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488028899.75607
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<perl>
action: /call cc -lang=perl
created_on: 1273693148
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421474530.39403
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1489175399.67521
owner: pragma_
rate_limit: 0
ref_count: 118
ref_user: darkseid4nk!~darkseid@myfirstthoughtwas.wtf
type: text

<pets>
action: /call hugs
created_on: 1323748084.56117
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1480388859.88481
owner: pragma_
rate_limit: 15
ref_count: 26
ref_user: sha0!~sha0@CPEbcc8101460c0-CMbcc8101460bd.cpe.net.cable.rogers.com
type: text

<pftgu>
action: http://programminggroundup.blogspot.com/2007/01/programming-from-ground-up.html
created_on: 1209194984
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1378228106.69456
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: DaveS!DaveS@unaffiliated/daves
type: text

<pheph>
action: /say 'Post hoc, ergo propter hoc': the logical fallacy of assuming that temporal succession implies causality.
created_on: 1311580101.47747
enabled: 1
last_referenced_in: doppel
last_referenced_on: 1422305059.92653
owner: guidj0s
rate_limit: 15
ref_count: 2
ref_user: doppel!~doppel@ip68-96-169-47.lv.lv.cox.net
type: text

<php>
action: /call cc2 -lang=php
created_on: 1276978893
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476006591.60023
owner: pragma_
rate_limit: 0
ref_count: 39
ref_user: izalove!~izabera@unaffiliated/izabera
type: text

<pi>
action: 3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230
created_on: 1245253689
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1395632286.44924
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<pinches>
action: /call hugs
created_on: 1441694680.07335
enabled: 1
last_referenced_in: #pbot2
last_referenced_on: 1441712575.79316
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: fluter!~fluter@fedora/fluter
type: text

<ping>
action: /say pong
created_on: 1109821018
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489803324.09402
owner: pragma_
rate_limit: 15
ref_count: 154
ref_user: smusiland!uid218212@gateway/web/irccloud.com/x-bdwjpubhushjotwv
type: text

<pls>
action: /call hugs
created_on: 1490277376.22395
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1490277379.34699
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<plz>
action: /say Please do not abbreviate 'please', 'thanks' or 'sorry'.  It makes you look as though you don't really care.
created_on: 1187652483
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1489040624.63631
owner: Draconx
rate_limit: 15
ref_count: 36
ref_user: haavard!root@haavard.me
type: text

<points>
action: /call hugs
created_on: 1324064775.24349
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485978745.32197
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<pokes>
action: /call hugs
created_on: 1323748120.8709
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488340769.53688
owner: pragma_
rate_limit: 15
ref_count: 22
ref_user: nchambers!883e8633@gateway/web/cgi-irc/kiwiirc.com/ip.136.62.134.51
type: text

<poll>
action: /say Please do not poll the channel asking if anyone knows about or has used something.  Just ask your specific question about it and if someone knows then they'll answer.
created_on: 1345710794.34155
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490172184.47383
owner: pragma`
rate_limit: 15
ref_count: 52
ref_user: dorp_!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<pong>
action: /say ping
created_on: 1444378726.8832
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1448368120.09646
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<popcorn>
action: /me dispenses popcorn to everyone.
created_on: 1426615285.71607
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1457011585.74726
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: atomx!~user@178.138.63.126
type: text

<popcorn_type>
action: caramel buttered ""
created_on: 1446232689.62865
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<poptart_type>
action: "Cinnamon and Brown Sugar" "Frosted Strawberry" "Frosted Cherry"
created_on: 1468865524.87114
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<portal>
action: http://portal.wecreatestuff.com/
created_on: 1194469348
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1328733429.66505
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: CaZe
type: text

<potd>
action: /say $randomnick is the special person of the day!
created_on: 1433764673.09444
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1434865065.31103
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: snuffeluffegus!~snuffeluf@cpe-45-37-81-6.nc.res.rr.com
type: text

<pounding-a-nail>
action: http://weblogs.asp.net/alex_papadimoulis/archive/2005/05/25/408925.aspx
created_on: 1189284983
enabled: 1
last_referenced_in: rob```
last_referenced_on: 1330652139.11976
owner: prec
rate_limit: 15
ref_count: 3
ref_user: rob```
type: text

<pragma-weechat-gif>
action: http://i.imgur.com/g8sT0vW.gifv
created_on: 1486782327.56936
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488112657.2119
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 4
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<praise>
action: /call compliment
created_on: 1371816586.47695
enabled: 1
last_referenced_in: ##astronomy
last_referenced_on: 1431003591.37727
owner: pragma-
rate_limit: 0
ref_count: 17
ref_user: boru!~boru@unaffiliated/boru
type: text

<prec>
action: /call paren
created_on: 1384449408.94113
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1384449454.21196
enabled: 1
last_referenced_in: x-scale
last_referenced_on: 1491372735.79185
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 455
ref_user: X-Scale!~ARM@230.37.103.87.rev.vodafone.pt
type: text

<predef>
action: http://predef.sourceforge.net/ -- the Pre-defined C/C++ Compiler Macros project
created_on: 1191766349
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475358636.18508
owner: Auris-
rate_limit: 15
ref_count: 23
ref_user: kate!~kate@unaffiliated/kate
type: text

<prepared>
action: /say If you're working on this, you really shouldn't be asking C questions.  All your C questions should have been answered years ago or you probably aren't ready/prepared for this project.
created_on: 1175464588
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516319.95549
owner: pragma_
rate_limit: 15
ref_count: 14
ref_user: mhi^
type: text

<preprocessor>
action: an application that processes code before compilation/execution.
created_on: 1109792251
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1469374065.34675
owner: NeverDream
rate_limit: 15
ref_count: 11
ref_user: AirPlanes2!~ShortBob@bzq-79-179-108-36.red.bezeqint.net
type: text

<process>
action: /call projectprocess
created_on: 1180197626
enabled: 1
last_referenced_on: 1287915049.13831
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: apparle
type: text

<prods>
action: /call hugs
created_on: 1326935348.17865
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1439045097.16771
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: schquid!~schquid@unaffiliated/schquid
type: text

<projectprocess>
action: http://www.projectcartoon.com/cartoon/644
created_on: 1180197615
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1287915049.14373
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: apparle
type: text

<pukes>
action: /call hugs
created_on: 1422227141.7073
enabled: 1
last_referenced_on: 1422227148.37378
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<punches>
action: /call hugs
created_on: 1476894923.89596
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<py>
action: /call cc -lang=python
created_on: 1276574930
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488655509.55306
owner: pragma_
rate_limit: 0
ref_count: 17
ref_user: atk!Arch-TK@fsf/member/Arch-TK
type: text

<python>
action: /call cc -lang=python
created_on: 1276564725
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421503972.61966
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489637407.83576
owner: pragma_
rate_limit: 0
ref_count: 133
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: text

<python3>
action: /call cc -lang=python3
created_on: 1421776387.88671
enabled: 1
last_referenced_in: phroa
last_referenced_on: 1482646481.8227
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 29
ref_user: phroa!phroa@phroa.net
type: text

<qalc>
action: qalc.pl
add_nick: 1
created_on: 1431084720.34907
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489265109.66009
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 115
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module

<qbasic>
action: /call cc -lang=qbasic
created_on: 1431932113.6221
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1448423079.37464
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 16
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<qed>
action: the multi-file, command line editor written by Rob Pike
created_on: 1106889817
enabled: 1
owner: Major-Willard
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<qshow>
action: cjeopardy_show.pl
add_nick: 1
created_on: 1432561885.24609
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1483896919.43673
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 21
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: module
workdir: cjeopardy

<qstats>
action: cjeopardy_qstats.pl
add_nick: 1
created_on: 1432379252.43647
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485655560.78508
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 81
ref_user: __builtin!~xray@rockbox/developer/builtin
type: module
unquote_spaces: 1
workdir: cjeopardy

<query>
action: /say Please stop spamming the channel. Use a /query
created_on: 1382602516.51542
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1486595254.87857
owner: boru!~boru@unaffiliated/boru
rate_limit: 15
ref_count: 40
ref_user: smurf!32872e55@gateway/web/cgi-irc/kiwiirc.com/ip.50.135.46.85
type: text

<question>
action: /say Don't ask to ask, just ask.
created_on: 1250110634
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1489660245.70178
owner: joeyadams
rate_limit: 15
ref_count: 19
ref_user: mar77i!~mar77i@77-56-218-203.dclient.hispeed.ch
type: text

<question_type>
action: pointless interesting fascinating profound clueless uninteresting boring childish clever tricky
created_on: 1195012266
enabled: 1
last_referenced_in: immibis
last_referenced_on: 1422655627.51392
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: immibis!~ChatZill1@219-88-93-35.jetstream.xtra.co.nz
type: text

<quiet>
action: /call mute
created_on: 1433765287.31625
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470118693.5094
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: Zhivago!~zhivago@unaffiliated/zhivago
type: text

<quine-relay>
action: https://github.com/mame/quine-relay
created_on: 1393289199.66966
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<quote>
action: random_quote.pl
created_on: 1258699440
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491085052.09499
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 2559
ref_user: Introoter!derpson@gateway/shell/xshellz/x-qycecjflxmdmuxmk
type: module

<quotegrabs>
action: /say For quotegrab commands: http://www.iso-9899.info/wiki/Candide#Quotegrabs -- For a table of grabbed quotes: http://www.iso-9899.info/candide/quotegrabs.html
created_on: 1260876948
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1392194730.11958
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489659851.0552
owner: pragma_
rate_limit: 15
ref_count: 48
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<quotehelp>
action: /say Usage: quote [text] [--author <author>] -- If you use `quote` without arguments, it returns a random quote; if you use it with an argument, it searches for quotes containing that text; if you add --author <name> at the end, it searches for a quote by that author; if you specify text and --author, it searches for quotes by that author, containing that text.
created_on: 1258776165
enabled: 1
last_referenced_in: korans
last_referenced_on: 1462294624.70118
owner: pragma_
rate_limit: 15
ref_count: 25
ref_user: korans!~korans@62.68.162.144
type: text

<r>
action: http://i.imgur.com/HL1ZR.jpg
created_on: 1296695473.42519
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489611905.65007
owner: pragma_
rate_limit: 15
ref_count: 13
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<rafb>
action: /say Read A Fucking Book - Your primary guide for learning C should be a good book (see ,books). You must not expect to become a proficient C programmer just by reading crappy online `tuts', staring at other people's code, and/or boring us to death by asking dozens of exceedingly trivial questions.
created_on: 1194140597
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1413357730.35189
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1413451213.11708
owner: pragma_
rate_limit: 15
ref_count: 78
ref_user: Chris!~chris@unaffiliated/chris
type: text

<rank>
action: /call cjeopardy_scores_module $nick $channel rank
created_on: 1423716592.1287
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1490298114.13431
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 963
ref_user: X-Scale!~ARM@214.20.108.93.rev.vodafone.pt
type: text

<ras>
action: /say RAS Syndrome -- which stands for "Redundant Acronym Syndrome Syndrome" -- is a tongue-in-cheek name that describes the problem of unnecessary repetition hidden by an acronym.  http://suite101.com/article/redundant-acronyms-a65825
created_on: 1349484810.94327
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1476852521.40756
owner: pragma-
rate_limit: 15
ref_count: 2
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<reaction>
action: "If you say so." "Why, thanks." "Are you sure about that?" "YES!" "Mission accomplished." "Takes one to know one!"
created_on: 1194383902
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428200850.78748
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<reading>
action: /say READING HURTS!
created_on: 1188437684
enabled: 1
owner: fax
rate_limit: 15
ref_count: 12
ref_user: kate`
type: text

<really>
action: /call 8ball
created_on: 1401302078.34002
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488198271.01133
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 13
ref_user: lotry!uid183301@gateway/web/irccloud.com/x-kwpfrgwaqrsqclby
type: text

<reason>
action: /call excuse
created_on: 1242245702
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479961633.82388
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<reason\s+for>
action: excuse
created_on: 1236819909
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<recurrence>
action: see: recurse
created_on: 1238875844
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1491095621.85213
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095664.13738
owner: ws
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<recurse>
action: see: recursive
created_on: 1491095643.27088
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095758.93574
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<recursion>
action: see: recurrence
created_on: 1238875840
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095549.87099
owner: ws
rate_limit: 15
ref_count: 6
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<recursive>
action: see: recursion
created_on: 1491095658.14174
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491095793.09919
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<rednecks>
action: http://tlf.cx/bilder/tn/computing_for_farmers.jpg.ths.html
created_on: 1180158102
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1281897519.77329
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: pippijn
type: text

<remove>
action: /call forget
created_on: 1345761957.79169
enabled: 1
last_referenced_in: chiken
last_referenced_on: 1484442744.25977
owner: pragma-
rate_limit: 0
ref_count: 11
ref_user: chiken!~chiken@60-242-215-61.static.tpgi.com.au
type: text

<report>
action: /say $arg[0] has been reported $arg[1:] (report id $digits$digits$digits$digits$digits)
created_on: 1434518235.27902
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1435297254.0201
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491034292.79234
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 60
ref_count: 255
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<reset>
action: /call cjeopardy_scores_module $nick $channel reset
created_on: 1422479150.06886
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1489828858.54685
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 36
ref_user: Mqx_!~Mqx_@176.151.125.142
type: text

<retort>
action: /call insult
created_on: 1237170413
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1434864997.34351
owner: snhmib
rate_limit: 15
ref_count: 14
ref_user: snuffeluffegus!~snuffeluf@cpe-45-37-81-6.nc.res.rr.com
type: text

<rimshot>
action: /say ba-dum, tsss
created_on: 1437689305.60777
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1487606384.64659
owner: fstd!~fstd@unaffiliated/fisted
rate_limit: 15
ref_count: 38
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<rock>
action: /call rockpaperscissors
created_on: 1273104501
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284901.82976
owner: pragma_
rate_limit: 0
ref_count: 24
ref_user: protege!~shynoob@182.59.209.11
type: text

<rockpaperscissors>
action: /me uses $rps!
created_on: 1273104483
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284901.8338
owner: pragma_
rate_limit: 0
ref_count: 58
ref_user: protege!~shynoob@182.59.209.11
type: text

<roll>
action: dice_roll.pl
created_on: 1346030824.30518
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284943.9359
nooverride: 1
owner: pragma-
rate_limit: 0
ref_count: 156
ref_user: protege!~shynoob@182.59.209.11
type: module

<roulette>
action: $roulette_outcome
created_on: 1254874530
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1479350797.96924
effective-level: 20
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491374729.5915
locked: 1
owner: pragma_
rate_limit: 0
ref_count: 1088
ref_user: Nikon!~karou@unaffiliated/karou
type: text

<roulette_outcome>
action: "/kick $nick *BANG!*" "/say $args: *click*"
created_on: 1254874748
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1483465875.3044
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485895960.11322
locked: 1
owner: pragma_
rate_limit: 15
ref_count: 9
ref_user: Learath2!~learath2@unaffiliated/learath2
type: text

<roulettegun>
action: /say http://images.dailykos.com/images/270625/story_image/gun.jpg
created_on: 1479485169.17724
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<rpg_ans>
action: "You are standing $rpg_location.  You see a $sizes $rpg_location2 to the $rpg_direction." "You have been killed by a $sizes $animals!  R.I.P."
created_on: 1231873892
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424231907.04856
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<rpg_direction>
action: north east south west southwest northwest northeast southeast
created_on: 1231873524
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424231918.53011
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<rpg_distance>
action: "near" "close to" "next to" "in"
created_on: 1231873429
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<rpg_location>
action: "$rpg_distance a $sizes $rpg_location2"
created_on: 1231873398
enabled: 1
last_referenced_in: rsca
last_referenced_on: 1290179338.78133
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: rsca
type: text

<rpg_location2>
action: city castle headshop village "bath house"
created_on: 1231873954
enabled: 1
last_referenced_in: rsca
last_referenced_on: 1290179333.76742
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: rsca
type: text

<rpn>
action: /call rpn_module rpn
created_on: 1400996958.13411
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470286548.78903
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 30
ref_user: latch!~latch@unaffiliated/latch
type: text

<rpn_module>
action: rpn.pl
add_nick: 1
created_on: 1400996803.70824
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470286548.7936
modulelauncher_subpattern: s/(\S+)\\ /$1 /
nooverride: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 52
ref_user: latch!~latch@unaffiliated/latch
type: module

<rps>
action: rock paper scissors
created_on: 1273104493
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479673373.37962
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: nchambers!nchambers@freenode/spooky-exception/bartender/learnprogramming.nchambers
type: text

<rtfm>
action: /say Please find and read the documentation for that.
created_on: 1199758774
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484779352.68658
owner: pragma_
rate_limit: 15
ref_count: 57
ref_user: retrosegfault!~retrosegf@static-50-53-174-215.bvtn.or.frontiernet.net
type: text

<rtfm,>
action: /me $rtfm_attacks $args with a $rtfm_adj $colors manual.
created_on: 1384136551.67504
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1384137013.46795
owner: bcnjr5!~bcnjr5@adsl-184-32-209-227.mia.bellsouth.net
rate_limit: 15
ref_count: 3
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<rtfm_adj>
action: big large tiny small huge gigantic teeny "incredibly heavy" ludicrous redundant indecipherable
created_on: 1384136416.45312
enabled: 1
owner: bcnjr5!~bcnjr5@adsl-184-32-209-227.mia.bellsouth.net
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<rtfm_attacks>
action: thwacks bashes smacks whacks
created_on: 1384136483.85357
enabled: 1
last_referenced_in: fstd
last_referenced_on: 1479425025.9894
owner: bcnjr5!~bcnjr5@adsl-184-32-209-227.mia.bellsouth.net
rate_limit: 15
ref_count: 1
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<rtfm_smack>
action: upside across about over
created_on: 1109185551
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<ruby>
action: /call cc2 -lang=ruby
created_on: 1289051812.05396
enabled: 1
last_referenced_in: decomposite
last_referenced_on: 1472553809.13996
owner: pragma_
rate_limit: 0
ref_count: 14
ref_user: decomposite!~decomposi@unaffiliated/decomposite
type: text

<rump>
action: /me lubs rumpy.
created_on: 1458328051.36032
enabled: 1
owner: rump!~rump@lime.seandunaway.com
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<rvalue>
action: the "value of an expression"
created_on: 1251745571
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456751828.50883
owner: Wulf_
rate_limit: 15
ref_count: 4
ref_user: heftig!heftig@archlinux/developer/heftig
type: text

<ryu>
action: http://i.imgur.com/HL1ZR.jpg
created_on: 1322510860.1691
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489611983.21153
owner: se7
rate_limit: 15
ref_count: 22
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<say>
action: /say $args
created_on: 1251663502
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491363312.30631
owner: pragma_
rate_limit: 0
ref_count: 1824
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: text
use_output_queue: 1

<saythanks>
action: /say $saythanksphrases, $args!
created_on: 1436024405.21861
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1458933928.461
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: olspookishmagus!~pookie@snf-137798.vm.okeanos.grnet.gr
type: text
use_output_queue: 1

<saythanksphrases>
action: Thanks "Why, thank you" "Thank you"
created_on: 1436024440.20309
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<scheme>
action: /call cc -lang=scheme
created_on: 1428306282.46281
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491157354.97801
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: beeman!~beeman@unaffiliated/beeman
type: text

<scissors>
action: /call rockpaperscissors
created_on: 1273104511
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479673393.78097
owner: pragma_
rate_limit: 0
ref_count: 16
ref_user: Random832!~random@unaffiliated/random832
type: text

<score>
action: /call cjeopardy_scores_module $nick $channel score
created_on: 1422478940.91347
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1486707118.52936
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 304
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<screw>
action: /call insult $nick
created_on: 1344228114.59734
enabled: 1
last_referenced_in: b3h3m0th
last_referenced_on: 1446194328.59072
owner: pragma-
rate_limit: 0
ref_count: 2
ref_user: b3h3m0th!uid26288@gateway/web/irccloud.com/x-lndljwmvpssztodr
type: text

<search>
action: /call find
created_on: 1327716264.60747
enabled: 1
last_referenced_in: sathylias
last_referenced_on: 1483554183.68642
owner: pragma_
rate_limit: 0
ref_count: 8
ref_user: sathylias!~sathylias@lnsm1-toronto47-142-116-15-107.internet.virginmobile.ca
type: text

<seen>
action: /say $nick: /msg nickserv info $args
created_on: 1215709237
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490896398.47301
owner: Jafag
rate_limit: 15
ref_count: 60
ref_user: Learath2!~learath2@unaffiliated/learath2
type: text

<segfault>
action: http://www.iso-9899.info/wiki/Segfault
created_on: 1106351158
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1484542366.00146
owner: prec
rate_limit: 15
ref_count: 14
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<severity>
action: very slighty moderately profoundly blatantly absolutely
created_on: 1195012218
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<sexes>
action: /call hugs
created_on: 1471991159.35552
enabled: 1
last_referenced_in: fstd
last_referenced_on: 1482947467.44376
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<sh>
action: /call cc -lang=sh
created_on: 1275822098
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421774532.22132
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491167170.55458
owner: pragma_
rate_limit: 0
ref_count: 1788
ref_user: ronsor!~user@unaffiliated/ronsor
type: text

<shoes>
action: /say Let's say you want to buy a pair of shoes, right?  You come to my shoe store and I ask you what size your feet are.  You respond, "I like red."  I say, "That's nice, I'll look for some red shoes.  What size are your feet?"  And you respond, "I really like red."  Try to answer our questions, please.
created_on: 1274214754
edited_by: edk!edk@unaffiliated/edk
edited_on: 1385024008.00191
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471991251.66975
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: doppel!~chatzilla@ip70-189-197-158.lv.lv.cox.net
type: text

<shoot>
action: /me $weapon_action its $weapon and $shoot_action $args's $body_part.
created_on: 1109021460
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1420592118.84855
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491085421.35487
owner: pragma_
rate_limit: 0
ref_count: 208
ref_user: Introoter!derpson@gateway/shell/xshellz/x-qycecjflxmdmuxmk
type: text

<shoot_action>
action: "blows away" "shoots off" "shoots holes in" "takes off" "blows off" blasts "blasts off" "blasts through" "shoots through"
created_on: 1109021600
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<shoots>
action: /call shoot $nick
created_on: 1475880206.35063
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1475880212.43203
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<should>
action: /call advice
created_on: 1258762922
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491071107.32062
owner: pragma_
rate_limit: 0
ref_count: 66
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text
use_output_queue: 1

<shouldn?'?t?\s.*>
action: 8ball
created_on: 1195010837
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489814724.40387
owner: pragma_
rate_limit: 0
ref_count: 14
ref_user: _ohm!~xubuntu@unaffiliated/-ohm/x-0955948
type: regex

<show>
action: /call factshow
created_on: 1277259146.86343
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1491095613.09986
owner: pbot3
rate_limit: 0
ref_count: 1189
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<shut>
action: /call 8ball
created_on: 1427979640.92419
enabled: 1
last_referenced_in: meth
last_referenced_on: 1481330238.28927
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 12
ref_user: meth!~meth@unaffiliated/meth
type: text

<sicp>
action: "Structure and Interpretation of Computer Programs", http://mitpress.mit.edu/sicp/
created_on: 1191901455
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1442944174.41154
owner: pizza_
rate_limit: 15
ref_count: 52
ref_user: teod!~TODonnell@D8FF7428.cst.lightpath.net
type: text

<sicp+>
action: http://swiss.csail.mit.edu/classes/6.001/abelson-sussman-lectures/
created_on: 1198816281
enabled: 1
owner: snhmib
rate_limit: 15
ref_count: 7
ref_user: n00p
type: text

<silly_adjective>
action: silly absurd foolish daft
created_on: 1375924713.37996
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<size>
action: http://steve-yegge.blogspot.com/2007/12/codes-worst-enemy.html
created_on: 1199479944
enabled: 1
last_referenced_in: caze
last_referenced_on: 1486845492.63687
owner: Baughn_
rate_limit: 15
ref_count: 11
ref_user: caze!~caze@unaffiliated/caze
type: text

<sizes>
action: large small tiny massive huge gigantic titanic teeny miniscule
created_on: 1108931310
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: R0b0t1
type: text

<slap>
action: /me $attacks $args with a $sizes $animal_adjectives $animals!
created_on: 1108932778
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1483363548.04869
owner: pragma_
rate_limit: 15
ref_count: 146
ref_user: raph0x88!rasanche@nat/redhat/x-ggttdrysapdxtpyy
type: text

<slaps>
action: /call shoot $nick
created_on: 1323733421.66063
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1480960954.29732
owner: pragma_
rate_limit: 15
ref_count: 26
ref_user: vclam!~unknown@c-24-11-122-3.hsd1.ut.comcast.net
type: text

<smacks>
action: /call hugs
created_on: 1326935331.03662
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1470774880.49087
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: OverCoder!OverCoder@unaffiliated/overcoder
type: text

<smart>
action: /say See http://www.catb.org/~esr/faqs/smart-questions.html
created_on: 1106519094
enabled: 1
last_referenced_in: devut
last_referenced_on: 1485875191.35852
owner: pragma_
rate_limit: 15
ref_count: 34
ref_user: DevUt!~quassel@unaffiliated/devut
type: text

<smiles>
action: /call hugs
created_on: 1324759333.06861
enabled: 1
last_referenced_on: 1427522106.6332
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: Maxdamantus!~Maxdamant@unaffiliated/maxdamantus
type: text

<snack>
action: /call botsnack
created_on: 1297911847.48645
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491158536.77652
owner: pragma_
rate_limit: 15
ref_count: 149
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<snacks>
action: "magic brownies" "crème brûlée" "$burrito_type burrito" "$taco_type taco" "$cookie_type cookie" hot-dog "duck à l'orange" "$applesauce_type apple sauce" "$popcorn_type popcorn" "sautéed carrot" nachos "$fruit pie" "$cake_type cake" "$muffin_type muffin" "bowl of $cereal_type" "$poptart_type pop-tart" currywurst banana "ice-cold water"
created_on: 1295988189.25185
edited_by: marchelzo!~marchelzo@unaffiliated/marchelzo
edited_on: 1480456947.77079
enabled: 1
last_referenced_in: marchelzo
last_referenced_on: 1480456900.24764
owner: pragma_
rate_limit: 15
ref_count: 15
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<sorry>
action: /say $nick, $sorry_replies
created_on: 1399569415.91129
edited_by: edk!~edk@spy/edk0
edited_on: 1442599123.03022
enabled: 1
last_referenced_in: big
last_referenced_on: 1491359105.6225
owner: Rainb!be3c5dda@gateway/web/freenode/ip.190.60.93.218
rate_limit: 0
ref_count: 129
ref_user: big!6b896df7@gateway/web/cgi-irc/kiwiirc.com/ip.107.137.109.247
type: text
use_output_queue: 1

<sorry_replies>
action: "It's okay." "Don't worry about it." "That's alright." "It happens."
created_on: 1429159734.03199
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<sorting>
action: /say Sorting algorithm animations: http://www.sorting-algorithms.com/
created_on: 1249125597
enabled: 1
last_referenced_in: pksadiq
last_referenced_on: 1445754062.93968
owner: kate`
rate_limit: 15
ref_count: 4
ref_user: pksadiq!~user@106.208.201.151
type: text

<source>
action: /say My guts can be browsed at https://github.com/pragma-/pbot
created_on: 1105954460
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1419812759.54563
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487034055.43516
owner: pragma_
rate_limit: 15
ref_count: 178
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<south>
action: /say $rpg_ans
created_on: 1231873967
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412143.07717
owner: pragma_
rate_limit: 15
ref_count: 7
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<southeast>
action: /say $rpg_ans
created_on: 1231873996
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412231.617
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: dho!~dho@veep.9vx.org
type: text

<southwest>
action: /say $rpg_ans
created_on: 1231874001
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424231930.10203
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<spanks>
action: /call hugs
created_on: 1323751345.50043
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470280773.58471
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: spudowiar!~spudowiar@unaffiliated/spudowiar
type: text

<sry>
action: /call plz
created_on: 1187652590
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1440499942.47099
owner: Draconx
rate_limit: 0
ref_count: 11
ref_user: TakWah!~asfdsa@p54A5CCF5.dip0.t-ipconnect.de
type: text

<stabs>
action: /call hugs
created_on: 1477442497.23266
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<stack_machine>
action: http://forth.sourceforge.net/ http://www.zetetics.com/bj/papers/moving1.htm http://www.albany.net/~hello/simple.htm http://www.ece.cmu.edu/~koopman/stack_computers/index.html http://galileo.phys.virginia.edu/classes/551.jvn.fall01/primer.htm
created_on: 1182007038
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<stares>
action: /call hugs
created_on: 1384621996.80222
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1384622103.17019
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488721504.68784
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 29
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<stfu>
action: /say No, you stfu!
created_on: 1180052783
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1442545156.74739
owner: pragma_
rate_limit: 15
ref_count: 25
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text
use_output_queue: 1

<stop>
action: /call 8ball
created_on: 1428220086.8095
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1485672982.06633
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 10
ref_user: nnpnv6!~nnpnv6@80.83.239.55
type: text

<strokes>
action: /call hugs
created_on: 1429995410.40002
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1477442110.59329
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 3
ref_user: pnbeast!~pnbeast@50-200-118-98-static.hfc.comcastbusiness.net
type: text

<stupid>
action: /say $args is a $sizes $idiots!
created_on: 1194256622
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489957859.0077
owner: pragma_
rate_limit: 15
ref_count: 63
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<subscribe>
action: /say That's fascinating. Please link us to your blog or newsletter so we can subscribe for updates.
created_on: 1468358292.10239
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491082195.54517
owner: prgm-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<sup>
action: /call hi
created_on: 1297413792.81045
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484434872.76438
owner: pragma_
rate_limit: 0
ref_count: 71
ref_user: cousteau!~cousteau@unaffiliated/cousteau
type: text

<superset>
action: C++ isn't a superset because (a) some C programs are not legal C++ programs (b) some C programs behave differently when treated as C++ programs.
created_on: 1323271397.17725
enabled: 1
last_referenced_in: vigud
last_referenced_on: 1382222702.3245
owner: se7
rate_limit: 15
ref_count: 2
ref_user: Vigud!uid1143@gateway/web/irccloud.com/x-lsqwccsadxnazljl
type: text

<surprise>
action: /say How about a nice cold glass of shut the fuck up
created_on: 1250290153
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838390.02429
owner: syntropy_
rate_limit: 15
ref_count: 4
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<synergy>
action: /say Share keyboard/mouse and copy/paste between networked computers (optionally using ssh): http://synergy-foss.org/
created_on: 1296366682.46458
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1470099081.21308
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: latch!~latch@unaffiliated/latch
type: text

<taco_type>
action: $burrito_type "hard-shell $burrito_type"
created_on: 1446232541.78037
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<take>
action: /say You take the $args.
created_on: 1231874071
enabled: 1
last_referenced_in: camthesaxman
last_referenced_on: 1480315890.85559
owner: pragma_
rate_limit: 15
ref_count: 36
ref_user: camthesaxman!~chatzilla@107-205-135-122.lightspeed.nworla.sbcglobal.net
type: text

<talking>
action: babbling talking "going on" ranting raving spouting muttering mumbling
created_on: 1194294839
enabled: 1
last_referenced_in: k4rtik
last_referenced_on: 1385108351.61361
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: k4rtik!~quassel@inet-hqmc05-o.oracle.com
type: text

<taocp>
action: The Art of Computer Programming, by Knuth, http://www.iso-9899.info/wiki/Special:Booksources/0201485419
created_on: 1104462083
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1453271477.2638
owner: twkm
rate_limit: 15
ref_count: 15
ref_user: pestle!~pestle@oscar.grumpl.com
type: text

<taunt>
action: /call insult
created_on: 1259025697
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<tcc>
action: /call cc -lang=tendra
created_on: 1341097083.07635
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1421453009.34989
enabled: 1
last_referenced_in: marchelzo
last_referenced_on: 1486052643.64689
owner: pragma-
rate_limit: 0
ref_count: 616
ref_user: marchelzo!~marchelzo@unaffiliated/marchelzo
type: text

<tcl>
action: /call cc2 -lang=tcl
created_on: 1350601237.71739
enabled: 1
last_referenced_in: qwename
last_referenced_on: 1483331012.77247
owner: pragma-
rate_limit: 0
ref_count: 2
ref_user: qwename!~qwename@45.72.210.183
type: text

<teacher>
action: /say If someone in the channel is asking pointed questions of a specific individual, please do not answer their questions if you are not that individual.  We're sure you're quite smart and capable, but the point is to let the individual infer the answer himself.  You can give a programmer Coca-cola, but if you teach them how to carbonate coffee ...
created_on: 1199779292
enabled: 1
last_referenced_in: emperiz
last_referenced_on: 1427975520.32866
owner: pragma_
rate_limit: 15
ref_count: 17
ref_user: emperiz!~emperiz@unaffiliated/emperiz
type: text

<teaching>
action: not just accepting that the person asking knows what they are doing and has merely forgotten the proper forms to use. Rather, they need insight into what solutions exist to solve the problems they face; for which, there can be no better tool than a clear explanation of the problem, even if you must draw it out of them millimeter by torturous millimeter.
created_on: 1108008187
enabled: 1
last_referenced_in: mhi^
last_referenced_on: 1358516272.80077
owner: twkm
rate_limit: 15
ref_count: 8
ref_user: mhi^
type: text

<telloff>
action: /say $args, $insults
created_on: 1483495749.39792
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488451907.35954
owner: cr1t1cal!~chiken@60-242-215-61.static.tpgi.com.au
rate_limit: 15
ref_count: 31
ref_user: cr1t1cal!~cr1t1cal@unaffiliated/cr1t1cal
type: text

<testbed>
action: A simple program that grows and evolves to _test_ what you learn/read and is disposable.
created_on: 1187198287
enabled: 1
last_referenced_in: vigud
last_referenced_on: 1376766598.45184
owner: PoppaVic
rate_limit: 15
ref_count: 4
ref_user: Vigud!uid1143@gateway/web/irccloud.com/x-wqveollupglgpcnv
type: text

<testcase>
action: /say A testcase is a minimal compilable example exhibiting your symptoms. "Minimal" means just the bare essentials required to illustrate your question. "Compilable" means that there is enough code to compile it on our machines, and therefore use our debuggers. Please paste a testcase at http://ideone.com or http://codepad.org to help us assist you.
created_on: 1249772768
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491381809.82217
owner: lemonade`
rate_limit: 15
ref_count: 1354
ref_user: mfukar!~mfukar@unaffiliated/mfukar
type: text

<than[ksx]+.*>
action: /say $welcome_replies, $nick
created_on: 1271368772
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444258999.74113
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491363312.28998
owner: pragma_
rate_limit: 0
ref_count: 76
ref_user: anonnumberanon!~anonnumbe@unaffiliated/anonnumberanon
type: regex

<thanks>
action: /say $welcome_replies, $nick
action_with_args: /say $welcome_replies, $nick
created_on: 1277870713.88835
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444258984.05739
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491168871.46841
owner: pragma_
rate_limit: 15
ref_count: 181
ref_user: Prince_!b64bc2a3@gateway/web/freenode/ip.182.75.194.163
type: text
use_output_queue: 1

<thankyoueugene>
action: http://pbfcomics.com/archive_b/PBF060-Penguin_Enemy.gif
created_on: 1482750439.45434
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<that>
action: /call 8ball
created_on: 1360662740.86483
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484405994.6768
owner: pragma-
rate_limit: 0
ref_count: 36
ref_user: Amun_Ra!~amun-ra@retro.rocks
type: text

<that's>
action: /call 8ball
created_on: 1360662732.07354
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488246726.18163
owner: pragma-
rate_limit: 0
ref_count: 29
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<the_cake>
action: "The cake was moist and delicious." "The cake is a lie ... The cake is a lie ... The cake is a lie ..."
created_on: 1195100423
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838537.01646
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<thinking>
action: http://thinking-forth.sourceforge.net/
created_on: 1185822844
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1323508578.33985
owner: PoppaVic
rate_limit: 15
ref_count: 11
ref_user: fluter
type: text

<thks>
action: /call thx
created_on: 1488343137.80946
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<thnx>
action: /call thanks
created_on: 1418451434.13811
enabled: 1
last_referenced_on: 1418451438.30014
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<threads>
action: /say POSIX Threads programming: https://computing.llnl.gov/tutorials/pthreads/
created_on: 1104460742
enabled: 1
last_referenced_in: sandman13
last_referenced_on: 1479397147.21439
owner: twkm
rate_limit: 15
ref_count: 33
ref_user: sandman13!~sandman13@unaffiliated/sandman13
type: text

<throttles>
action: /call hugs
created_on: 1429994949.39951
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1429994961.77709
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 1
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<thx>
action: /call thanks
created_on: 1179879858
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471294964.19423
owner: pragma_
rate_limit: 0
ref_count: 43
ref_user: Amiro!c530ff8a@gateway/web/cgi-irc/kiwiirc.com/ip.197.48.255.138
type: text

<tickles>
action: /call hugs
created_on: 1323747956.72611
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1438014036.48063
owner: pragma_
rate_limit: 15
ref_count: 8
ref_user: vsg1990!~vsg1990@cpe-67-241-148-119.buffalo.res.rr.com
type: text

<tiger>
action: GROAWR! http://www.cs.princeton.edu/~appel/modern
created_on: 1297528021.44358
enabled: 1
last_referenced_in: edk
last_referenced_on: 1450448865.01015
owner: snhmib
rate_limit: 15
ref_count: 5
ref_user: edk!~edk@spy/edk0
type: text

<tigerbook>
action: GROAWR! http://www.cs.princeton.edu/~appel/modern
created_on: 1297528006.4394
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491333641.47665
owner: snhmib
rate_limit: 15
ref_count: 4
ref_user: dho!~dho@veep.9vx.org
type: text

<timing>
action: /say In cryptography, a timing attack is a side channel attack in which the attacker attempts to compromise a cryptosystem by analyzing the time taken to execute cryptographic algorithms. Learn more at http://www.cs.hmc.edu/~mike/public_html/courses/security/s06/projects/dan.pdf
created_on: 1396700041.95614
enabled: 1
last_referenced_in: jack64
last_referenced_on: 1397604576.27835
owner: Jack64!~jacktakah@188.122.93.34
rate_limit: 15
ref_count: 5
ref_user: Jack64!~jacktakah@188.122.93.34
type: text

<title>
action: get_title.pl
created_on: 1258840021
enabled: 1
last_referenced_in: d4
last_referenced_on: 1459294348.25191
modulelauncher_subpattern: s/(\S+)\\ /$1 /
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 64
ref_user: d4!~d3_@unaffiliated/d3-/x-9244896
type: module

<titsorgtfo>
action: /call testcase
created_on: 1271645810
enabled: 1
last_referenced_on: 1410148298.38084
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<tnx>
action: /call thanks
created_on: 1251695064
enabled: 1
last_referenced_on: 1312567468.39309
owner: pragma_
rate_limit: 0
ref_count: 3
ref_user: dkarampin
type: text

<toolchain>
action: /say For all your makefile/scripting/toolchain needs, please join ##workingset.
created_on: 1289691889.26701
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490165590.21335
owner: PoppaVic
rate_limit: 15
ref_count: 188
ref_user: dorp_!~dorp@bzq-84-111-138-241.red.bezeqint.net
type: text

<touche>
action: /call touché
created_on: 1203837688
enabled: 1
last_referenced_on: 1399990287.31043
owner: nobody
rate_limit: 15
ref_count: 2
ref_user: justjealouse!~temp3@192.12.88.234
type: text

<touché>
action: /say Touché is what you say when you make a point, then someone makes a counterpoint.
created_on: 1203837688
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1400799345.04217
owner: themathkid
rate_limit: 15
ref_count: 3
ref_user: explodes!~explodes@unaffiliated/explodes
type: text

<tp>
action: /say Chances are no one here will care about your POSIX-related questions. Someone in ##posix might (with higher probability).
created_on: 1297750437.99921
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1457129353.47098
owner: guidj0s
rate_limit: 15
ref_count: 11
ref_user: latch!~latch@unaffiliated/latch
type: text

<true>
action: !false
created_on: 1197769594
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1485980953.96443
noembed: 1
owner: snhmib
rate_limit: 15
ref_count: 14
ref_user: lulcat-!lulcat@gateway/shell/on2pro/x-sobtuwsgyregqksv
type: text

<truth>
action: http://www.cs.virginia.edu/~evans/cs655/readings/ewd498.html
created_on: 1189455615
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 14
ref_user: n00p
type: text

<twiddle>
action: /call twiddling
created_on: 1204722036
enabled: 1
owner: kate`
rate_limit: 15
ref_count: 1
ref_user: kate`
type: text

<twiddling>
action: /call bithacks
created_on: 1221611255
enabled: 1
last_referenced_on: 1413783548.92006
owner: kate`
rate_limit: 15
ref_count: 14
ref_user: CaZe!~caze@unaffiliated/caze
type: text

<ty>
action: /call thanks
created_on: 1179879872
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490992796.71623
owner: pragma_
rate_limit: 0
ref_count: 19
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<type>
action: char, long int, double [10], int *, struct timeval, void (int, long), etc...
created_on: 1431383741.37804
enabled: 1
last_referenced_in: profess
last_referenced_on: 1478570672.57454
owner: cousteau!~cousteau@80.174.59.15.dyn.user.ono.com
rate_limit: 15
ref_count: 8
ref_user: profess!~profess@unaffiliated/csddesk
type: text

<typo>
action: typographical error
created_on: 1235599055
enabled: 1
last_referenced_in: ejls
last_referenced_on: 1342053715.22015
owner: Wulf_
rate_limit: 15
ref_count: 2
ref_user: ejls
type: text

<tyresponse>
action: /say $welcome_replies, $args
created_on: 1271368737
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1444258991.60708
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1405433264.57086
owner: pragma_
rate_limit: 0
ref_count: 250
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<u>
action: /say plz learn how 2 spl "you"! http://i.imgur.com/HL1ZR.jpg
created_on: 1252559062
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489611936.62788
owner: Wulf_
rate_limit: 15
ref_count: 39
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<ubuntumanpages>
action: sudo apt-get install manpages manpages-dev
created_on: 1238264335
enabled: 1
owner: lemonade`
rate_limit: 15
ref_count: 1
ref_user: Random832
type: text

<udefine>
action: /call urban
created_on: 1255059316
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: Kaye
type: text

<udict>
action: /call urban
created_on: 1255059294
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491334023.43884
owner: pragma_
rate_limit: 0
ref_count: 793
ref_user: badet0s!5cddd6cf@gateway/web/freenode/ip.92.221.214.207
type: text

<understood>
action: /say We understood you the first time, and answered already; you may not have understood the answers. Instead of ignoring them and repeating your question, find out what they mean.
created_on: 1204317155
enabled: 1
last_referenced_in: kate
last_referenced_on: 1469576242.4329
owner: Auris-
rate_limit: 15
ref_count: 35
ref_user: kate!~kate@unaffiliated/kate
type: text

<ungrab>
action: /call delq
created_on: 1414518647.97972
enabled: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 0
ref_user: nobody
type: text

<unicode>
action: http://icu-project.org/apiref/icu4c/ustring_8h.html
created_on: 1275736127
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<unique>
action: "We are unique!.. We are like a force of nature!.. A million points of light!.. And dark stripes!.. Exactly the same!"
created_on: 1322757942.90323
enabled: 1
owner: PoppaVic
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<unixtools>
action: /say Hints for writing Unix tools: http://monkey.org/~marius/unix-tools-hints.html
created_on: 1431868761.56861
enabled: 1
last_referenced_in: dozn
last_referenced_on: 1480199352.21895
owner: kate!~kate@unaffiliated/kate
rate_limit: 15
ref_count: 1
ref_user: dozn!~dozn@104.236.154.251
type: text

<unmaintainable>
action: /say How to write unmaintainable code: http://freeworld.thc.org/root/phun/unmaintain.html
created_on: 1207882362
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1357744644.68305
owner: vorpal
rate_limit: 15
ref_count: 4
ref_user: cousteau
type: text

<unquiet>
action: /call unmute
created_on: 1433766115.91041
enabled: 1
last_referenced_in: bhargav97
last_referenced_on: 1476203775.29163
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: Bhargav97!uid33983@gateway/web/irccloud.com/x-xxwelvixatxgfjlo
type: text

<urban>
action: urban
created_on: 1255045031
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1491356950.9753
nooverride: 1
owner: pragma_
rate_limit: 0
ref_count: 886
ref_user: Labtec901!~Labtec901@104.131.251.86
type: module

<uses>
action: /call 8ball
created_on: 1427979622.26785
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491023881.44554
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 5
ref_user: BenGoldberg!~BenGoldbe@ool-18bca78c.dyn.optonline.net
type: text

<usetherighttool>
action: /say Use the right tool for the job.  Someone once said, "if the only tool you have is a hammer, you tend to see every problem as a nail."  Avoid placing artificial limitations on your projects by keeping an open mind and learning more tools, as your skills improve.
created_on: 1225802282
enabled: 1
owner: vorpal
rate_limit: 15
ref_count: 4
ref_user: pragma_
type: text

<utf-8>
action: an ascii-compatible way to represent arbitrary unicode characters with octets. http://en.wikipedia.org/wiki/UTF-8 | printf("\xc3\xb6\n");
created_on: 1236229252
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1416714655.90767
owner: Wulf_
rate_limit: 15
ref_count: 7
ref_user: lewis1711!~lewis@121-73-79-134.cable.telstraclear.net
type: text

<utsl>
action: /say Use the Source, Luke!
created_on: 1235548349
edited_by: nitrix!~nitrix@unaffiliated/nitrix
edited_on: 1397248065.8593
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1479496498.26292
owner: Wulf4
rate_limit: 15
ref_count: 17
ref_user: emg!~emg@74-123-189-254.static.wiline.com
type: text

<valgrind>
action: a memory debugging tool.  When your program is exhibiting erratic behavior, it may be due to a memory error such as overrunning a buffer or not updating the pointer after a realloc.  Try running your program with valgrind; it will save you a lot of time.
created_on: 1249675748
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1487355132.85704
owner: joeyadams
rate_limit: 15
ref_count: 18
ref_user: dminuoso!~dminuoso@unaffiliated/dminuoso
type: text

<vampire>
action: /say The Help Vampire: A Spotter's Guide http://slash7.com/2006/12/22/vampires/
created_on: 1189558513
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1484361445.08412
owner: pragma_
rate_limit: 15
ref_count: 16
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<vera>
action: /call dict -d vera
created_on: 1270941287
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489612246.89067
owner: pragma_
rate_limit: 15
ref_count: 36
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<version>
action: /say PBot revision 1498 2017-03-03
created_on: 1490886257.86712
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1441697840.71164
enabled: 1
last_referenced_in: stobrendo
last_referenced_on: 1489403907.97525
owner: candide
rate_limit: 15
ref_count: 0
ref_user: nobody
type: text

<very>
action: /call 8ball
created_on: 1360662744.59489
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1466067242.92867
owner: pragma-
rate_limit: 0
ref_count: 5
ref_user: jack_rabbit!~jack_rabb@2601:240:8200:2380:6a17:29ff:fef6:76d8
type: text

<videotestcase>
action: /say A video testcase is a minimal viewable video exhibiting your problem. "Minimal" means just the bare essentials required to illustrate your problem. Please record a video testcase at http://www.youtube.com to help us assist you.
created_on: 1236379037
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1471760347.58313
owner: lemonade`
rate_limit: 15
ref_count: 15
ref_user: fstd!~fstd@unaffiliated/fisted
type: text

<vim-cheat-sheet>
action: http://www.viemu.com/vi-vim-cheat-sheet.gif
created_on: 1199481348
enabled: 1
last_referenced_in: pentester_
last_referenced_on: 1395494477.67125
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: pentester_!~pentester@unaffiliated/pentester
type: text

<vt100>
action: http://pegasus.cs.csubak.edu/Tables_Charts/VT100_Escape_Codes.html http://members.save-net.com/jko@save-net.com/asm/r_vt200.txt
created_on: 1188660161
enabled: 1
last_referenced_in: whoisxy
last_referenced_on: 1486134070.3207
owner: PoppaVic
rate_limit: 15
ref_count: 6
ref_user: whoisxy!~whoisxy@82.112.128.254
type: text

<warning-labels>
action: http://www.myconfinedspace.com/2007/03/23/internet-warning-labels/
created_on: 1183266883
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: pragma_
type: text

<was>
action: /call 8ball
created_on: 1270604559
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1488207787.2095
owner: pragma_
rate_limit: 0
ref_count: 30
ref_user: OdinSack!~dgid@unaffiliated/onryo
type: text

<waves>
action: /call hugs
created_on: 1324025869.78069
enabled: 1
last_referenced_on: 1324025930.18186
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: pragma_
type: text

<wdict>
action: /call wikipedia
created_on: 1257554566
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489856501.34068
owner: pragma_
rate_limit: 15
ref_count: 416
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<weapon>
action: "Beretta 9mm" "Smith and Wesson" BFG9000 MP40 "rocket launcher" "hand grenade" shotgun railgun catapult "Cupid's bow" M16 "flare gun" harpoon flamethrower "chainsaw bazooka"
created_on: 1208626492
enabled: 1
last_referenced_in: cousteau
last_referenced_on: 1383562754.36942
owner: kate`
rate_limit: 15
ref_count: 8
ref_user: cousteau!~cousteau@138.100.74.81
type: text

<weapon_action>
action: "locks and loads" cocks loads "lovingly cleans" aims
created_on: 1109021669
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1296749324.60417
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: gl
type: text

<websters>
action: /call dict -d web1913
created_on: 1273286214
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489856463.38464
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<welcome>
action: /call 8ball
created_on: 1444259028.84304
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1457011551.16413
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 2
ref_user: atomx!~user@178.138.63.126
type: text

<welcome_replies>
action: "No problem" "You're welcome" "Think nothing of it" "Not a problem" "My pleasure"
created_on: 1109979223
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1444258849.66353
owner: pragma_
rate_limit: 15
ref_count: 17
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: text

<west>
action: /say $rpg_ans
created_on: 1231873982
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1456423139.8268
owner: pragma_
rate_limit: 15
ref_count: 14
ref_user: latch!~latch@unaffiliated/latch
type: text

<whacks>
action: /call hugs
created_on: 1326935336.52992
enabled: 1
last_referenced_on: 1326935374.02385
owner: pragma_
rate_limit: 15
ref_count: 1
ref_user: pragma_
type: text

<what>
action: /say $nick, $what_answers
created_on: 1430088118.85138
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1430088157.77518
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1491096597.0581
noembed: 1
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 122
ref_user: allisio!~allisio@24-181-54-41.dhcp.gnvl.sc.charter.com
type: text
use_output_queue: 1

<what_answers>
action: "I don't know." "That is a $severity $question_type question."
created_on: 1195012185
enabled: 1
last_referenced_in: profess
last_referenced_on: 1424231855.30163
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: profess!~profess__@unaffiliated/csddesk
type: text

<where>
action: /call how
created_on: 1296119558.07728
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1442187134.19235
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490245591.14419
owner: pragma_
rate_limit: 0
ref_count: 40
ref_user: pchaos!~pchaos@unaffiliated/pchaos
type: text

<who>
action: /say $who_answers
created_on: 1258611970
enabled: 1
last_referenced_in: pchaos
last_referenced_on: 1489412543.56559
owner: pragma_
rate_limit: 15
ref_count: 126
ref_user: pchaos!~pchaos@unaffiliated/pchaos
type: text

<who_answers>
action: "Hannah Montana" "Britney Spears" "Thomas Hobbes" "Rene Descartes" "Mr. T" "Chuck Norris" "the Power Rangers" "the Teletubbies" "Spider-Man" "Hulk Hogan" "a butterfly" Goethe "Barack Obama" "John McCain" "Hillary Clinton" "Rodney Dangerfield" "LeVar Burton" "Sarah Palin"
created_on: 1258611928
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838495.15555
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<whoami>
action: /say $nick
created_on: 1270939558
enabled: 1
last_referenced_in: ##c-offtopic
last_referenced_on: 1489412415.75445
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<why>
action: /say $why_answers
created_on: 1194258443
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1428107102.27173
enabled: 1
last_referenced_in: guest73447
last_referenced_on: 1489841791.05148
owner: pragma_
rate_limit: 0
ref_count: 223
ref_user: Guest73447!~xubuntu@ip70-185-110-122.ga.at.cox.net
type: text
use_output_queue: 1

<why##c>
action: /call whymove
created_on: 1348820896.65239
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489960235.34783
owner: pragma-
rate_limit: 15
ref_count: 3
ref_user: random-nick!~random-ni@unaffiliated/random-nick
type: text

<why_answers>
action: "I don't know." "Because the $sizes $colors $animals made it that way." "That's just how it is." "If you just investigate a $sizes amount further, you can figure it out." "Because I said so!" "Are you thinking clearly?" "Are you sure you're not a $sizes $idiots?"
created_on: 1194140322
enabled: 1
last_referenced_in: masoudd
last_referenced_on: 1464838465.11524
owner: pragma_
rate_limit: 15
ref_count: 6
ref_user: masoudd!~masoudd@5.112.116.98
type: text

<whymove>
action: /say See http://freenode.net/policy.shtml and http://freenode.net/policy.shtml#channelnaming for information on the unusual channel name.
created_on: 1111196059
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489960235.35367
owner: pragma_
rate_limit: 15
ref_count: 17
ref_user: random-nick!~random-ni@unaffiliated/random-nick
type: text

<wikipedia>
action: wikipedia.pl
created_on: 1257554350
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1490246123.58647
nooverride: 1
owner: pragma_
rate_limit: 15
ref_count: 431
ref_user: pchaos!~pchaos@unaffiliated/pchaos
type: module

<win32>
action: /say For Windows API programming, try #winprog on EFnet or #winapi on freenode.
created_on: 1180888225
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1468603201.73347
owner: PoppaVic
rate_limit: 15
ref_count: 177
ref_user: prgm-!~chaos@unaffiliated/pragmatic-chaos
type: text

<winapi>
action: /call win32
created_on: 1275596861
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1468603201.72822
owner: pragma_
rate_limit: 15
ref_count: 29
ref_user: prgm-!~chaos@unaffiliated/pragmatic-chaos
type: text

<windows>
action: a thirty-two bit extension and graphical shell to a sixteen-bit patch to an eight-bit operating system originally coded for a four-bit microprocessor which was written by a two-bit company that can't stand one bit of competition.
created_on: 1106527942
enabled: 1
last_referenced_in: protege
last_referenced_on: 1486284125.30587
owner: Major-Willard
rate_limit: 15
ref_count: 34
ref_user: protege!~shynoob@182.59.209.11
type: text

<winks>
action: /call hugs
created_on: 1324759323.50384
enabled: 1
last_referenced_on: 1407747572.70758
owner: pragma_
rate_limit: 15
ref_count: 3
ref_user: FUZxxl!~fuz@d00m.org
type: text

<winprog>
action: /call win32
created_on: 1277898858.41818
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1443451689.71022
owner: pragma_
rate_limit: 15
ref_count: 11
ref_user: cousteau!~cousteau@138.100.74.81
type: text

<works>
action: /say It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
created_on: 1231373678
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489532640.52734
owner: pragma_
rate_limit: 15
ref_count: 264
ref_user: pnbeast!~pnbeast@c-73-128-167-188.hsd1.md.comcast.net
type: text

<wotsit>
action: http://www.wotsit.org, loads of file type resources!
created_on: 1199573903
enabled: 1
owner: snhmib
rate_limit: 15
ref_count: 7
ref_user: n00p
type: text

<wright>
action: http://www.cis.upenn.edu/~udani/humor/stevenwright.html
created_on: 1263178267
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1436187959.58574
enabled: 1
last_referenced_in: beaky
last_referenced_on: 1342127577.3339
owner: pragma_
rate_limit: 15
ref_count: 2
ref_user: beaky
type: text

<xy>
action: /say The XY problem:  You want to do X, but don't know how.  You think you can solve it using Y, but don't know how to do that, either.  You ask about Y, which is a strange thing to want to do.  Just ask about X.
created_on: 1175596315
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489760982.09511
owner: Draconx|Laptop
rate_limit: 15
ref_count: 455
ref_user: Hello71!~Hello71@wikipedia/Hello71
type: text

<xyproblem>
action: /call xy
created_on: 1296333623.20987
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489656185.61282
owner: pragma_
rate_limit: 15
ref_count: 5
ref_user: hlt!~annoying@2602:ffc5::ffc5:cd91
type: text

<y>
action: http://i.imgur.com/HL1ZR.jpg
created_on: 1296695481.15346
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489611932.57527
owner: pragma_
rate_limit: 15
ref_count: 24
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<yeah>
action: /call 8ball
created_on: 1436174403.50373
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1489967886.01638
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 15
ref_count: 14
ref_user: beergetarian!~rep@187-27-87-95.3g.claro.net.br
type: text

<yep>
action: /call yes
created_on: 1338485215.12562
enabled: 1
last_referenced_in: knightofwired
last_referenced_on: 1476137758.5166
owner: pragma-
rate_limit: 0
ref_count: 5
ref_user: knightofwired!~chatzilla@226.red-83-53-166.dynamicip.rima-tde.net
type: text

<yes>
action: /call 8ball
created_on: 1322858510.27981
enabled: 1
last_referenced_in: emil
last_referenced_on: 1491169222.27726
owner: pragma_
rate_limit: 0
ref_count: 176
ref_user: Emil!emil@emil.fi
type: text

<yo>
action: /call 8ball
created_on: 1179679895
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1473251226.73647
enabled: 1
last_referenced_in: xennie
last_referenced_on: 1481672783.76901
owner: pragma_
rate_limit: 0
ref_count: 20
ref_user: xennie!~No@2ProIntl/Users/randomhacker/FTTC
type: text

<you're>
action: /call 8ball
created_on: 1375924361.56038
enabled: 1
last_referenced_in: insentience
last_referenced_on: 1490230066.62286
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 61
ref_user: Insentience!~Insentien@S0106b8a38654e98d.wp.shawcable.net
type: text

<you\s+([^.,!?;]+).*$>
action: say I $args? $reaction
created_on: 1194384930
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1437254060.24816
enabled: 1
last_referenced_in: #cjeopardy
last_referenced_on: 1491179760.09128
owner: pragma_
rate_limit: 0
ref_count: 161
ref_user: danielcamiel!~danielcam@unaffiliated/danielcamiel
type: regex

<you\sremind\sme\sof\sthe\s(.*)>
action: say $nick: What $1?
created_on: 1196905060
enabled: 1
owner: pragma_
rate_limit: 0
ref_count: 0
ref_user: nobody
type: regex

<your>
action: /call 8ball
created_on: 1375924380.23248
enabled: 1
last_referenced_in: tc2keats
last_referenced_on: 1476796589.77715
owner: pragma-!~chaos@unaffiliated/pragmatic-chaos
rate_limit: 0
ref_count: 18
ref_user: tc2keats!~tc2keats@gateway/tor-sasl/tc2keats
type: text

<youredoingitwrong>
action: /say This is you:  http://www.doingitwrong.com/
created_on: 1178966474
enabled: 1
owner: pragma_
rate_limit: 15
ref_count: 4
ref_user: pragma_
type: text

<yz>
action: /call understood
created_on: 1203601730
enabled: 1
last_referenced_in: kate
last_referenced_on: 1469576242.43058
owner: kate`
rate_limit: 15
ref_count: 25
ref_user: kate!~kate@unaffiliated/kate
type: text

<zalgo>
action: http://www.centernegative.com/2009/03/zalgo-he-comes/
created_on: 1262652805
enabled: 1
last_referenced_in: pragma-
last_referenced_on: 1390762746.52149
owner: pragma_
rate_limit: 15
ref_count: 10
ref_user: pragma-!~chaos@unaffiliated/pragmatic-chaos
type: text

<{>
action: /call compiler_block $nick $channel
created_on: 1329860884.76944
edited_by: pragma-!~chaos@unaffiliated/pragmatic-chaos
edited_on: 1393967624.45297
enabled: 1
last_referenced_in: prev
last_referenced_on: 1491132471.78402
owner: pragma_
preserve_whitespace: 1
rate_limit: 0
ref_count: 3990
ref_user: prev!~prev@unaffiliated/prev
type: text

< >
action: a unicode space
created_on: 1297992159.54207
enabled: 1
last_referenced_in: ##c
last_referenced_on: 1297992163.80021
owner: kulp
rate_limit: 15
ref_count: 1
ref_user: kulp
type: text

